{"version":3,"sources":["/Users/matsko/code/angular/dist/packages-dist/core/bundles/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","TypeDecorator","cls","annotations","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","obj","undefined","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","Optional","SkipSelf","Self","Inject","formatError","text","charAt","substr","context","parts","JSON","replace","NEW_LINE","getClosureSafeProperty","objWithPropertyToExtract","GET_PROPERTY_NAME","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","reversed","slice","reverse","tokenStrs","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","first","cyclicDependencyError","instantiationError","originalException","originalStack","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","parentCtor","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","destroy","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","reduce","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","state","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","nodeIndex","eventName","event","nodeDef","startView","componentView","handleEvent","root","declaredViewContainer","parentView","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","template","outputIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","bindView","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","depDefs","moduleDef","providersByKey","initNgModule","_def","provDef","NOT_CREATED$1","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","prevView","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","createProviderInstance","NOT_CREATED","_createProviderInstance","createPipeInstance","allowPrivateServices","createClass","createDirectiveInstance","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","cdView","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","binding_1","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","constants","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","valueStr","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","newParent","currentRenderParent","validateNode","isPrivateService","isComponent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentFlags","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","bindingStart","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","RendererFactory2","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","applyProviderOverridesToElement","elIndex","elementIndicesWithOverwrittenProviders","hasOverrrides","applyProviderOverrides","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","__proto__","__assign","assign","s","n","_desc","enumerable","configurable","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","split","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","NG_TOKEN_PATH","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","displayName","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","_donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","onDestroy","listener","bootstrapModuleFactory","moduleFactory","_bootstrapModuleFactoryWithZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","donePromise","_moduleDoBootstrap","bootstrapModule","compilerOptions","_bootstrapModuleWithZone","compilerFactory","compiler","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","tick","isCurrentlyStable","observer","stableSub","unstableSub","_isStable","merge","share","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","componentRef","listeners","_tickScope","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_dirty","_results","_emitter","filter","find","toArray","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","results","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","AUTO_STYLE","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","trigger","group","sequence","keyframes","transition","ɵz","ɵba","ɵbe","ɵbb","ɵbd","ɵbc","ɵbf","ɵy","ɵm","ɵn","ɵo","ɵg","ɵf","ɵh","ɵi","ɵj","ɵk","ɵl","ɵb","ɵc","ɵd","ɵe","ɵp","ɵr","ɵq","ɵu","ɵs","ɵt","ɵa","ɵv","ɵw"],"mappings":";;;;;CAKC,SAAUA,OAAQC,SACC,gBAAZC,UAA0C,mBAAXC,QAAyBF,QAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,yBAA0BA,QAAQ,uBAAwBA,QAAQ,iBACpK,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,UAAW,kBAAmB,wBAAyB,sBAAuB,gBAAiBJ,SACnJA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,SAAWR,OAAOS,GAAGT,OAAOS,GAAGC,WAAWV,OAAOS,GAAGC,WAAWC,UAAUX,OAAOS,KAChIG,KAAM,SAAWV,QAAQW,gBAAgBC,sBAAsBC,oBAAoBC,cAAgB,YAsBrG,SAASC,WAAUC,EAAGC,GAElB,QAASC,MAAOR,KAAKS,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAEP,UAAkB,OAANQ,EAAaI,OAAOC,OAAOL,IAAMC,GAAGT,UAAYQ,EAAER,UAAW,GAAIS,KAgGnF,QAASK,eAAcC,KAAMC,MAAOC,YAAaC,SAM7C,QAASC,kBAAiBC,WACtB,GAAInB,eAAgBkB,kBAEhB,MADAE,UAASC,KAAKrB,KAAMmB,WACbnB,IAEX,IAAqBsB,oBAAqB,GAAI,kBAAsCH,WAC/DI,cAAiC,SAAwBC,KAG1E,GAAqBC,aAAcD,IAAIE,eAAeC,aAClD,IAAyBA,aACzBhB,OAAOiB,eAAeJ,IAAKG,aAAeE,WAAaF,YAE3D,OADAF,aAAYK,KAAKR,oBACVE,IAIX,OAFIP,UACAA,QAAQM,eACLA,cAtBX,GAAqBH,UAAWW,iBAAiBhB,MA6BjD,OALIC,eACAE,iBAAiBnB,UAAYY,OAAOC,OAAOI,YAAYjB,YAE3DmB,iBAAiBnB,UAAUiC,eAAiBlB,KAC5C,iBAAsCmB,cAAgBf,iBAC9B,iBAM5B,QAASa,kBAAiBhB,OACtB,MAAO,YAEH,IAAK,GADDmB,SACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAIpB,MAAO,CACP,GAAqBuB,QAASvB,MAAMwB,MAAM,OAAQL,KAClD,KAAK,GAAqBM,YAAYF,QAClCtC,KAAKwC,UAAYF,OAAOE,YAWxC,QAASC,oBAAmB3B,KAAMC,MAAOC,aAMrC,QAAS0B,yBAkBL,QAASC,gBAAenB,IAAKoB,UAAWC,OAQpC,IALA,GAAqBC,YAAatB,IAAIE,eAAeqB,YACjD,IAAyBA,YACzBpC,OAAOiB,eAAeJ,IAAKuB,YAAclB,WAAakB,YAGnDD,WAAWT,QAAUQ,OACxBC,WAAWhB,KAAK,KAGpB,QADCgB,WAAWD,OAASC,WAAWD,YAAcf,KAAKR,oBAC5CE,IA5BX,IAAK,GADDU,SACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAInC,eAAgB0C,uBAEhB,MADAtB,UAASmB,MAAMvC,KAAMkC,MACdlC,IAEX,IAAqBsB,oBAAqB,KAAM0B,GAAK,uBAA4CC,KAAKV,MAAMS,IAAK,QAAQE,OAAOhB,OAEhI,OADA,gBAAoCiB,WAAa7B,mBAC1CqB,cAqBP,IAAIK,IArCR,GAAqB5B,UAAWW,iBAAiBhB,MA4CjD,OALIC,eACA0B,sBAAsB3C,UAAYY,OAAOC,OAAOI,YAAYjB,YAEhE2C,sBAAsB3C,UAAUiC,eAAiBlB,KACjD,sBAA2CmB,cAAgBS,sBACpDA,sBAQX,QAASU,mBAAkBtC,KAAMC,MAAOC,aAMpC,QAASqC,wBAEL,IAAK,GADDnB,SACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAInC,eAAgBqD,sBAEhB,MADAjC,UAASmB,MAAMvC,KAAMkC,MACdlC,IAEX,IAAqBsD,mBAAoB,KAAMN,GAAK,sBAA2CC,KAAKV,MAAMS,IAAK,QAAQE,OAAOhB,OAC9H,OAAO,UAAuBqB,OAAQzC,MAClC,GAAqBL,aAAc8C,OAAO9C,YAGrB+C,KAAO/C,YAAYiB,eAAe+B,eACnD,YAAiCA,eACjC9C,OAAOiB,eAAenB,YAAagD,eAAiB5B,WAAa4B,cACrED,MAAK1C,MAAQ0C,KAAK9B,eAAeZ,OAAS0C,KAAK1C,UAC/C0C,KAAK1C,MAAM4C,QAAQJ,mBAEvB,IAAIN,IAzBR,GAAqB5B,UAAWW,iBAAiBhB,MAgCjD,OALIC,eACAqC,qBAAqBtD,UAAYY,OAAOC,OAAOI,YAAYjB,YAE/DsD,qBAAqBtD,UAAUiC,eAAiBlB,KAChD,qBAA0CmB,cAAgBoB,qBACnDA,qBAoNX,QAASM,kCAAiCC,yBACtC,MAAkC,OAA3BA,yBACHA,0BAA4BC,wBAAwBC,QAwW5D,QAASC,qBACL,IAAKC,gBAAiB,CAClB,GAAqBC,UAAWC,QAAgB,MAChD,IAAID,UAAYA,SAASE,SACrBH,gBAAkBC,SAASE,aAK3B,KAAK,GADgBC,MAAOzD,OAAO0D,oBAAoBC,IAAIvE,WACjCwE,EAAI,EAAGA,EAAIH,KAAK/B,SAAUkC,EAAG,CACnD,GAAqBC,KAAMJ,KAAKG,EACpB,aAARC,KAA6B,SAARA,KACrB,IAAyBzE,UAAUyE,OAASF,IAAIvE,UAAmB,UACnEiE,gBAAkBQ,MAKlC,MAAOR,iBAMX,QAASS,mBAAkBC,IACvBC,KAAKC,QAAQH,kBAAkB,oBAAqBC,IAOxD,QAASG,gBAAeC,EAAGvE,GACvB,MAAOuE,KAAMvE,GAAkB,gBAANuE,IAA+B,gBAANvE,IAAkBwE,MAAMD,IAAMC,MAAMxE,GAM1F,QAASyE,WAAUC,OACf,GAAqB,gBAAVA,OACP,MAAOA,MAEX,IAAIA,gBAAiBC,OACjB,MAAO,IAAMD,MAAME,IAAIH,WAAWI,KAAK,MAAQ,GAEnD,IAAa,MAATH,MACA,MAAO,GAAKA,KAEhB,IAAIA,MAAMI,eACN,MAAO,GAAKJ,MAAMI,cAEtB,IAAIJ,MAAMnE,KACN,MAAO,GAAKmE,MAAMnE,IAEtB,IAAqBwE,KAAML,MAAMM,UACjC,IAAW,MAAPD,IACA,MAAO,GAAKA,GAEhB,IAAqBE,cAAeF,IAAIG,QAAQ,KAChD,OAAOD,iBAAiB,EAAKF,IAAMA,IAAII,UAAU,EAAGF,cA+BxD,QAASG,YAAWC,cAGhB,MAFA,cAAkCC,gBAAkBF,WACpD,aAAkCJ,SAAW,WAAc,MAAOP,WAAUhF,SACrE,aAgBX,QAAS8F,mBAAkBC,MACvB,MAAoB,kBAATA,OAAuBA,KAAKrE,eAAe,oBAClDqE,KAAKF,kBAAoBF,WAClB,OAGAI,KAyJf,QAASC,iBAAgBC,UACrB,GAAqBC,MAAOC,YAAYF,UACnBvB,GAAK0B,MACLvE,MAAQwE,MACRC,QAAS,EACTC,QAAUT,kBAAkBG,SAASM,QAC1D,IAAIC,YAAaP,UAEbpE,MAAQ,SAA8B4E,aAErC,IAAI,SAA8BC,WACnChC,GAAK,SAA8BgC,eAElC,IAAI,SAA8BC,iBAGlC,IAAI,SAA8BC,SACnCN,QAAS,EACT5B,GAAKoB,kBAAkB,SAA8Bc,cAEpD,CAAA,GAAsB,kBAAXL,SAKZ,KAAMM,aAAY,sGAAuGZ,SAJzHK,SAAS,EACT5B,GAAK6B,QAKT,OAASL,KAAMA,KAAMxB,GAAIA,GAAI4B,OAAQA,OAAQzE,MAAOA,OAMxD,QAASiF,uBAAsB7B,OAC3B,MAAO4B,aAAY,mDAAoD5B,OAO3E,QAAS8B,6BAA4BC,QAASf,UAC1C,GAAIA,SAEA,GADAA,SAAWH,kBAAkBG,UACzBA,mBAAoBf,OAEpB,IAAK,GAAqBX,GAAI,EAAGA,EAAI0B,SAAS5D,OAAQkC,IAClDwC,4BAA4BC,QAASf,SAAS1B,QAGjD,CAAA,GAAwB,kBAAb0B,UAGZ,KAAMY,aAAY,+BAAgCZ,SAEjD,KAAIA,UAAgC,gBAAbA,YAAyBA,SAASM,QAiC1D,KAAMM,aAAY,sBAAuBZ,SA/BzC,IAAqBhB,OAAQa,kBAAkBG,SAASM,SACnCU,iBAAmBjB,gBAAgBC,SACxD,IAAIA,SAASiB,SAAU,EAAM,CAEzB,GAAqBC,eAAgBH,QAAQI,IAAInC,MACjD,IAAIkC,eACA,GAAIA,cAAczC,KAAO2C,kBACrB,KAAMP,uBAAsB7B,WAKhC+B,SAAQM,IAAIrC,MAAOkC,eACflC,MAAOgB,SAASM,QAChBL,QACAI,QAAQ,EACR5B,GAAI2C,kBACJxF,MAAOwE,OAIfpB,OAAQgB,SACRkB,cAAcjB,KAAKpE,MAAOmD,MAAOA,MAAOsC,QAAS,IAErD,GAAqBC,QAASR,QAAQI,IAAInC,MAC1C,IAAIuC,QAAUA,OAAO9C,IAAM2C,kBACvB,KAAMP,uBAAsB7B,MAEhC+B,SAAQM,IAAIrC,MAAOgC,mBAe/B,QAASQ,iBAAgBxC,MAAOuC,OAAQR,QAASU,OAAQC,eACrD,IACI,MAAOC,cAAa3C,MAAOuC,OAAQR,QAASU,OAAQC,eAExD,MAAwBE,GAEdA,YAAaC,SACfD,EAAI,GAAIC,OAAMD,GAElB,IAAqBE,MAAOF,EAAEG,oBAAsBH,EAAEG,uBAMtD,MALAD,MAAKrE,QAAQuB,OACTuC,QAAUA,OAAO3F,OAASoG,WAE1BT,OAAO3F,MAAQwE,OAEbwB,GAWd,QAASD,cAAa3C,MAAOuC,OAAQR,QAASU,OAAQC,eAClD,GAAqB9F,MACrB,IAAI2F,OAAQ,CAIR,GADA3F,MAAQ2F,OAAO3F,MACXA,OAASoG,SACT,KAAMH,OAAMI,YAAc,sBAEzB,IAAIrG,QAAUwE,MAAO,CACtBmB,OAAO3F,MAAQoG,QACf,IAAqBE,KAAMC,OACN9B,OAASkB,OAAOlB,OAChB5B,GAAK8C,OAAO9C,GACZ2D,WAAab,OAAOtB,KACpBA,KAAOG,KAC5B,IAAIgC,WAAWhG,OAAQ,CACnB6D,OACA,KAAK,GAAqB3B,GAAI,EAAGA,EAAI8D,WAAWhG,OAAQkC,IAAK,CACzD,GAAqB+D,WAAYD,WAAW9D,GACvBgD,QAAUe,UAAUf,QACpBgB,YAAwB,EAAVhB,QAA8BP,QAAQI,IAAIkB,UAAUrD,OAASmD,MAChGlC,MAAKpE,KAAK2F,gBAEVa,UAAUrD,MAAOsD,YAAavB,QAG7BuB,aAA2B,EAAVhB,QAAiDG,OAAhBc,cAAkC,EAAVjB,QAA6B,KAAOkB,SAASC,sBAGhIlB,OAAO3F,MAAQA,MAAQyE,OAAS,KAAMtD,GAAK,IAAyBC,KAAKV,MAAMS,IAAK,QAAQE,OAAOgD,QAAYxB,GAAGnC,MAAM4F,IAAKjC,WAIjIrE,OAAQ6F,OAAON,IAAInC,MAAO0C,cAE9B,OAAO9F,MACP,IAAImB,IAMR,QAASmD,aAAYF,UACjB,GAAqBC,MAAOG,MACPsC,aAAe,SAA8BzC,IAClE,IAAIyC,cAAgBA,aAAatG,OAAQ,CACrC6D,OACA,KAAK,GAAqB3B,GAAI,EAAGA,EAAIoE,aAAatG,OAAQkC,IAAK,CAC3D,GAAqBgD,SAAU,EACVtC,MAAQa,kBAAkB6C,aAAapE,GAC5D,IAAIU,gBAAiBC,OACjB,IAAK,GAAqB0D,GAAI,EAAoBnH,YAAcwD,MAAO2D,EAAInH,YAAYY,OAAQuG,IAAK,CAChG,GAAqBzF,YAAa1B,YAAYmH,EAC1CzF,sBAAsB0F,WAAY1F,YAAc0F,SAChDtB,QAAoB,EAAVA,QAELpE,qBAAsB2F,WAAY3F,YAAc2F,SACrDvB,UAAoB,EAEfpE,qBAAsB4F,OAAQ5F,YAAc4F,KACjDxB,UAAoB,EAGpBtC,MADK9B,qBAAsB6F,QACnB,WAAgC/D,MAGhCa,kBAAkB3C,YAItC+C,KAAKpE,MAAOmD,MAAOA,MAAOsC,QAASA,eAGtC,IAAI,SAA8BZ,YAAa,CAChD,GAAqB1B,OAAQa,kBAAkB,SAA8Ba,YAC7ET,QAAUjB,MAAOA,MAAOsC,QAAS,QAEhC,MAAKoB,cAAkBnC,YAAaP,WAErC,KAAMY,aAAY,kBAAqBZ,SAE3C,OAAOC,MAOX,QAAS+C,aAAYC,KAAMf,KACvBe,KAAOA,MAA2B,OAAnBA,KAAKC,OAAO,IAAeD,KAAKC,OAAO,IAAMjB,YAAcgB,KAAKE,OAAO,GAAKF,IAC3F,IAAqBG,SAAUrE,UAAUmD,IACzC,IAAIA,cAAejD,OACfmE,QAAUlB,IAAIhD,IAAIH,WAAWI,KAAK,YAEjC,IAAmB,gBAAR+C,KAAkB,CAC9B,GAAqBmB,SACrB,KAAK,GAAqB9E,OAAO2D,KAC7B,GAAIA,IAAIzG,eAAe8C,KAAM,CACzB,GAAqB3C,OAAQsG,IAAI3D,IACjC8E,OAAMxH,KAAK0C,IAAM,KAAwB,gBAAV3C,OAAqB0H,KAAKvE,UAAUnD,OAASmD,UAAUnD,SAG9FwH,QAAU,IAAMC,MAAMlE,KAAK,MAAQ,IAEvC,MAAO,uBAAyBiE,QAAU,MAAQH,KAAKM,QAAQC,SAAU,QAO7E,QAAS5C,aAAYqC,KAAMf,KACvB,MAAO,IAAIL,OAAMmB,YAAYC,KAAMf,MAOvC,QAASuB,wBAAuBC,0BAC5B,IAAK,GAAqBnF,OAAOmF,0BAC7B,GAAIA,yBAAyBnF,OAASoF,kBAClC,MAAOpF,IAGf,MAAMsD,OAAM,SAoBhB,QAAS+B,iBAAgBC,OACrB,MAAO,OAA2BC,qBAMtC,QAASC,kBAAiBF,OACtB,MAAO,OAA2BG,sBAMtC,QAASC,gBAAeJ,OACpB,MAAO,OAA2BK,eAAiBC,mBAOvD,QAASA,oBAAmBC,SAExB,IAAK,GADD/H,WACKH,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCG,OAAOH,GAAK,GAAKC,UAAUD,GAE/BkI,SAAQP,MAAMvH,MAAM8H,QAAS/H,QAgHjC,QAASgI,cAAaC,QAASC,eAC3B,GAAqBC,KAAMF,QAAU,gBAAkBC,wBAAyB1C,OAAQ0C,cAAcD,QAAUC,eAC3FV,MAAQhC,MAAM2C,IAEnC,OADA,OAA2BR,sBAAwBO,cAC5CV;;;;;;;AAkBX,QAASY,sBAAqBtG,MAE1B,IAAK,GADgBkB,QACKf,EAAI,EAAGA,EAAIH,KAAK/B,SAAUkC,EAAG,CACnD,GAAIe,IAAIG,QAAQrB,KAAKG,KAAM,EAEvB,MADAe,KAAIxD,KAAKsC,KAAKG,IACPe,GAEXA,KAAIxD,KAAKsC,KAAKG,IAElB,MAAOe,KAMX,QAASqF,wBAAuBvG,MAC5B,GAAIA,KAAK/B,OAAS,EAAG,CACjB,GAAqBuI,UAAWF,qBAAqBtG,KAAKyG,QAAQC,WAC7CC,UAAYH,SAASzF,IAAI,SAAU6F,GAAK,MAAOhG,WAAUgG,EAAE/F,QAChF,OAAO,KAAO8F,UAAU3F,KAAK,QAAU,IAE3C,MAAO,GAaX,QAAS6F,gBAAeC,SAAU1G,IAAK2G,0BAA2BX,eAC9D,GAAqBpG,OAAQI,KACR4G,OAASD,0BAA0B/G,MACnC0F,MAA2BU,cAAgBF,aAAac,OAAQZ,eAAiB1C,MAAMsD,OAM5G,OALAtB,OAAMuB,OAASA,OACfvB,MAAM1F,KAAOA,KACb0F,MAAMwB,WAAaJ,UACnBpB,MAAMqB,0BAA4BA,0BAClC,MAA2BlB,sBAAwBO,cAC5CV,MAQX,QAASuB,QAAOH,SAAU1G,KACtBxE,KAAKsL,UAAUxJ,KAAKoJ,UACpBlL,KAAKoE,KAAKtC,KAAK0C,KAEfxE,KAAKuK,QAAUvK,KAAKmL,0BAA0BnL,KAAKoE,MAmBvD,QAASmH,iBAAgBL,SAAU1G,KAC/B,MAAOyG,gBAAeC,SAAU1G,IAAK,SAAUJ,MAC3C,GAAqBoH,OAAQxG,UAAUZ,KAAK,GAAGa,MAC/C,OAAO,mBAAqBuG,MAAQ,IAAMb,uBAAuBvG,QAsBzE,QAASqH,uBAAsBP,SAAU1G,KACrC,MAAOyG,gBAAeC,SAAU1G,IAAK,SAAUJ,MAC3C,MAAO,wCAA0CuG,uBAAuBvG,QAiChF,QAASsH,oBAAmBR,SAAUS,kBAAmBC,cAAepH,KACpE,MAAOyG,gBAAeC,SAAU1G,IAAK,SAAUJ,MAC3C,GAAqBoH,OAAQxG,UAAUZ,KAAK,GAAGa,MAC/C,OAAO0G,mBAAkBpB,QAAU,mCAAqCiB,MAAQ,IAAMb,uBAAuBvG,MAAQ,KACtHuH,mBAcP,QAASE,sBAAqB5F,UAC1B,MAAO6B,OAAM,4EAA8E7B,UAkC/F,QAAS6F,mBAAkBC,WAAYC,QAEnC,IAAK,GADgBC,cACK1H,EAAI,EAAoB2H,GAAKF,OAAO3J,OAAQkC,EAAI2H,GAAI3H,IAAK,CAC/E,GAAqB4H,WAAYH,OAAOzH,EACnC4H,YAAiC,GAApBA,UAAU9J,OAIxB4J,UAAUnK,KAAKqK,UAAUhH,IAAIH,WAAWI,KAAK,MAH7C6G,UAAUnK,KAAK,KAMvB,MAAOgG,OAAM,sCAAyC9C,UAAU+G,YAAc,KAC1EE,UAAU7G,KAAK,MAAQ,2GAEvBJ,UAAU+G,YAAc,mCAkBhC,QAASK,kBAAiBvJ,OACtB,MAAOiF,OAAM,SAAWjF,MAAQ,sBAiBpC,QAASwJ,+CAA8CC,UAAWC,WAC9D,MAAOzE,OAAM,0DAA4DwE,UAAY,IAAMC,WA0I/F,QAASC,QAAOC,GACZ,MAAoB,kBAANA,GAyXlB,QAASC,qCAAoCC,sBACzC,MAAKA,sBAGEA,qBAAqBxH,IAAI,SAAUyH,qBACtC,GAAqBC,eAAgBD,oBAAoB7G,KACpC9D,cAAgB4K,cAAc5K,cAC9B6K,eAAiBF,oBAAoB1K,KAAO0K,oBAAoB1K,OACrF,OAAO,KAAKD,cAAcgB,KAAKV,MAAMN,eAAgB,QAAQiB,OAAO4J,uBAO5E,QAASC,eAAcC,MACnB,GAAqBC,aAActM,OAAOuM,eAAeF,KAAKjN,WACzCoN,WAAaF,YAAcA,YAAYxM,YAAc,IAG1E,OAAO0M,aAAcxM,OAsQzB,QAASyM,0BAAyBnH,UAC9B,GAAqBoH,WACAC,YACrB,IAAIrH,SAASW,SAAU,CACnB,GAAqBA,UAAWd,kBAAkBG,SAASW,SAC3DyG,WAAYE,UAAUlO,QAAQuH,UAC9B0G,aAAeE,iBAAiB5G,cAE3BX,UAASU,aACd0G,UAAY,SAAUI,eAAiB,MAAOA,gBAC9CH,cAAgBI,qBAAqBC,QAAQC,cAAcxG,IAAInB,SAASU,gBAEnEV,SAASS,YACd2G,UAAYpH,SAASS,WACrB4G,aAAeO,sBAAsB5H,SAASS,WAAYT,SAASC,QAGnEmH,UAAY,WAAc,MAAOpH,UAASQ,UAC1C6G,aAAeQ,YAEnB,OAAO,IAAIC,2BAA0BV,UAAWC,cAUpD,QAASU,2BAA0B/H,UAC/B,MAAO,IAAIgI,6BAA4BL,cAAcxG,IAAInB,SAASM,UAAW6G,yBAAyBnH,WAAYA,SAASiB,QAAS,GAOxI,QAASgH,4BAA2BC,WAChC,GAAqBC,YAAaC,oBAAoBF,cACjCG,SAAWF,WAAWjJ,IAAI6I,2BAC1BO,oBAAsBC,iCAAiCF,SAAU,GAAIhK,KAC1F,OAAOY,OAAMuJ,KAAKF,oBAAoBjM,UAU1C,QAASkM,kCAAiCL,UAAWO,wBACjD,IAAK,GAAqBnK,GAAI,EAAGA,EAAI4J,UAAU9L,OAAQkC,IAAK,CACxD,GAAqB0B,UAAWkI,UAAU5J,GACrBoK,SAAWD,uBAAuBtH,IAAInB,SAASzB,IAAIoK,GACxE,IAAID,SAAU,CACV,GAAI1I,SAASkB,gBAAkBwH,SAASxH,cACpC,KAAMkF,+CAA8CsC,SAAU1I,SAElE,IAAIA,SAASkB,cACT,IAAK,GAAqByB,GAAI,EAAGA,EAAI3C,SAAS4I,kBAAkBxM,OAAQuG,IACpE+F,SAASE,kBAAkB/M,KAAKmE,SAAS4I,kBAAkBjG,QAI/D8F,wBAAuBpH,IAAIrB,SAASzB,IAAIoK,GAAI3I,cAG/C,CACD,GAAqBgB,kBAAmB,MAEpCA,kBADAhB,SAASkB,cACU,GAAI8G,6BAA4BhI,SAASzB,IAAKyB,SAAS4I,kBAAkBhE,QAAS5E,SAASkB,eAG3FlB,SAEvByI,uBAAuBpH,IAAIrB,SAASzB,IAAIoK,GAAI3H,mBAGpD,MAAOyH,wBAOX,QAASL,qBAAoBF,UAAW7I,KAepC,MAdA6I,WAAUW,QAAQ,SAAUvO,GACxB,GAAIA,YAAawO,MACbzJ,IAAIxD,MAAOyE,QAAShG,EAAGqG,SAAUrG,QAEhC,IAAIA,GAAiB,gBAALA,IAAoD6H,SAAnC,EAAuB7B,QACzDjB,IAAIxD,KAAsB,OAEzB,CAAA,KAAIvB,YAAa2E,QAIlB,KAAM2G,sBAAqBtL,EAH3B8N,qBAAoB9N,EAAG+E,QAMxBA,IAOX,QAASuI,uBAAsB9B,WAAYiD,cACvC,GAAKA,aAGA,CACD,GAAqBC,UAAWD,aAAa7J,IAAI,SAAU+J,GAAK,OAAQA,IACxE,OAAOF,cAAa7J,IAAI,SAAU+J,GAAK,MAAOC,eAAcpD,WAAYmD,EAAGD,YAJ3E,MAAOzB,kBAAiBzB,YAWhC,QAASyB,kBAAiBzB,YACtB,GAAqBC,QAASuB,UAAUzK,WAAWiJ,WACnD,KAAKC,OACD,QACJ,IAAIA,OAAOoD,KAAK,SAAUC,GAAK,MAAY,OAALA,IAClC,KAAMvD,mBAAkBC,WAAYC,OAExC,OAAOA,QAAO7G,IAAI,SAAUkK,GAAK,MAAOF,eAAcpD,WAAYsD,EAAGrD,UAQzE,QAASmD,eAAcpD,WAAYuD,SAAUtD,QACzC,GAAqB/G,OAAQ,KACRsK,UAAW,CAChC,KAAKrK,MAAMsK,QAAQF,UACf,MAAIA,oBAAoBtG,QACbyG,kBAAkBH,SAASrK,MAAOsK,SAAU,MAG5CE,kBAAkBH,SAAUC,SAAU,KAIrD,KAAK,GADgBG,YAAa,KACRnL,EAAI,EAAGA,EAAI+K,SAASjN,SAAUkC,EAAG,CACvD,GAAqBoL,eAAgBL,SAAS/K,EAC1CoL,yBAAyBZ,MACzB9J,MAAQ0K,cAEHA,wBAAyB3G,QAC9B/D,MAAQ0K,cAAc1K,MAEjB0K,wBAAyB9G,UAC9B0G,UAAW,EAENI,wBAAyB5G,OAAQ4G,wBAAyB7G,UAC/D4G,WAAaC,cAERA,wBAAyBC,kBAC9B3K,MAAQ0K,eAIhB,GADA1K,MAAQa,kBAAkBb,OACb,MAATA,MACA,MAAOwK,mBAAkBxK,MAAOsK,SAAUG,WAG1C,MAAM5D,mBAAkBC,WAAYC,QAS5C,QAASyD,mBAAkBxK,MAAOsK,SAAUG,YACxC,MAAO,IAAIhC,sBAAqBE,cAAcxG,IAAInC,OAAQsK,SAAUG,YAupBxE,QAASG,eAAc3E,SAAUxG,IAE7B,IAAK,GADgBY,KAAM,GAAIJ,OAAMgG,SAAS4E,WAAWzN,QAC/BkC,EAAI,EAAGA,EAAI2G,SAAS4E,WAAWzN,SAAUkC,EAC/De,IAAIf,GAAKG,GAAGwG,SAAS6E,mBAAmBxL,GAE5C,OAAOe;;;;;;;AA6BX,QAAS0K,WAAU7H,KAGf,QAASA,KAA2B,kBAAbA,KAAI8H,KAO/B,QAASC,cAAa/H,KAElB,QAASA,KAAgC,kBAAlBA,KAAIgI,UAuH/B,QAASC,+BACL,MAAO,GAAKC,cAAgBA,cAAgBA,cAchD,QAASA,eACL,MAAOC,QAAOC,aAAa,GAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WAoGpD,QAASC,eACL,KAAM,IAAI7I,OAAM,kCA0MpB,QAAS8I,yBAAwBC,WAC7B,GAAqB/G,OAAQhC,MAAM,kCAAoC9C,UAAU6L,WAAa,iDAE9F,OADA,OAA2BC,iBAAmBD,UACvC/G,MAuMX,QAASiH,aACL,GAAqBC,KAAM,QAAsE,GACjG,UAAIA,OACAC,MAAQD,IAAW,UAEfE,OAASD,MAAc,QAChB,GAUnB,QAASE,aAAYlF,UAAWmF,OAE5B,MADc,UAAVA,QAAoBA,MAAQ,MACzBF,OAAOC,YAAYlF,UAAWmF,OAQzC,QAASC,OAAMC,MAAOC,aAElB,MADAN,OAAMO,WAAWF,MAAOC,aACjBA,YAOX,QAASE,gBAAeC,UAAWC,QAC/B,MAAOV,OAAMW,eAAeF,UAAWC,QAM3C,QAASE,cAAaC,OAClBb,MAAMY,aAAaC,OAuBvB,QAASC,WAAUC,KAAMC,MACrB,MAAO,MA+gBX,QAASC,SAOT,QAASC,aAAYC,MACjB,GAAqB,GAAjBA,KAAKC,WAAkBD,KAAKE,uBAAyBF,KAAKG,SAC1D,IACIH,KAAKC,WACLD,KAAKI,iBAAiBC,KAAK,MAE/B,QAEI,GADAL,KAAKC,YACAD,KAAKE,qBACN,IACIF,KAAKM,kBAAkB,WAAc,MAAON,MAAKO,SAASF,KAAK,QAEnE,QACIL,KAAKG,UAAW,IAUpC,QAASK,kCAAiCR,MACtCA,KAAKS,OAAST,KAAKS,OAAOC,MACtBhS,KAAM,UACNiS,YAAgCC,eAAiB,GACjDC,aAAc,SAAUC,SAAUtO,QAASrB,OAAQ4P,KAAMC,UAAWC,WAChE,IAEI,MADAC,SAAQlB,MACDc,SAASK,WAAWhQ,OAAQ4P,KAAMC,UAAWC,WAExD,QACIG,QAAQpB,QAGhBqB,SAAU,SAAUP,SAAUtO,QAASrB,OAAQmQ,SAAUN,UAAWC,UAAWM,QAC3E,IAEI,MADAL,SAAQlB,MACDc,SAASU,OAAOrQ,OAAQmQ,SAAUN,UAAWC,UAAWM,QAEnE,QACIH,QAAQpB,QAGhByB,UAAW,SAAUX,SAAUtO,QAASrB,OAAQuQ,cAC5CZ,SAASa,QAAQxQ,OAAQuQ,cACrBlP,UAAYrB,SAGe,aAAvBuQ,aAAaE,QACb5B,KAAKE,qBAAuBwB,aAAaG,UACzC9B,YAAYC,OAEgB,aAAvB0B,aAAaE,SAClB5B,KAAK8B,qBAAuBJ,aAAaK,aAIrDC,cAAe,SAAUlB,SAAUtO,QAASrB,OAAQuG,OAGhD,MAFAoJ,UAASmB,YAAY9Q,OAAQuG,OAC7BsI,KAAKM,kBAAkB,WAAc,MAAON,MAAKkC,QAAQ7B,KAAK3I,UACvD,KAQnB,QAASwJ,SAAQlB,MACbA,KAAKC,WACDD,KAAKG,WACLH,KAAKG,UAAW,EAChBH,KAAKmC,WAAW9B,KAAK,OAO7B,QAASe,SAAQpB,MACbA,KAAKC,WACLF,YAAYC,MA+XhB,QAASoC,sBAAqBC,QAC1BC,mBAAqBD,OA8BzB,QAASE,kBACL,GAAIC,eACA,KAAM,IAAI9M,OAAM,gDAEpB+M,WAAW,EAWf,QAASC,aAEL,MADAF,iBAAiB,EACVC,SAsBX,QAASE,gBAAe7J,UACpB,GAAI8J,YAAcA,UAAUC,YACvBD,UAAU9J,SAAS9D,IAAI8N,0BAA0B,GAClD,KAAM,IAAIpN,OAAM,gFAEpBkN,WAAY9J,SAAS9D,IAAI+N,YACzB,IAAqBC,OAAQlK,SAAS9D,IAAIiO,qBAAsB,KAGhE,OAFID,QACAA,MAAMtG,QAAQ,SAAUwG,MAAQ,MAAOA,UACpCN,UAWX,QAASO,uBAAsBC,sBAAuB1U,KAAMqN,WACtC,SAAdA,YAAwBA,aAC5B,IAAqBsH,QAAS,GAAI7F,gBAAe,aAAe9O,KAChE,OAAO,UAAU4U,gBACU,SAAnBA,iBAA6BA,kBACjC,IAAqBC,UAAWC,aAShC,OARKD,YAAYA,SAASzK,SAAS9D,IAAI8N,0BAA0B,KACzDM,sBACAA,sBAAsBrH,UAAUjL,OAAOwS,gBAAgBxS,QAASqD,QAASkP,OAAQhP,UAAU,KAG3FsO,eAAetM,SAAS7H,OAAOuN,UAAUjL,OAAOwS,gBAAgBxS,QAASqD,QAASkP,OAAQhP,UAAU,OAGrGoP,eAAeJ,SAU9B,QAASI,gBAAeC,eACpB,GAAqBH,UAAWC,aAChC,KAAKD,SACD,KAAM,IAAI7N,OAAM,sBAEpB,KAAK6N,SAASzK,SAAS9D,IAAI0O,cAAe,MACtC,KAAM,IAAIhO,OAAM,uFAEpB,OAAO6N,UAQX,QAASI,mBACDf,YAAcA,UAAUC,WACxBD,UAAUgB,UASlB,QAASJ,eACL,MAAOZ,aAAcA,UAAUC,UAAYD,UAAY,KAwB3D,QAASiB,8BAA6BC,aAAcC,OAAQzC,UACxD,IACI,GAAqB0C,QAAS1C,UAC9B,OAAI1D,WAAUoG,QACHA,OAAOC,MAAM,SAAUxO,GAG1B,KAFAsO,QAAOzD,kBAAkB,WAAc,MAAOwD,cAAa7B,YAAYxM,KAEjEA,IAGPuO,OAEX,MAAwBvO,GAGpB,KAFAsO,QAAOzD,kBAAkB,WAAc,MAAOwD,cAAa7B,YAAYxM,KAEjEA,GA8bd,QAASyO,QAAOC,KAAMC,IAClB,GAAqB3T,OAAQ0T,KAAK9Q,QAAQ+Q,GACtC3T,QAAQ,GACR0T,KAAKE,OAAO5T,MAAO,GAgL3B,QAAS6T,uBAAsB9H,GAAIvP,SAC/B,GAAqBsP,UAAWgI,gBAAgBvP,IAAIwH,GACpD,IAAID,SACA,KAAM,IAAI7G,OAAM,mCAAqC8G,GAAK,MAAQD,SAASiI,WAAW9V,KAAO,OAASzB,QAAQuX,WAAW9V,KAE7H6V,iBAAgBrP,IAAIsH,GAAIvP,SAc5B,QAASwX,kBAAiBjI,IACtB,GAAqBvP,SAAUsX,gBAAgBvP,IAAIwH,GACnD,KAAKvP,QACD,KAAM,IAAIyI,OAAM,qBAAuB8G,GAAK,UAChD,OAAOvP,SAyQX,QAASyX,SAAQP,MACb,MAAOA,MAAKQ,OAAO,SAAUC,KAAMC,MAC/B,GAAqBC,UAAWhS,MAAMsK,QAAQyH,MAAQH,QAAQG,MAAQA,IACtE,OAAO,MAA0B/T,OAAOgU,eA4GhD,QAASC,eAActV,MAAOuV,WAAYC,YACtC,IAAKxV,MACD,KAAM,IAAIiG,OAAM,gBAAkBuP,WAAa,SAAWD,WAAa,IAE3E,OAAOvV,OA4YX,QAASyV,kBAAiBC,UACtB,MAAOA,UAASpS,IAAI,SAAUqR,IAAM,MAAOA,IAAGgB,gBAQlD,QAASC,uBAAsBC,QAASC,UAAWC,SAC/CF,QAAQG,WAAW/I,QAAQ,SAAUgJ,MAC7BA,eAAgBC,gBACZJ,UAAUG,OACVF,QAAQ9V,KAAKgW,MAEjBL,sBAAsBK,KAAMH,UAAWC,YAUnD,QAASI,oBAAmBC,WAAYN,UAAWC,SAC3CK,qBAAsBF,eACtBE,WAAWJ,WAAW/I,QAAQ,SAAUgJ,MAChCH,UAAUG,OACVF,QAAQ9V,KAAKgW,MAEbA,eAAgBC,eAChBC,mBAAmBF,KAAMH,UAAWC,WAYpD,QAASM,cAAaC,YAClB,MAAOC,wBAAuBhR,IAAI+Q,aAAe,KAUrD,QAASE,gBAAeP,MACpBM,uBAAuB9Q,IAAIwQ,KAAKK,WAAYL,MAMhD,QAASQ,0BAAyBR,MAC9BM,uBAAuBG,OAAOT,KAAKK;;;;;;;AA0BvC,QAASK,cAAa1T,EAAGvE,GACrB,GAAqBkY,qBAAsBC,mBAAmB5T,GACzC6T,oBAAsBD,mBAAmBnY,EAC9D,IAAIkY,qBAAuBE,oBACvB,MAAOC,mBAAkB9T,EAAGvE,EAAGiY,aAG/B,IAAqBK,WAAY/T,IAAmB,gBAANA,IAA+B,kBAANA,IAClDgU,UAAYvY,IAAmB,gBAANA,IAA+B,kBAANA,GACvE,SAAKkY,sBAAuBI,WAAcF,sBAAuBG,YAItDjU,eAAeC,EAAGvE,GAiGrC,QAASmY,oBAAmBvQ,KACxB,QAAK4Q,WAAW5Q,OAETjD,MAAMsK,QAAQrH,QACdA,cAAe7D,OAEdP,qBAAuBoE,MAQnC,QAASyQ,mBAAkB9T,EAAGvE,EAAGyY,YAG7B,IAFA,GAAqBC,WAAYnU,EAAEf,uBACdmV,UAAY3Y,EAAEwD,yBACtB,CACT,GAAqBoV,OAAQF,UAAUG,OAClBC,MAAQH,UAAUE,MACvC,IAAID,MAAMG,MAAQD,MAAMC,KACpB,OAAO,CACX,IAAIH,MAAMG,MAAQD,MAAMC,KACpB,OAAO,CACX,KAAKN,WAAWG,MAAMtX,MAAOwX,MAAMxX,OAC/B,OAAO,GAQnB,QAAS0X,iBAAgBpR,IAAKzD,IAC1B,GAAIQ,MAAMsK,QAAQrH,KACd,IAAK,GAAqB5D,GAAI,EAAGA,EAAI4D,IAAI9F,OAAQkC,IAC7CG,GAAGyD,IAAI5D,QAMX,KAFA,GAAqBJ,UAAWgE,IAAIpE,uBACfkT,KAAO,SAClBA,KAAO9S,SAASiV,QAAY,MAClC1U,GAAGuS,KAAKpV,OAQpB,QAASkX,YAAWS,GAChB,MAAa,QAANA,IAA4B,kBAANA,IAAiC,gBAANA,IAonC5D,QAASC,kBAAiBxC,KAAMyC,gBAAiBC,aAC7C,GAAqBC,eAAgB3C,KAAK2C,aAC1C,IAAsB,OAAlBA,cACA,MAAOA,cACX,IAAqBC,YAAa,CAIlC,OAHIF,cAAeC,cAAgBD,YAAYtX,SAC3CwX,WAAaF,YAAYC,gBAEtBA,cAAgBF,gBAAkBG,WAsmB7C,QAASC,yBAAwB/T,MAC7B,MAAOA,MAAW,YAAYA;;;;;;;AAsRlC,QAASgU,2BACL,MAAOC,wBAKX,QAASC,2BACL,MAAOC,wBAMX,QAASC,gBAAeC,QACpB,MAAOA,SAAU,QAuMrB,QAASC,YAAWC,KAAMzX,OACtB,MAAyByX,MAAKC,MAAM1X,OAuBxC,QAAS2X,eAAcF,KAAMzX,OACzB,MAAyByX,MAAKC,MAAM1X,OAexC,QAAS4X,gBAAeH,KAAMzX,OAC1B,MAAyByX,MAAKC,MAAM1X,OAexC,QAAS6X,sBAAqBJ,KAAMzX,OAChC,MAAyByX,MAAKC,MAAM1X,OAQxC,QAAS8X,aAAYL,KAAMzX,OACvB,MAAyByX,MAAKC,MAAM1X;;;;;;;AA2DxC,QAAS+X,6CAA4CvR,QAASwR,SAAUC,UAAWC,cAC/E,GAAqBtQ,KAAM,8GAAgHoQ,SAAW,sBAAwBC,UAAY,IAM1L,OALIC,gBACAtQ,KACI,wJAGDuQ,eAAevQ,IAAKpB,SAO/B,QAAS4R,uBAAsBC,IAAK7R,SAOhC,MANM6R,eAAepT,SAGjBoT,IAAM,GAAIpT,OAAMoT,IAAI3V,aAExB4V,iBAAiBD,IAAK7R,SACf6R,IAOX,QAASF,gBAAevQ,IAAKpB,SACzB,GAAqB6R,KAAM,GAAIpT,OAAM2C,IAErC,OADA0Q,kBAAiBD,IAAK7R,SACf6R,IAOX,QAASC,kBAAiBD,IAAK7R,SAC3B,IAAyBU,qBAAuBV,QAChD,IAAyBc,cAAgBd,QAAQ+R,SAASnY,KAAKoG,SAMnE,QAASgS,kBAAiBH,KACtB,QAASrR,gBAAgBqR,KAM7B,QAASI,oBAAmB3J,QACxB,MAAO,IAAI7J,OAAM,wDAA0D6J,QAoB/E,QAAS4J,UAAStW,OACd,GAAqBT,KAAMgX,eAAepU,IAAInC,MAK9C,OAJKT,OACDA,IAAMQ,UAAUC,OAAS,IAAMuW,eAAeC,KAC9CD,eAAelU,IAAIrC,MAAOT,MAEvBA,IASX,QAASkX,aAAYpB,KAAMqB,QAASC,WAAY/Z,OAC5C,GAAIA,gBAAiBga,cAAc,CAC/Bha,MAAQA,MAAMia,OACd,IAAqBC,kBAAmBzB,KAAK0B,IAAIzB,MAAMoB,SAASM,aAAeL,WAC1Df,SAAWP,KAAK4B,UAAUH,iBAC3ClB,oBAAoBgB,gBACpBhB,SAAWA,SAASiB,SAExBxB,KAAK4B,UAAUH,kBAAoB,GAAIF,cAAahB,UAExD,MAAOhZ,OAQX,QAASsa,qBAAoB7Z,QACzB,OACIsM,GAAIwN,2BACJC,OAAQ/Z,OAAO+Z,OACfC,cAAeha,OAAOga,cACtBC,KAAMja,OAAOia,MAQrB,QAASC,sBAAqBzW,MAC1B,GAAIA,MAAQA,KAAK6I,KAAOwN,2BAA4B,CAEhD,GAAqBK,UAAmC,MAAtB1W,KAAKuW,eAAyBvW,KAAKuW,gBAAkBI,kBAAkBC,MACrG5W,KAAKsW,OAAOha,QAAU1B,OAAOyD,KAAK2B,KAAKwW,MAAMla,MAC7Coa,UACA1W,KAAK6I,GAAK,IAAMgO,mBAGhB7W,KAAK6I,GAAKiO,uBAMlB,MAHI9W,OAAQA,KAAK6I,KAAOiO,yBACpB9W,KAAO,MAEJA,MAAQ,KASnB,QAAS+W,cAAaxC,KAAM0B,IAAKJ,WAAY/Z,OACzC,GAAqBqa,WAAY5B,KAAK4B,SACtC,WAAkB,EAAb5B,KAAKyC,QACLlY,eAAeqX,UAAUF,IAAIC,aAAeL,YAAa/Z,QAYlE,QAASmb,uBAAsB1C,KAAM0B,IAAKJ,WAAY/Z,OAClD,QAAIib,aAAaxC,KAAM0B,IAAKJ,WAAY/Z,SACpCyY,KAAK4B,UAAUF,IAAIC,aAAeL,YAAc/Z,OACzC,GAWf,QAASob,uBAAsB3C,KAAM0B,IAAKJ,WAAY/Z,OAClD,GAAqBgZ,UAAWP,KAAK4B,UAAUF,IAAIC,aAAeL,WAClE,IAAkB,EAAbtB,KAAKyC,QAAsCvE,aAAaqC,SAAUhZ,OACnE,KAAM+Y,6CAA4CsC,SAASC,mBAAmB7C,KAAM0B,IAAInZ,OAAQgY,SAAUhZ,MAAmD,KAA9B,EAAbyY,KAAKyC,QAO/H,QAASK,yBAAwB9C,MAE7B,IADA,GAAqB+C,UAAW/C,KACzB+C,UACsB,EAArBA,SAASrB,IAAI5K,QACbiM,SAASN,OAAS,GAEtBM,SAAWA,SAASC,qBAAuBD,SAAS3V,OAQ5D,QAAS6V,uCAAsCjD,KAAMkD,SAEjD,IADA,GAAqBH,UAAW/C,KACzB+C,UAAYA,WAAaG,SAC5BH,SAASN,OAAS,GAClBM,SAAWA,SAASC,qBAAuBD,SAAS3V,OAU5D,QAAS+V,eAAcnD,KAAMoD,UAAWC,UAAWC,OAC/C,IACI,GAAqBC,SAAUvD,KAAK0B,IAAIzB,MAAMmD,WACzBI,UAA4B,SAAhBD,QAAQzM,MACrCoJ,cAAcF,KAAMoD,WAAWK,cAC/BzD,IAEJ,OADA8C,yBAAwBU,WACjBZ,SAASc,YAAY1D,KAAMoD,UAAWC,UAAWC,OAE5D,MAAwB/V,GAEpByS,KAAK2D,KAAK/H,aAAa7B,YAAYxM,IAO3C,QAASqW,uBAAsB5D,MAC3B,GAAIA,KAAK5S,OAAQ,CACb,GAAqByW,YAAa7D,KAAK5S,MACvC,OAAO8S,eAAc2D,WAA+B7D,KAAmB,cAAEzX,OAE7E,MAAO,MASX,QAASub,cAAa9D,MAClB,GAAqB6D,YAAa7D,KAAK5S,MACvC,OAAIyW,YAC0B7D,KAAmB,cAAE5S,OAGxC,KAQf,QAAS2W,YAAW/D,KAAM0B,KACtB,OAAoB,UAAZA,IAAI5K,OACR,IAAK,GACD,MAAOoJ,eAAcF,KAAM0B,IAAInZ,OAAOyb,aAC1C,KAAK,GACD,MAAOjE,YAAWC,KAAM0B,IAAInZ,OAAO0b,YAQ/C,QAASC,sBAAqBjb,OAAQzC,MAClC,MAAOyC,QAASA,OAAS,IAAMzC,KAAOA,KAM1C,QAAS2d,iBAAgBnE,MACrB,QAASA,KAAK5S,WAA6D,MAA7B4S,KAAmB,cAAElJ,OAMvE,QAASsN,gBAAepE,MACpB,SAASA,KAAK5S,QAA4D,MAA7B4S,KAAmB,cAAElJ,OAMtE,QAASuN,eAAcC,SACnB,MAAO,IAAMA,QAAU,GAM3B,QAASC,wBAAuBC,mBAC5B,GAAqBC,mBACAC,gBAAkB,EAClBC,aAarB,OAZIH,oBACAA,kBAAkBhQ,QAAQ,SAAU9L,IAChC,GAAI4b,SAAU5b,GAAG,GAAIkc,UAAYlc,GAAG,EACb,iBAAZ4b,UACPG,eAAeH,SAAWM,UAC1BF,iBAAmBL,cAAcC,UAGjCK,WAAWL,SAAWM,aAIzBH,eAAgBA,eAAgBE,WAAYA,WAAYD,gBAAiBA,iBAMtF,QAASG,cAAajZ,MAClB,MAAOA,MAAKf,IAAI,SAAUtD,OACtB,GAAqBoD,OACAmM,KAQrB,OAPIlM,OAAMsK,QAAQ3N,QACduP,MAAQvP,MAAM,GAAIoD,MAAQpD,MAAM,KAGhCuP,MAAQ,EACRnM,MAAQpD,QAEHuP,MAAOA,MAAOnM,MAAOA,MAAOsW,SAAUA,SAAStW,UAShE,QAASma,wBAAuB9E,KAAM+E,WAAYrD,KAC9C,GAAqBsD,cAAetD,IAAIsD,YACxC,OAAIA,cACmD,KAAzB,EAArBA,aAAalO,QAC0C,KAAlC,SAArBkO,aAAalO,QACMkO,aAAqB,QAAEC,uBAA+DD,aAAqB,QAAwB,sBAAEhD,gBAAkBI,kBAAkB8C,OAGtLhF,cAAcF,KAAyB0B,IAAiB,aAAEnZ,OAAOyb,cAL5E,OASOe,WASf,QAASI,mBAAkBpgB,SACvB,GAAqBwC,OAA4B6d,iBAAiBtY,IAAI/H,QAMtE,OALKwC,SACDA,MAAQxC,QAAQ,WAAc,MAAOsgB,QACrC9d,MAAMxC,QAAUA,QAChBqgB,iBAAiBpY,IAAIjI,QAASwC,QAE3BA,MAMX,QAAS+d,iBAAgBtF,MACrB,GAAqBuF,eAErB,OADAC,sBAAqBxF,KAAM,EAAiBlS,OAAWA,OAAWyX,aAC3DA,YAUX,QAASC,sBAAqBxF,KAAM3I,OAAQsG,WAAY8H,YAAaxc,QAElD,IAAXoO,SACAsG,WAAaqC,KAAK0F,SAAS/H,WAAWoG,WAAW/D,KAAyBA,KAAK0B,IAAuB,sBAE1GiE,wBAAwB3F,KAAM3I,OAAQ,EAAG2I,KAAK0B,IAAIzB,MAAMlY,OAAS,EAAG4V,WAAY8H,YAAaxc,QAYjG,QAAS0c,yBAAwB3F,KAAM3I,OAAQuO,WAAYC,SAAUlI,WAAY8H,YAAaxc,QAC1F,IAAK,GAAqBgB,GAAI2b,WAAY3b,GAAK4b,SAAU5b,IAAK,CAC1D,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EAC1B,IAAhBsZ,QAAQzM,OACRgP,gBAAgB9F,KAAMuD,QAASlM,OAAQsG,WAAY8H,YAAaxc,QAGpEgB,GAAKsZ,QAAQwC,YAYrB,QAASC,2BAA0BhG,KAAMiG,eAAgB5O,OAAQsG,WAAY8H,YAAaxc,QAEtF,IADA,GAAqBid,UAAWlG,KACzBkG,WAAa/B,gBAAgB+B,WAChCA,SAAWA,SAAS9Y,MAMxB,KAAK,GAJgB+Y,UAA4B,SAAa/Y,OACzCgZ,UAAYtC,aAA8B,UAC1C8B,WAA8B,UAAcrd,MAAQ,EACpDsd,SAA4B,UAActd,MAAyB,UAAcwd,WAC5E9b,EAAI2b,WAAY3b,GAAK4b,SAAU5b,IAAK,CAC1D,GAAqBsZ,SAA2B,SAAa7B,IAAIzB,MAAMhW,EACnEsZ,SAAQ0C,iBAAmBA,gBAC3BH,gBAAiC,SAAcvC,QAASlM,OAAQsG,WAAY8H,YAAaxc,QAG7FgB,GAAKsZ,QAAQwC,WAEjB,IAAsB,SAAa3Y,OAAQ,CAEvC,GAAqBiZ,gBAAiBrG,KAAK2D,KAAK2C,iBAAiBL,eACjE,IAAII,eACA,IAAK,GAAqBpc,GAAI,EAAGA,EAAIoc,eAAete,OAAQkC,IACxDsc,qBAAqBvG,KAAMqG,eAAepc,GAAIoN,OAAQsG,WAAY8H,YAAaxc,SAc/F,QAAS6c,iBAAgB9F,KAAMuD,QAASlM,OAAQsG,WAAY8H,YAAaxc,QACrE,GAAoB,EAAhBsa,QAAQzM,MACRkP,0BAA0BhG,KAAyBuD,QAAkB,UAAEhb,MAAO8O,OAAQsG,WAAY8H,YAAaxc,YAE9G,CACD,GAAqBud,IAAKzC,WAAW/D,KAAMuD,QAC3C,IAAe,IAAXlM,QAAmD,SAAhBkM,QAAQzM,OACnB,GAAvByM,QAAQkD,cAKT,GAH2B,GAAvBlD,QAAQkD,cACRF,qBAAqBvG,KAAMwG,GAAInP,OAAQsG,WAAY8H,YAAaxc,QAEzC,GAAvBsa,QAAQkD,aAAiD,CACzD,GAAqBP,UAAWhG,cAAcF,KAAMuD,QAAQhb,OAAOkb,aACnE8C,sBAAqBL,SAAUM,GAAInP,OAAQsG,WAAY8H,YAAaxc,aAIxEsd,sBAAqBvG,KAAMwG,GAAInP,OAAQsG,WAAY8H,YAAaxc,OAEpE,IAAoB,SAAhBsa,QAAQzM,MAER,IAAK,GADgB4P,eAAmCxG,cAAcF,KAAMuD,QAAQhb,OAAqB,cAAEoe,eACjFjW,EAAI,EAAGA,EAAIgW,cAAc3e,OAAQ2I,IACvD8U,qBAAqBkB,cAAchW,GAAI2G,OAAQsG,WAAY8H,YAAaxc,OAG5D,GAAhBsa,QAAQzM,QAAmDyM,QAAgB,QAAE/c,MAC7Emf,wBAAwB3F,KAAM3I,OAAQkM,QAAQhb,MAAQ,EAAGgb,QAAQhb,MAAQgb,QAAQwC,WAAYpI,WAAY8H,YAAaxc,SAalI,QAASsd,sBAAqBvG,KAAM+D,WAAY1M,OAAQsG,WAAY8H,YAAaxc,QAC7E,GAAqByc,UAAW1F,KAAK0F,QACrC,QAAQrO,QACJ,IAAK,GACDqO,SAASkB,YAAYjJ,WAAYoG,WACjC,MACJ,KAAK,GACD2B,SAASmB,aAAalJ,WAAYoG,WAAY0B,YAC9C,MACJ,KAAK,GACDC,SAASoB,YAAYnJ,WAAYoG,WACjC,MACJ,KAAK,GACgB,OAAWvc,KAAKuc,aAS7C,QAASgD,gBAAevgB,MACpB,GAAgB,MAAZA,KAAK,GAAY,CACjB,GAAqBwgB,OAA2BxgB,KAAKwgB,MAAMC,aAC3D,QAAQD,MAAM,GAAIA,MAAM,IAE5B,OAAQ,GAAIxgB,MAMhB,QAAS0gB,kBAAiBC,UAEtB,IAAK,GADgBrQ,OAAQ,EACH7M,EAAI,EAAGA,EAAIkd,SAASpf,OAAQkC,IAClD6M,OAASqQ,SAASld,GAAG6M,KAEzB,OAAOA,OAOX,QAASsQ,aAAYC,WAAYC,gBAE7B,IAAK,GADgBxL,QAAS,GACJ7R,EAAI,EAAGA,EAAiB,EAAbod,WAAgBpd,GAAQ,EACzD6R,OAASA,OAASwL,eAAerd,GAAKsd,kBAAkBD,eAAerd,EAAI,GAE/E,OAAO6R,QAASwL,eAA4B,EAAbD,YAyBnC,QAASG,mBAAkBH,WAAYI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC3G,OAAQtB,YACJ,IAAK,GACD,MAAOI,IAAKF,kBAAkBG,IAAMC,EACxC,KAAK,GACD,MAAOF,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,EACrE,KAAK,GACD,MAAOJ,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,EACR,KAAK,GACD,MAAON,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,EACrC,KAAK,GACD,MAAOR,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,EAClE,KAAK,GACD,MAAOV,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IAAMC,EAC/F,KAAK,GACD,MAAOZ,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,EACrC,KAAK,GACD,MAAOd,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,GAAKhB,kBAAkBiB,IAAMC,EAClE,KAAK,GACD,MAAOhB,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,GAAKhB,kBAAkBiB,IAAMC,GAAKlB,kBAAkBmB,IAAMC,EAC/F,SACI,KAAM,IAAInb,OAAM,6CAO5B,QAAS+Z,mBAAkBpV,GACvB,MAAY,OAALA,EAAYA,EAAElH,WAAa,GAkBtC,QAAS2d,WAAU9R,MAAO0N,kBAAmByB,eAAgBF,WAAYrC,YAAamF,iBAClF/R,OAAS,CACT,IAAIpO,IAAK6b,uBAAuBC,mBAAoBC,eAAiB/b,GAAG+b,eAAgBE,WAAajc,GAAGic,WAAYD,gBAAkBhc,GAAGgc,gBACpHoE,SAAWD,gBAAkB1D,kBAAkB0D,iBAAmB,IACvF,QAEItgB,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGzE,eAAgBA,eAAgBC,gBAAiBA,gBAAiBC,WAAYA,WAAYsB,eAAgBA,eAAgBF,WAAYA,WAC9JoB,YACAV,aAAc,EACd0C,WACA/L,SACIgM,GAAI,KACJ5iB,KAAM,KACN6iB,MAAO,KAAMP,SAAUA,SACvBQ,kBAAmB,KACnB7F,cAAe,KACfwB,sBAAuB,KACvBsE,gBAAiB,KACjBC,aAAc,KACd9F,YAAaA,aAAe2B,MAEhC1Z,SAAU,KACViD,KAAM,KACN6a,MAAO,KACPC,UAAW,MAiBnB,QAASC,YAAW7S,MAAO0N,kBAAmByB,eAAgBF,WAAY6D,iBAAkBC,WAAY1C,SAAUgC,QAASzF,YAAaD,cAAewB,uBAChI,SAAf4E,aAAyBA,eACxBnG,cACDA,YAAc2B,KAElB,IAAI3c,IAAK6b,uBAAuBC,mBAAoBC,eAAiB/b,GAAG+b,eAAgBE,WAAajc,GAAGic,WAAYD,gBAAkBhc,GAAGgc,gBACpH0E,GAAsB,KACtB5iB,KAAwB,IACzCojB,oBACAE,GAAK/C,eAAe6C,kBAAmBR,GAAKU,GAAG,GAAItjB,KAAOsjB,GAAG,IAEjE3C,SAAWA,YAEX,KAAK,GADgB4C,aAAc,GAAInf,OAAMuc,SAASpf,QAC5BkC,EAAI,EAAGA,EAAIkd,SAASpf,OAAQkC,IAAK,CACvD,GAAI+f,IAAK7C,SAASld,GAAIwc,aAAeuD,GAAG,GAAIC,mBAAqBD,GAAG,GAAIE,wBAA0BF,GAAG,GACjGG,GAAKpD,eAAekD,oBAAqBG,KAAOD,GAAG,GAAIE,OAASF,GAAG,GAClDG,gBAAmC,OACnCC,OAA0B,MAC/C,QAAuB,GAAf9D,cACJ,IAAK,GACD8D,OAA0B,uBAC1B,MACJ,KAAK,GACL,IAAK,GACDD,gBAAmC,wBAG3CP,YAAY9f,IACN6M,MAAO2P,aAAc2C,GAAIgB,KAAM5jB,KAAM6jB,OAAQG,gBAAiBH,OAAQC,gBAAiBA,gBAAiBC,OAAQA,QAE1HpB,QAAUA,WAEV,KAAK,GADgBsB,YAAa,GAAI7f,OAAMue,QAAQphB,QAC1BkC,EAAI,EAAGA,EAAIkf,QAAQphB,OAAQkC,IAAK,CACtD,GAAIygB,IAAKvB,QAAQlf,GAAIhB,OAASyhB,GAAG,GAAIrH,UAAYqH,GAAG,EACpDD,YAAWxgB,IACPwB,KAAM,EACNxC,OAAyB,OAAUoa,UAAWA,UAC9Cnb,SAAU,MAGlB2hB,WAAaA,cACb,IAAqBR,OAA0BQ,WAAWhf,IAAI,SAAUnC,IACpE,GAAIkhB,kBAAmBlhB,GAAG,GAAInB,MAAQmB,GAAG,GACrCohB,GAAK/C,eAAe6C,kBAAmBR,GAAKU,GAAG,GAAItjB,KAAOsjB,GAAG,EACjE,QAAQV,GAAI5iB,KAAMe,QAOtB,OALA0d,uBAAwB/C,qBAAqB+C,uBACzCxB,gBACA3M,OAAS,UAEbA,OAAS,GAGLvO,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGzE,eAAgBA,eAAgBC,gBAAiBA,gBAAiBC,WAAYA,WAAYsB,eAAgBA,eAAgBF,WAAYA,WAC9JoB,SAAU4C,YACVtD,aAAcS,iBAAiB6C,aAC/BZ,QAASsB,WACTrN,SACIgM,GAAIA,GACJ5iB,KAAMA,KACN6iB,MAAOA,MACPP,SAAU,KAEVQ,kBAAmB,KACnB7F,cAAeA,eAAiB,KAChCwB,sBAAuBA,sBACvBsE,gBAAiB,KACjBC,aAAc,KACd9F,YAAaA,aAAe2B,MAEhC1Z,SAAU,KACViD,KAAM,KACN6a,MAAO,KACPC,UAAW,KAEf,IAAII,IAQR,QAASa,eAAc3K,KAAM+E,WAAYrD,KACrC,GAGqBxF,IAHA0O,MAA2BlJ,IAAY,QACvCmJ,mBAAqB7K,KAAK2D,KAAKmH,eAC/BpF,SAAW1F,KAAK0F,QAErC,IAAI1F,KAAK5S,SAAWyd,mBAAoB,CAEhC3O,GADA0O,MAAMpkB,KACDkf,SAASiF,cAAcC,MAAMpkB,KAAMokB,MAAMxB,IAGzC1D,SAASqF,cAAc,GAEhC,IAAqBC,UAAWlG,uBAAuB9E,KAAM+E,WAAYrD,IACrEsJ,WACAtF,SAASkB,YAAYoE,SAAU9O,QAInCA,IAAKwJ,SAASuF,kBAAkBJ,mBAEpC,IAAID,MAAMvB,MACN,IAAK,GAAqBpf,GAAI,EAAGA,EAAI2gB,MAAMvB,MAAMthB,OAAQkC,IAAK,CAC1D,GAAIvB,IAAKkiB,MAAMvB,MAAMpf,GAAImf,GAAK1gB,GAAG,GAAIwiB,OAASxiB,GAAG,GAAInB,MAAQmB,GAAG,EAChEgd,UAASyF,aAAajP,GAAIgP,OAAQ3jB,MAAO6hB,IAGjD,MAAOlN,IASX,QAASkP,wBAAuBpL,KAAMkG,SAAUxE,IAAKxF,IACjD,IAAK,GAAqBjS,GAAI,EAAGA,EAAIyX,IAAIyH,QAAQphB,OAAQkC,IAAK,CAC1D,GAAqBohB,QAAS3J,IAAIyH,QAAQlf,GACrBqhB,mBAAqBC,0BAA0BvL,KAAM0B,IAAInZ,MAAO2b,qBAAqBmH,OAAOpiB,OAAQoiB,OAAOhI,YAC3GmI,aAAeH,OAAOpiB,OACtBwiB,aAAezL,IACd,eAAlBqL,OAAOpiB,SACPuiB,aAAe,KACfC,aAAevF,SAEnB,IAAqBwF,YAA+BD,aAAa/F,SAASiG,OAAOH,cAAgBtP,GAAImP,OAAOhI,UAAWiI,mBACrHtL,MAAiB,YAAE0B,IAAIqH,YAAc9e,GAAKyhB,YASpD,QAASH,2BAA0BvL,KAAMzX,MAAO8a,WAC5C,MAAO,UAAUC,OAAS,MAAOH,eAAcnD,KAAMzX,MAAO8a,UAAWC,QAiB3E,QAASsI,6BAA4B5L,KAAM0B,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAChF,GAAqBC,SAAU7K,IAAIyF,SAASpf,OACvBykB,SAAU,CAqB/B,OApBID,SAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGmK,MACxDW,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGoK,MACxDU,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGqK,MACxDS,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGsK,MACxDQ,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGuK,MACxDO,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGwK,MACxDM,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAGyK,MACxDK,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAG0K,MACxDI,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAG2K,MACxDG,SAAU,GACVD,QAAU,GAAKE,2BAA2BzM,KAAM0B,IAAK,EAAG4K,MACxDE,SAAU,GACPA,QAQX,QAASE,8BAA6B1M,KAAM0B,IAAK1Z,QAE7C,IAAK,GADgBwkB,UAAU,EACLviB,EAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAC5CwiB,2BAA2BzM,KAAM0B,IAAKzX,EAAGjC,OAAOiC,MAChDuiB,SAAU,EAElB,OAAOA,SASX,QAASC,4BAA2BzM,KAAM0B,IAAKJ,WAAY/Z,OACvD,IAAKmb,sBAAsB1C,KAAM0B,IAAKJ,WAAY/Z,OAC9C,OAAO,CAEX,IAAqBolB,SAAUjL,IAAIyF,SAAS7F,YACvBsL,OAAS1M,cAAcF,KAAM0B,IAAInZ,OACjCskB,cAAgBD,OAAO5I,cACvBxd,KAA0BmmB,QAAa,IAC5D,QAAwB,GAAhBA,QAAQ7V,OACZ,IAAK,GACDgW,oBAAoB9M,KAAM2M,QAASE,cAAeF,QAAQvD,GAAI5iB,KAAMe,MACpE,MACJ,KAAK,GACDwlB,gBAAgB/M,KAAM6M,cAAermB,KAAMe,MAC3C,MACJ,KAAK,GACDylB,gBAAgBhN,KAAM2M,QAASE,cAAermB,KAAMe,MACpD,MACJ,KAAK,GACD,GAAqB0lB,UAAwB,SAAZvL,IAAI5K,OACjB,GAAhB6V,QAAQ7V,MACR8V,OAAOnJ,cACPzD,IACJkN,oBAAmBD,SAAUN,QAASE,cAAermB,KAAMe,OAGnE,OAAO,EAWX,QAASulB,qBAAoB9M,KAAM2M,QAASE,cAAezD,GAAI5iB,KAAMe,OACjE,GAAqB+iB,iBAAkBqC,QAAQrC,gBAC1B6C,YAAc7C,gBAAkBtK,KAAK2D,KAAKyJ,UAAUC,SAAS/C,gBAAiB/iB,OAASA,KAC5G4lB,aAA6B,MAAfA,YAAsBA,YAAYliB,WAAa,IAC7D,IAAqBya,UAAW1F,KAAK0F,QACxB,OAATne,MACAme,SAASyF,aAAa0B,cAAermB,KAAM2mB,YAAa/D,IAGxD1D,SAAS4H,gBAAgBT,cAAermB,KAAM4iB,IAUtD,QAAS2D,iBAAgB/M,KAAM6M,cAAermB,KAAMe,OAChD,GAAqBme,UAAW1F,KAAK0F,QACjCne,OACAme,SAAS6H,SAASV,cAAermB,MAGjCkf,SAAS8H,YAAYX,cAAermB,MAW5C,QAASwmB,iBAAgBhN,KAAM2M,QAASE,cAAermB,KAAMe,OACzD,GAAqB4lB,aAAcnN,KAAK2D,KAAKyJ,UAAUC,SAASI,gBAAgBC,MAAwB,MACxG,IAAmB,MAAfP,YAAqB,CACrBA,YAAcA,YAAYliB,UAC1B,IAAqB0iB,MAAOhB,QAAQpC,MACxB,OAARoD,OACAR,aAA4BQ,UAIhCR,aAAc,IAElB,IAAqBzH,UAAW1F,KAAK0F,QAClB,OAAfyH,YACAzH,SAASkI,SAASf,cAAermB,KAAM2mB,aAGvCzH,SAASmI,YAAYhB,cAAermB,MAW5C,QAAS0mB,oBAAmBlN,KAAM2M,QAASE,cAAermB,KAAMe,OAC5D,GAAqB+iB,iBAAkBqC,QAAQrC,gBAC1B6C,YAAc7C,gBAAkBtK,KAAK2D,KAAKyJ,UAAUC,SAAS/C,gBAAiB/iB,OAASA,KAC5GyY,MAAK0F,SAASoI,YAAYjB,cAAermB,KAAM2mB,aAwBnD,QAASY,kBAAiBjX,MAAOnM,MAAOpD,MAAOqE,MAC3C,GAAqBoiB,SAAUnJ,aAAajZ,KAC5C,QAEIrD,OAAO,EACPqD,KAAMoiB,QAASlX,MAAOA,MAAOnM,MAAOA,MAAOpD,MAAOA,OAO1D,QAAS0mB,WAAUpa,WAEf,IAAK,GADgBqa,mBACKjkB,EAAI,EAAGA,EAAI4J,UAAU9L,OAAQkC,IAAK,CACxD,GAAqB0B,UAAWkI,UAAU5J,EAC1C0B,UAASpD,MAAQ0B,EACjBikB,eAAejN,SAAStV,SAAShB,QAAUgB,SAE/C,OAEI5G,QAAS,KACTmpB,eAAgBA,eAChBra,UAAWA,WAOnB,QAASsa,cAAalM,MAGlB,IAAK,GAFgBP,KAAMO,KAAKmM,KACXva,UAAYoO,KAAKzM,WAAa,GAAI5K,OAAM8W,IAAI7N,UAAU9L,QACjDkC,EAAI,EAAGA,EAAIyX,IAAI7N,UAAU9L,OAAQkC,IAAK,CAC5D,GAAqBokB,SAAU3M,IAAI7N,UAAU5J,EAC7C4J,WAAU5J,GAAqB,KAAhBokB,QAAQvX,MAAkCwX,cACrDC,0BAA0BtM,KAAMoM,UAS5C,QAASG,oBAAmBvM,KAAMwM,OAAQphB,eAEtC,GADsB,SAAlBA,gBAA4BA,cAAgBc,SAASC,oBACtC,EAAfqgB,OAAO3X,MACP,MAAO2X,QAAO9jB,KAKlB,IAHmB,EAAf8jB,OAAO3X,QACPzJ,cAAgB,MAED,EAAfohB,OAAO3X,MACP,MAAOmL,MAAKyM,QAAQ5hB,IAAI2hB,OAAO9jB,MAAO0C,cAE1C,IAAqBshB,aAAcF,OAAOxN,QAC1C,QAAQ0N,aACJ,IAAKC,uBACL,IAAKC,qBACD,MAAO5M,MAEf,GAAqB6M,aAAc7M,KAAKmM,KAAKF,eAAeS,YAC5D,IAAIG,YAAa,CACb,GAAqBC,kBAAmB9M,KAAKzM,WAAWsZ,YAAYvmB,MAKpE,OAJIwmB,oBAAqBT,gBACrBS,iBAAmB9M,KAAKzM,WAAWsZ,YAAYvmB,OAC3CgmB,0BAA0BtM,KAAM6M,cAEjCC,iBAEX,MAAO9M,MAAKyM,QAAQ5hB,IAAI2hB,OAAO9jB,MAAO0C,eAO1C,QAASkhB,2BAA0BS,SAAUF,aACzC,GAAqBG,WACrB,QAA4B,UAApBH,YAAYhY,OAChB,IAAK,KACDmY,WAAaC,aAAaF,SAAUF,YAAYvnB,MAAOunB,YAAYljB,KACnE,MACJ,KAAK,MACDqjB,WAAaE,aAAaH,SAAUF,YAAYvnB,MAAOunB,YAAYljB,KACnE,MACJ,KAAK,MACDqjB,WAAaT,mBAAmBQ,SAAUF,YAAYljB,KAAK,GAC3D,MACJ,KAAK,KACDqjB,WAAaH,YAAYvnB,MAGjC,MAAO0nB,YAQX,QAASC,cAAaF,SAAUtc,KAAM9G,MAClC,GACqBqjB,YADAG,IAAMxjB,KAAK7D,MAEhC,QAAQqnB,KACJ,IAAK,GACDH,WAAa,GAAIvc,KACjB,MACJ,KAAK,GACDuc,WAAa,GAAIvc,MAAK8b,mBAAmBQ,SAAUpjB,KAAK,IACxD,MACJ,KAAK,GACDqjB,WACI,GAAIvc,MAAK8b,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IACtF,MACJ,KAAK,GACDqjB,WAAa,GAAIvc,MAAK8b,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IACtI,MACJ,SAEI,IAAK,GADgByjB,WAAY,GAAIzkB,OAAMwkB,KACjBnlB,EAAI,EAAGA,EAAImlB,IAAKnlB,IACtColB,UAAUplB,GAAKukB,mBAAmBQ,SAAUpjB,KAAK3B,GAErDglB,YAAa,IAAKvc,KAAK/J,KAAKV,MAAMyK,MAAO,QAAQ9J,OAAOymB,aAEhE,MAAOJ,YAQX,QAASE,cAAaH,SAAUjqB,QAAS6G,MACrC,GACqBqjB,YADAG,IAAMxjB,KAAK7D,MAEhC,QAAQqnB,KACJ,IAAK,GACDH,WAAalqB,SACb,MACJ,KAAK,GACDkqB,WAAalqB,QAAQypB,mBAAmBQ,SAAUpjB,KAAK,IACvD,MACJ,KAAK,GACDqjB,WACIlqB,QAAQypB,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IACrF,MACJ,KAAK,GACDqjB,WAAalqB,QAAQypB,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IAAK4iB,mBAAmBQ,SAAUpjB,KAAK,IACrI,MACJ,SAEI,IAAK,GADgByjB,WAAYzkB,MAAMwkB,KACbnlB,EAAI,EAAGA,EAAImlB,IAAKnlB,IACtColB,UAAUplB,GAAKukB,mBAAmBQ,SAAUpjB,KAAK3B,GAErDglB,YAAalqB,QAAQkD,MAAM,OAAQonB,WAE3C,MAAOJ,YAOX,QAASK,uBAAsBN,SAAUO,YAErC,IAAK,GADgB7N,KAAMsN,SAASZ,KACVnkB,EAAI,EAAGA,EAAIyX,IAAI7N,UAAU9L,OAAQkC,IAAK,CAC5D,GAAqBokB,SAAU3M,IAAI7N,UAAU5J,EAC7C,IAAoB,OAAhBokB,QAAQvX,MAAgC,CACxC,GAAqB0Y,UAAWR,SAASxZ,WAAWvL,EAChDulB,WAAYA,WAAalB,eACzBkB,SAASC;;;;;;;AAwBzB,QAASC,oBAAmB7L,WAAY8L,YAAaC,UAAW5P,MAC5D,GAAqB0G,eAAmCiJ,YAA0B,cAAEhJ,cAClE,QAAdiJ,WAAoC9hB,SAAd8hB,YACtBA,UAAYlJ,cAAc3e,QAE9BiY,KAAKgD,oBAAsBa,WAC3BgM,WAAWnJ,cAAgC,UAAe1G,MAC1D8P,oBAAoBH,YAAa3P,MACjC4C,SAASmN,mBAAmB/P,KAC5B,IAAqBgQ,UAA4B,UAAgB,EAAItJ,cAA+B,UAAgB,GAAK,IACzHuJ,0BAAyBN,YAAaK,SAAUhQ,MAOpD,QAAS8P,qBAAoBI,cAAelQ,MACxC,GAAqBmQ,gBAAiBvM,sBAAsB5D,KAC5D,IAAKmQ,gBAAkBA,iBAAmBD,iBACzB,GAAblQ,KAAKyC,OADT,CAWAzC,KAAKyC,OAAS,EACd,IAAqB2N,gBAAiBD,eAAerH,SAASuH,eACzDD,kBACDA,eAAiBD,eAAerH,SAASuH,oBAE7CD,eAAe5oB,KAAKwY,MAGpBsQ,4BAA+CtQ,KAAY,OAAE0B,IAAwB1B,KAAmB,gBAO5G,QAASsQ,6BAA4BC,QAAShN,SAC1C,KAAoB,EAAhBA,QAAQzM,OAAZ,CAGAyZ,QAAQC,WAAa,EACrBjN,QAAQzM,OAAS,CAEjB,KADA,GAAqB2Z,eAAgBlN,QAAQnW,OACtCqjB,eACHA,cAAczH,YAAc,EAC5ByH,cAAgBA,cAAcrjB,QAQtC,QAASsjB,oBAAmBf,YAAaC,WACrC,GAAqBlJ,eAAmCiJ,YAA0B,cAAEhJ,cAIpF,KAHiB,MAAbiJ,WAAqBA,WAAalJ,cAAc3e,UAChD6nB,UAAYlJ,cAAc3e,OAAS,GAEnC6nB,UAAY,EACZ,MAAO,KAEX,IAAqB5P,MAAO0G,cAAckJ,UAM1C,OALA5P,MAAKgD,oBAAsB,KAC3B2N,gBAAgBjK,cAAekJ,WAE/BhN,SAASmN,mBAAmB/P,MAC5B4Q,iBAAiB5Q,MACVA,KAMX,QAAS6Q,qBAAoB7Q,MACzB,GAAmB,GAAbA,KAAKyC,MAAX,CAGA,GAAqB0N,gBAAiBvM,sBAAsB5D,KAC5D,IAAImQ,eAAgB,CAChB,GAAqBC,gBAAiBD,eAAerH,SAASuH,eAC1DD,kBACAO,gBAAgBP,eAAgBA,eAAejlB,QAAQ6U,OACvD4C,SAASmN,mBAAmB/P,SAUxC,QAAS8Q,kBAAiBnB,YAAaoB,aAAcC,cACjD,GAAqBtK,eAAmCiJ,YAA0B,cAAEhJ,eAC/D3G,KAAO0G,cAAcqK,aAC1CJ,iBAAgBjK,cAAeqK,cACX,MAAhBC,eACAA,aAAetK,cAAc3e,QAEjC8nB,WAAWnJ,cAAesK,aAAchR,MAGxC4C,SAASmN,mBAAmB/P,MAC5B4Q,iBAAiB5Q,KACjB,IAAqBgQ,UAAWgB,aAAe,EAAItK,cAAcsK,aAAe,GAAK,IAErF,OADAf,0BAAyBN,YAAaK,SAAUhQ,MACzCA,KAQX,QAASiQ,0BAAyBN,YAAaK,SAAUhQ,MACrD,GAAqBiR,gBAAiBjB,SAAWjM,WAAWiM,SAA6BA,SAAStO,IAAuB,oBACrHiO,YAAY3L,cACKrG,WAAaqC,KAAK0F,SAAS/H,WAAWsT,gBACtCxL,YAAczF,KAAK0F,SAASD,YAAYwL,eAG7DzL,sBAAqBxF,KAAM,EAAsBrC,WAAY8H,YAAa3X,QAM9E,QAAS8iB,kBAAiB5Q,MACtBwF,qBAAqBxF,KAAM,EAAqB,KAAM,KAAMlS,QAQhE,QAAS+hB,YAAWqB,IAAK3oB,MAAOhB,OAExBgB,OAAS2oB,IAAInpB,OACbmpB,IAAI1pB,KAAKD,OAGT2pB,IAAI/U,OAAO5T,MAAO,EAAGhB,OAQ7B,QAASopB,iBAAgBO,IAAK3oB,OAEtBA,OAAS2oB,IAAInpB,OAAS,EACtBmpB,IAAIC,MAGJD,IAAI/U,OAAO5T,MAAO,GAkB1B,QAAS6oB,wBAAuBC,SAAUC,cAAeC,eAAgBC,OAAQrI,QAASsI,oBACtF,MAAO,IAAIC,mBAAkBL,SAAUC,cAAeC,eAAgBC,OAAQrI,QAASsI,oBAM3F,QAASE,mCAAkCC,kBACvC,MAAO,kBAAsCL,eAyKjD,QAASM,yBAAwB7R,KAAM4K,MAAOgC,QAC1C,MAAO,IAAIkF,mBAAkB9R,KAAM4K,MAAOgC,QAkN9C,QAASmF,yBAAwB/R,MAC7B,MAAO,IAAIgS,UAAShS,MAuJxB,QAASiS,oBAAmBjS,KAAM0B,KAC9B,MAAO,IAAIwQ,cAAalS,KAAM0B,KAsClC,QAASyQ,gBAAenS,KAAM4K,OAC1B,MAAO,IAAIwH,WAAUpS,KAAM4K,OA6B/B,QAASyH,WAAUrS,KAAMzX,OACrB,GAAqBmZ,KAAM1B,KAAK0B,IAAIzB,MAAM1X,MAC1C,IAAgB,EAAZmZ,IAAI5K,MAA6B,CACjC,GAAqB8V,QAAS1M,cAAcF,KAAM0B,IAAInZ,MACtD,OAA0BmZ,KAAY,QAAEoH,SAAW8D,OAAO9D,SAAW8D,OAAO5I,cAE3E,GAAgB,EAAZtC,IAAI5K,MACT,MAAOiJ,YAAWC,KAAM0B,IAAInZ,OAAO0b,UAElC,IAAgB,MAAZvC,IAAI5K,MACT,MAAOqJ,gBAAeH,KAAM0B,IAAInZ,OAAOinB,QAE3C,MAAM,IAAIhiB,OAAM,gDAAkDjF,OAMtE,QAAS+pB,kBAAiBtS,MACtB,MAAO,IAAIuS,iBAAgBvS,KAAK0F,UA2SpC,QAAS8M,mBAAkBlW,WAAYlP,OAAQqlB,oBAAqB/Q,KAChE,MAAO,IAAIgR,cAAapW,WAAYlP,OAAQqlB,oBAAqB/Q,KAyGrE,QAASiR,cAAa7b,MAAO2N,eAAgBsB,WAAYrT,KAAM9G,KAAMnF,MAAO0iB,SACxE,GAAqBhC,YACrB,IAAI1gB,MACA,IAAK,GAAqBmsB,QAAQnsB,OAAO,CACrC,GAAIiC,IAAKjC,MAAMmsB,MAAOjR,aAAejZ,GAAG,GAAI8hB,gBAAkB9hB,GAAG,EACjEye,UAASxF,eACL7K,MAAO,EACPtQ,KAAMosB,KAAMpI,gBAAiBA,gBAC7BpB,GAAI,KACJkB,gBAAiB,KACjBC,OAAQ,MAIpB,GAAqBE,cACrB,IAAItB,QACA,IAAK,GAAqBjhB,YAAYihB,SAClCsB,WAAWjjB,MAAOiE,KAAM,EAAyBvD,SAAUA,SAAUe,OAAQ,KAAMoa,UAAW8F,QAAQjhB,WAI9G,OADA4O,QAAS,MACFsX,KAAKtX,MAAO2N,eAAgBsB,WAAYrT,KAAMA,KAAM9G,KAAMub,SAAUsD,YAQ/E,QAASoI,SAAQ/b,MAAOpE,KAAM9G,MAE1B,MADAkL,QAAS,GACFsX,KAAKtX,MAAO,KAAM,EAAGpE,KAAMA,KAAM9G,MAU5C,QAASkjB,aAAYhY,MAAO2N,eAAgB9Z,MAAOpD,MAAOqE,MACtD,MAAOwiB,MAAKtX,MAAO2N,eAAgB,EAAG9Z,MAAOpD,MAAOqE,MAaxD,QAASwiB,MAAKtX,MAAO0N,kBAAmBuB,WAAYpb,MAAOpD,MAAOqE,KAAMub,SAAUgC,SAC9E,GAAIzgB,IAAK6b,uBAAuBC,mBAAoBC,eAAiB/b,GAAG+b,eAAgBE,WAAajc,GAAGic,WAAYD,gBAAkBhc,GAAGgc,eACpIyE,WACDA,YAEChC,WACDA,YAEJ,IAAqB6G,SAAUnJ,aAAajZ,KAC5C,QAEIrD,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGzE,eAAgBA,eAAgBC,gBAAiBA,gBAAiBC,WAAYA,WACtGsB,gBAAgB,EAAIF,WAAYA,WAAYoB,SAAUA,SACtDV,aAAcS,iBAAiBC,UAAWgC,QAASA,QACnD/L,QAAS,KACTzR,UAAYhB,MAAOA,MAAOpD,MAAOA,MAAOqE,KAAMoiB,SAC9Cpf,KAAM,KACN6a,MAAO,KACPC,UAAW,MAQnB,QAASoJ,wBAAuB9S,KAAM0B,KAClC,MAAmB,MAAZA,IAAI5K,MAAkCic,YAAcC,wBAAwBhT,KAAM0B,KAO7F,QAASuR,oBAAmBjT,KAAM0B,KAG9B,IADA,GAAqBwE,UAAWlG,KACzBkG,SAAS9Y,SAAW+W,gBAAgB+B,WACvCA,SAAWA,SAAS9Y,MAGxB,IAAqB8lB,uBAAuB,CAE5C,OAAOC,aAA+BjN,SAAgB,OAAsBpC,aAAaoC,UAAagN,qBAAyCxR,IAAa,SAAEna,MAA0Bma,IAAa,SAAE9V,MAO3M,QAASwnB,yBAAwBpT,KAAM0B,KAEnC,GAAqBwR,uBAAoC,MAAZxR,IAAI5K,OAAiC,EAE7D0Y,SAAW2D,YAAYnT,KAAyB0B,IAAW,OAAGwR,qBAAyCxR,IAAa,SAAEna,MAA0Bma,IAAa,SAAE9V,KACpL,IAAI8V,IAAIyH,QAAQphB,OACZ,IAAK,GAAqBkC,GAAI,EAAGA,EAAIyX,IAAIyH,QAAQphB,OAAQkC,IAAK,CAC1D,GAAqBohB,QAAS3J,IAAIyH,QAAQlf,GACrBopB,aAAe7D,SAA4BnE,OAAgB,UAAGxV,UAAUyd,oBAAoBtT,KAAyB0B,IAAW,OAAEnZ,MAAO8iB,OAAOhI,WACnKrD,MAAiB,YAAE0B,IAAIqH,YAAc9e,GAAKopB,aAAaE,YAAY5qB,KAAK0qB,cAGlF,MAAO7D,UAQX,QAAS8D,qBAAoBtT,KAAMzX,MAAO8a,WACtC,MAAO,UAAUC,OAAS,MAAOH,eAAcnD,KAAMzX,MAAO8a,UAAWC,QAiB3E,QAASkQ,+BAA8BxT,KAAM0B,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAClF,GAAqBmH,cAAetT,eAAeH,KAAM0B,IAAInZ,OACxCmrB,UAAYD,aAAajE,SACzBhD,SAAU,EACVmH,QAA2B,OAC3BpH,QAAU7K,IAAIyF,SAASpf,MAkD5C,OAjDIwkB,SAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGmK,MAC1CW,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGmK,GAAI8H,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGoK,MAC1CU,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGoK,GAAI6H,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGqK,MAC1CS,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGqK,GAAI4H,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGsK,MAC1CQ,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGsK,GAAI2H,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGuK,MAC1CO,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGuK,GAAI0H,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGwK,MAC1CM,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGwK,GAAIyH,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAGyK,MAC1CK,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAGyK,GAAIwH,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAG0K,MAC1CI,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAG0K,GAAIuH,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAG2K,MAC1CG,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAG2K,GAAIsH,UAErDpH,QAAU,GAAK/J,aAAaxC,KAAM0B,IAAK,EAAG4K,MAC1CE,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAK,EAAG4K,GAAIqH,UAErDA,SACAD,UAAUG,YAAYF,SAER,EAAb3T,KAAKyC,OAA4C,MAAZf,IAAI5K,OAC1C4c,UAAUI,WAEE,OAAZpS,IAAI5K,OACJ4c,UAAUK,YAEPvH,QAQX,QAASwH,gCAA+BhU,KAAM0B,IAAK1Z,QAK/C,IAAK,GAJgByrB,cAAetT,eAAeH,KAAM0B,IAAInZ,OACxCmrB,UAAYD,aAAajE,SACzBhD,SAAU,EACVmH,QAA2B,OACtB1pB,EAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAC5CuY,aAAaxC,KAAM0B,IAAKzX,EAAGjC,OAAOiC,MAClCuiB,SAAU,EACVmH,QAAUC,WAAW5T,KAAMyT,aAAc/R,IAAKzX,EAAGjC,OAAOiC,GAAI0pB,SAYpE,OATIA,UACAD,UAAUG,YAAYF,SAER,EAAb3T,KAAKyC,OAA4C,MAAZf,IAAI5K,OAC1C4c,UAAUI,WAEE,OAAZpS,IAAI5K,OACJ4c,UAAUK,YAEPvH,QAOX,QAASwG,yBAAwBhT,KAAM0B,KAEnC,GAEqBuN,YAFAiE,sBAAoC,KAAZxR,IAAI5K,OAAsC,EAClEgY,YAAcpN,IAAI/V,QAEvC,QAAoB,UAAZ+V,IAAI5K,OACR,IAAK,KACDmY,WAAakE,YAAYnT,KAAyB0B,IAAW,OAAGwR,qBAAuC,YAAgB3rB,MAAwB,YAAgBqE,KAC/J,MACJ,KAAK,MACDqjB,WAAagF,YAAYjU,KAAyB0B,IAAW,OAAGwR,qBAAuC,YAAgB3rB,MAAwB,YAAgBqE,KAC/J,MACJ,KAAK,MACDqjB,WAAaiF,WAAWlU,KAAyB0B,IAAW,OAAGwR,qBAAuC,YAAgBtnB,KAAK,GAC3H,MACJ,KAAK,KACDqjB,WAA8B,YAAgB1nB,MAGtD,MAAO0nB,YAUX,QAASkE,aAAYnT,KAAM4K,MAAOsI,qBAAsBxgB,KAAM9G,MAC1D,GACqBqjB,YADAG,IAAMxjB,KAAK7D,MAEhC,QAAQqnB,KACJ,IAAK,GACDH,WAAa,GAAIvc,KACjB,MACJ,KAAK,GACDuc,WAAa,GAAIvc,MAAKwhB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IACzE,MACJ,KAAK,GACDqjB,WAAa,GAAIvc,MAAKwhB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IACjI,MACJ,KAAK,GACDqjB,WAAa,GAAIvc,MAAKwhB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IACzL,MACJ,SAEI,IAAK,GADgByjB,WAAY,GAAIzkB,OAAMwkB,KACjBnlB,EAAI,EAAGA,EAAImlB,IAAKnlB,IACtColB,UAAUplB,GAAKiqB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK3B,GAEtEglB,YAAa,IAAKvc,KAAK/J,KAAKV,MAAMyK,MAAO,QAAQ9J,OAAOymB,aAEhE,MAAOJ,YAUX,QAASgF,aAAYjU,KAAM4K,MAAOsI,qBAAsBnuB,QAAS6G,MAC7D,GACqBqjB,YADAG,IAAMxjB,KAAK7D,MAEhC,QAAQqnB,KACJ,IAAK,GACDH,WAAalqB,SACb,MACJ,KAAK,GACDkqB,WAAalqB,QAAQmvB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IACxE,MACJ,KAAK,GACDqjB,WAAalqB,QAAQmvB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAChI,MACJ,KAAK,GACDqjB,WAAalqB,QAAQmvB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IAAKsoB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK,IACxL,MACJ,SAEI,IAAK,GADgByjB,WAAYzkB,MAAMwkB,KACbnlB,EAAI,EAAGA,EAAImlB,IAAKnlB,IACtColB,UAAUplB,GAAKiqB,WAAWlU,KAAM4K,MAAOsI,qBAAsBtnB,KAAK3B,GAEtEglB,YAAalqB,QAAQkD,MAAM,OAAQonB,WAE3C,MAAOJ,YA4BX,QAASiF,YAAWlU,KAAM4K,MAAOsI,qBAAsBzE,OAAQphB,eAE3D,GADsB,SAAlBA,gBAA4BA,cAAgBc,SAASC,oBACtC,EAAfqgB,OAAO3X,MACP,MAAO2X,QAAO9jB,KAElB,IAAqB6Y,WAAYxD,IACd,GAAfyO,OAAO3X,QACPzJ,cAAgB,KAEpB,IAAqBshB,aAAcF,OAAOxN,QAU1C,KATI0N,cAAgBwF,4BAGhBjB,wBAA0BtI,QAA4BA,MAAc,QAAEnH,gBAEtEmH,OAAyB,EAAf6D,OAAO3X,QACjBoc,sBAAuB,EACvBtI,MAA2BA,MAAa,QAErC5K,MAAM,CACT,GAAI4K,MACA,OAAQ+D,aACJ,IAAKyF,oBACD,GAAqBlO,UAAWmO,aAAarU,KAAM4K,MAAOsI,qBAC1D,OAAOZ,kBAAiBpM,SAE5B,KAAKoO,mBACD,GAAqBpO,UAAWmO,aAAarU,KAAM4K,MAAOsI,qBAC1D,OAAOhN,UAASR,QAEpB,KAAK6O,oBACD,MAAO,IAAIC,YAAWtU,cAAcF,KAAM4K,MAAMriB,OAAOyb,cAC3D,KAAKyQ,0BACD,MAAOvU,eAAcF,KAAM4K,MAAMriB,OAAOmsB,aAC5C,KAAKC,qBACD,GAAuB/J,MAAc,QAAE9B,SACnC,MAAO5I,eAAcF,KAAM4K,MAAMriB,OAAOugB,QAE5C,MAEJ,KAAKqL,2BACD,GAAqBS,QAASP,aAAarU,KAAM4K,MAAOsI,qBACxD,OAAOnB,yBAAwB6C,OAEnC,KAAKC,qBACD,MAAO1C,gBAAenS,KAAM4K,MAChC,SACI,GAAqBkK,gBAAoC5B,qBAA0CtI,MAAc,QAAEpB,aAAkCoB,MAAc,QAAErB,iBAAmBoF,YACxL,IAAImG,cAAe,CACf,GAAqBrB,cAAetT,eAAeH,KAAM8U,cAAcvsB,MAIvE,OAHIkrB,cAAajE,WAAauD,cAC1BU,aAAajE,SAAWwD,wBAAwBhT,KAAM8U,gBAEnDrB,aAAajE,UAIpC0D,qBAAuB/O,gBAAgBnE,MACvC4K,MAA2B9G,aAAa9D,MACxCA,KAA0BA,KAAY,OAE1C,GAAqBzY,OAAQic,UAAUG,KAAK/S,SAAS9D,IAAI2hB,OAAO9jB,MAAOoqB,sCACvE,OAAIxtB,SAAUwtB,uCACV1nB,gBAAkB0nB,sCAMXxtB,MAEJic,UAAUG,KAAKqL,SAASpe,SAAS9D,IAAI2hB,OAAO9jB,MAAO0C,eAQ9D,QAASgnB,cAAarU,KAAM4K,MAAOsI,sBAC/B,GAAqBhN,SACrB,IAAIgN,qBACAhN,SAAWhG,cAAcF,KAAM4K,MAAMriB,OAAOkb,kBAI5C,KADAyC,SAAWlG,KACJkG,SAAS9Y,SAAW+W,gBAAgB+B,WACvCA,SAAWA,SAAS9Y,MAG5B,OAAO8Y,UAWX,QAAS0N,YAAW5T,KAAMyT,aAAc/R,IAAKJ,WAAY/Z,MAAOosB,SAC5D,GAAgB,MAAZjS,IAAI5K,MAA+B,CACnC,GAAqBoP,UAAWhG,cAAcF,KAAyB0B,IAAW,OAAEnZ,OAAOkb,aAClE,GAArByC,SAASxE,IAAI5K,QACboP,SAASzD,OAAS,GAG1B,GAAqBkK,SAAUjL,IAAIyF,SAAS7F,YACvBpZ,SAA8BykB,QAAa,IAKhE,IADA8G,aAAajE,SAAStnB,UAAYX,MAClB,OAAZma,IAAI5K,MAAgC,CACpC6c,QAAUA,WACV,IAAqBpT,UAAWP,KAAK4B,UAAUF,IAAIC,aAAeL,WAC9Df,oBAAoBgB,gBACpBhB,SAAWA,SAASiB,QAExB,IAAqBwT,WAAYtT,IAAIyF,SAAS7F,WAC9CqS,SAA2BqB,UAA0B,iBACjD,GAAIC,cAAa1U,SAAUhZ,MAA6C,KAAxB,EAAbyY,KAAKyC,QAGhD,MADAzC,MAAK4B,UAAUF,IAAIC,aAAeL,YAAc/Z,MACzCosB,QAOX,QAASuB,iCAAgClV,KAAMuP,YAC3C,GAAMvP,KAAK0B,IAAI8O,UAAYjB,WAI3B,IAAK,GADgBtP,OAAQD,KAAK0B,IAAIzB,MACZhW,EAAI,EAAGA,EAAIgW,MAAMlY,OAAQkC,IAAK,CACpD,GAAqBsZ,SAAUtD,MAAMhW,GAChBkrB,SAAW5R,QAAQnW,MASxC,MARK+nB,UAAY5R,QAAQzM,MAAQyY,YAE7B6F,uBAAuBpV,KAAM/V,EAAGsZ,QAAQzM,MAAQyY,YAEV,KAArChM,QAAQyF,WAAauG,cAEtBtlB,GAAKsZ,QAAQwC,YAEVoP,UAA8B,EAAjBA,SAASre,OACzB7M,IAAMkrB,SAAS5sB,MAAQ4sB,SAASpP,YAE5BoP,SAASlM,iBAAmBsG,YAC5B8F,+BAA+BrV,KAAMmV,SAAU5F,YAEnD4F,SAAWA,SAAS/nB,QAUhC,QAASioB,gCAA+BrV,KAAM4K,MAAO2E,YACjD,IAAK,GAAqBtlB,GAAI2gB,MAAMriB,MAAQ,EAAG0B,GAAK2gB,MAAMriB,MAAQqiB,MAAM7E,WAAY9b,IAAK,CACrF,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EAC1CsZ,SAAQzM,MAAQyY,YAChB6F,uBAAuBpV,KAAM/V,EAAGsZ,QAAQzM,MAAQyY,YAGpDtlB,GAAKsZ,QAAQwC,YASrB,QAASqP,wBAAuBpV,KAAMzX,MAAOgnB,YACzC,GAAqB5jB,UAAWwU,eAAeH,KAAMzX,OAAOinB,QACxD7jB,YAAaonB,cAGjBnQ,SAAS0S,eAAetV,KAAMzX,OACb,QAAbgnB,YACA5jB,SAAS4pB,qBAEI,QAAbhG,YACA5jB,SAAS6pB,wBAEI,QAAbjG,YACA5jB,SAAS8pB,kBAEI,QAAblG,YACA5jB,SAAS+pB,qBAEI,OAAbnG,YACA5jB,SAAS8jB;;;;;;;AAqBjB,QAASkG,UAAS7e,MAAOxC,GAAI6S,UACzB,GAAqB4C,eACrB,KAAK,GAAqB7hB,YAAYif,UAAU,CAC5C,GAAqByO,aAAczO,SAASjf,SAC5C6hB,aAAYviB,MAAOU,SAAUA,SAAU0tB,YAAaA,cAExD,OAEIrtB,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBjD,gBAAgB,EAChBxB,kBACAC,gBAAiB,EACjBC,cACAoB,WAAY,EACZoB,YACAV,aAAc,EACd0C,WACA/L,QAAS,KACTzR,SAAU,KACViD,KAAM,KACN6a,OAASnV,GAAIA,GAAIuhB,SAAUxR,cAAc/P,IAAK6S,SAAU4C,aACxDL,UAAW,MAMnB,QAASoM,eACL,MAAO,IAAIC,WAMf,QAAShG,oBAAmB/P,MAExB,IADA,GAAqBgW,UAAWhW,KAAK0B,IAAIuU,mBAClCjW,KAAK5S,QAAUgX,eAAepE,OAAO,CACxC,GAAqBkW,QAA4BlW,KAAmB,aACpEA,MAAOA,KAAK5S,MAGZ,KAAK,GADgB+oB,KAAMD,OAAO3tB,MAAQ2tB,OAAOnQ,WACvB9b,EAAI,EAAGA,GAAKksB,IAAKlsB,IAAK,CAC5C,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EACzB,UAAhBsZ,QAAQzM,OACQ,UAAhByM,QAAQzM,QACWyM,QAAc,MAAEsS,SAAWG,YAAiCzS,QAAc,MAAEsS,UAChGxV,YAAYL,KAAM/V,GAAGmsB,aAEJ,EAAhB7S,QAAQzM,OAA+B7M,EAAIsZ,QAAQwC,WAAamQ,OAAO3tB,QACjD,SAArBgb,QAAQyF,YACa,UAArBzF,QAAQyF,aAEV/e,GAAKsZ,QAAQwC,aAKzB,GAAyB,UAArB/F,KAAK0B,IAAI8O,UACT,IAAK,GAAqBvmB,GAAI,EAAGA,EAAI+V,KAAK0B,IAAIzB,MAAMlY,OAAQkC,IAAK,CAC7D,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EACzB,WAAhBsZ,QAAQzM,OAA2D,UAAhByM,QAAQzM,OAC5DuJ,YAAYL,KAAM/V,GAAGmsB,WAGzBnsB,GAAKsZ,QAAQwC,YASzB,QAASsQ,qBAAoBrW,KAAMuD,SAC/B,GAAqB+S,WAAYjW,YAAYL,KAAMuD,QAAQhb,MAC3D,IAAK+tB,UAAUC,MAAf,CAGA,GAAqBC,mBACAC,UAA6B,MAClD,IAAoB,SAAhBlT,QAAQzM,MAAyC,CACjD,GAAqB6S,YAAmDpG,QAAe,OAAS,MAChGkT,WAAYC,gBAAgB1W,KAAM2J,WAAWphB,MAAOohB,WAAWphB,MAAQohB,WAAW5D,WAA+BxC,QAAc,UAC/HiT,kBAAoBrW,eAAeH,KAAyBuD,QAAe,OAAEhb,OAAOinB,aAE/D,WAAhBjM,QAAQzM,QACb2f,UAAYC,gBAAgB1W,KAAM,EAAGA,KAAK0B,IAAIzB,MAAMlY,OAAS,EAAsBwb,QAAc,UACjGiT,kBAAoBxW,KAAKzJ,UAE7B+f,WAAUK,MAAMF,UAGhB,KAAK,GAFgBtP,UAA8B5D,QAAc,MAAE4D,SAC9CyP,QAAS,EACJ3sB,EAAI,EAAGA,EAAIkd,SAASpf,OAAQkC,IAAK,CACvD,GAAqB0iB,SAAUxF,SAASld,GACnB4sB,WAAa,MAClC,QAAQlK,QAAQiJ,aACZ,IAAK,GACDiB,WAAaP,UAAUplB,KACvB,MACJ,KAAK,GACD2lB,WAAaP,UACbM,QAAS,EAGjBJ,kBAAkB7J,QAAQzkB,UAAY2uB,WAEtCD,QACAN,UAAUQ,mBAWlB,QAASJ,iBAAgB1W,KAAM4F,WAAYC,SAAU8P,SAAU3tB,QAC3D,IAAK,GAAqBiC,GAAI2b,WAAY3b,GAAK4b,SAAU5b,IAAK,CAC1D,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,GACzB2a,UAAYrB,QAAQkB,eAAekR,SAASrhB,GAIjE,IAHiB,MAAbsQ,WACA5c,OAAOR,KAAKuvB,cAAc/W,KAAMuD,QAASqB,YAEzB,EAAhBrB,QAAQzM,OAAkDyM,QAAgB,QAAEuF,WACrCvF,QAAgB,QAAW,SAAE0S,mBAAqBN,SAASE,YAC9FF,SAASE,SAAU,CACvB,GAAqBlG,aAAczP,cAAcF,KAAM/V,EAOvD,KAJKsZ,QAAQ2F,oBAAsByM,SAASE,YAAcF,SAASE,WAC/Da,gBAAgB1W,KAAM/V,EAAI,EAAGA,EAAIsZ,QAAQwC,WAAY4P,SAAU3tB,QAC/DiC,GAAKsZ,QAAQwC,YAEG,SAAhBxC,QAAQzM,MAER,IAAK,GADgB4P,eAAmCiJ,YAA0B,cAAEhJ,eAC1DjW,EAAI,EAAGA,EAAIgW,cAAc3e,OAAQ2I,IAAK,CAC5D,GAAqBsmB,cAAetQ,cAAchW,GAC7BumB,IAAMrT,sBAAsBoT,aAC7CC,MAAOA,MAAQtH,aACf+G,gBAAgBM,aAAc,EAAGA,aAAatV,IAAIzB,MAAMlY,OAAS,EAAG4tB,SAAU3tB,QAI1F,GAAqBooB,gBAAiBT,YAAY7G,SAASuH,eAC3D,IAAID,eACA,IAAK,GAAqB1f,GAAI,EAAGA,EAAI0f,eAAeroB,OAAQ2I,IAAK,CAC7D,GAAqBwmB,eAAgB9G,eAAe1f,EACpDgmB,iBAAgBQ,cAAe,EAAGA,cAAcxV,IAAIzB,MAAMlY,OAAS,EAAG4tB,SAAU3tB,UAIvFub,QAAQ2F,oBAAsByM,SAASE,YAAcF,SAASE,WAE/D5rB,GAAKsZ,QAAQwC,YAGrB,MAAO/d,QAQX,QAAS+uB,eAAc/W,KAAMuD,QAAS4T,gBAClC,GAAsB,MAAlBA,eAAwB,CAExB,GAAqB5vB,OAAQ,MAC7B,QAAQ4vB,gBACJ,IAAK,GACD5vB,MAAQ2Y,cAAcF,KAAMuD,QAAQhb,OAAOyb,aAC3C,MACJ,KAAK,GACDzc,MAAQ,GAAIitB,YAAWtU,cAAcF,KAAMuD,QAAQhb,OAAOyb,cAC1D,MACJ,KAAK,GACDzc,MAAQ2Y,cAAcF,KAAMuD,QAAQhb,OAAOugB,QAC3C,MACJ,KAAK,GACDvhB,MAAQ2Y,cAAcF,KAAMuD,QAAQhb,OAAOmsB,aAC3C,MACJ,KAAK,GACDntB,MAAQ4Y,eAAeH,KAAMuD,QAAQhb,OAAOinB,SAGpD,MAAOjoB,QAaf,QAAS6vB,cAAanR,eAAgB1d,OAClC,OAEIA,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAO,EACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBzE,kBACAC,gBAAiB,EACjBC,cAAgBsB,eAAgBA,eAChCF,WAAY,EACZoB,YACAV,aAAc,EACd0C,WACA/L,QAAS,KACTzR,SAAU,KACViD,KAAM,KACN6a,MAAO,KACPC,WAAanhB,MAAOA,QAS5B,QAAS8uB,iBAAgBrX,KAAM+E,WAAYrD,KACvC,GAAqBsJ,UAAWlG,uBAAuB9E,KAAM+E,WAAYrD,IACzE,IAAKsJ,SAAL,CAIA,GAAqB/E,gBAAoCvE,IAAc,UAAEnZ,KACzEyd,2BAA0BhG,KAAMiG,eAAgB,EAAqB+E,SAAU,KAAMld;;;;;;;AAkBzF,QAASwpB,aAAYC,UAEjB,MAAOC,oBAAmB,IAAwB,GAAI5sB,OAAM2sB,SAAW,IAM3E,QAASE,cAAaF,UAClB,MAAOC,oBAAmB,GAAwB,GAAI5sB,OAAM2sB,WAMhE,QAASG,eAAcC,aAInB,IAAK,GAHgB7tB,MAAOzD,OAAOyD,KAAK6tB,aACnBC,OAAS9tB,KAAK/B,OACd8vB,cAAgB,GAAIjtB,OAAMgtB,QACrB3tB,EAAI,EAAGA,EAAI2tB,OAAQ3tB,IAAK,CAC9C,GAAqBC,KAAMJ,KAAKG,GACX1B,MAAQovB,YAAYztB,IACzC2tB,eAActvB,OAAS2B,IAE3B,MAAOstB,oBAAmB,GAAyBK,eAOvD,QAASL,oBAAmB1gB,MAAO+gB,eAE/B,IAAK,GADgB1Q,UAAW,GAAIvc,OAAMitB,cAAc9vB,QAC9BkC,EAAI,EAAGA,EAAI4tB,cAAc9vB,OAAQkC,IAAK,CAC5D,GAAqB2oB,MAAOiF,cAAc5tB,EAC1Ckd,UAASld,IACL6M,MAAO,EACPtQ,KAAMosB,KACNxJ,GAAI,KACJoB,gBAAiBoI,KACjBtI,gBAAiB,KACjBC,OAAQ,MAGhB,OAEIhiB,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBzE,kBACAC,gBAAiB,EACjBC,cACAsB,gBAAgB,EAChBF,WAAY,EAAGoB,SAAUA,SACzBV,aAAcS,iBAAiBC,UAC/BgC,WACA/L,QAAS,KACTzR,SAAU,KACViD,KAAM,KACN6a,MAAO,KACPC,UAAW,MAQnB,QAASoO,sBAAqB9X,KAAM0B,KAChC,OAASna,MAAOuG,QAiBpB,QAASiqB,oCAAmC/X,KAAM0B,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACvF,GAAqBnF,UAAWzF,IAAIyF,SACfqF,SAAU,EACVD,QAAUpF,SAASpf,MAqBxC,IApBIwkB,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGmK,MACnDW,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGoK,MACnDU,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGqK,MACnDS,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGsK,MACnDQ,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGuK,MACnDO,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGwK,MACnDM,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGyK,MACnDK,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG0K,MACnDI,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG2K,MACnDG,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG4K,MACnDE,SAAU,GACVA,QAAS,CACT,GAAqBvK,MAAO7B,qBAAqBJ,KAAM0B,IAAInZ,OACtChB,MAAQ,MAC7B,QAAoB,UAAZma,IAAI5K,OACR,IAAK,IACDvP,MAAQ,GAAIqD,OAAMuc,SAASpf,QACvBwkB,QAAU,IACVhlB,MAAM,GAAKskB,IACXU,QAAU,IACVhlB,MAAM,GAAKukB,IACXS,QAAU,IACVhlB,MAAM,GAAKwkB,IACXQ,QAAU,IACVhlB,MAAM,GAAKykB,IACXO,QAAU,IACVhlB,MAAM,GAAK0kB,IACXM,QAAU,IACVhlB,MAAM,GAAK2kB,IACXK,QAAU,IACVhlB,MAAM,GAAK4kB,IACXI,QAAU,IACVhlB,MAAM,GAAK6kB,IACXG,QAAU,IACVhlB,MAAM,GAAK8kB,IACXE,QAAU,IACVhlB,MAAM,GAAK+kB,GACf,MACJ,KAAK,IACD/kB,SACIglB,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK0E,IAC/CU,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK2E,IAC/CS,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK4E,IAC/CQ,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK6E,IAC/CO,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK8E,IAC/CM,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAK+E,IAC/CK,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAKgF,IAC/CI,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAKiF,IAC/CG,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAKkF,IAC/CE,QAAU,IACVhlB,MAAyB4f,SAAS,GAAQ,MAAKmF,GACnD,MACJ,KAAK,KACD,GAAqB0L,MAAOnM,EAC5B,QAAQU,SACJ,IAAK,GACDhlB,MAAQywB,KAAKC,UAAUpM,GACvB,MACJ,KAAK,GACDtkB,MAAQywB,KAAKC,UAAUnM,GACvB,MACJ,KAAK,GACDvkB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAC3B,MACJ,KAAK,GACDxkB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAC/B,MACJ,KAAK,GACDzkB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GACnC,MACJ,KAAK,GACD1kB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GAAIC,GACvC,MACJ,KAAK,GACD3kB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC3C,MACJ,KAAK,GACD5kB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC/C,MACJ,KAAK,GACD7kB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACnD,MACJ,KAAK,IACD9kB,MAAQywB,KAAKC,UAAUnM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,KAKvErK,KAAK1a,MAAQA,MAEjB,MAAOilB,SAQX,QAAS0L,qCAAoClY,KAAM0B,IAAK1Z,QAGpD,IAAK,GAFgBmf,UAAWzF,IAAIyF,SACfqF,SAAU,EACLviB,EAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAG5CyY,sBAAsB1C,KAAM0B,IAAKzX,EAAGjC,OAAOiC,MAC3CuiB,SAAU,EAGlB,IAAIA,QAAS,CACT,GAAqBvK,MAAO7B,qBAAqBJ,KAAM0B,IAAInZ,OACtChB,MAAQ,MAC7B,QAAoB,UAAZma,IAAI5K,OACR,IAAK,IACDvP,MAAQS,MACR,MACJ,KAAK,IACDT,QACA,KAAK,GAAqB0C,GAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAChD1C,MAAyB4f,SAASld,GAAQ,MAAKjC,OAAOiC,EAE1D,MACJ,KAAK,KACD,GAAqB+tB,MAAOhwB,OAAO,GACd0J,OAAS1J,OAAOuI,MAAM,EAC3ChJ,OAAQywB,KAAKC,UAAUhwB,MAAM+vB,KAAMtmB,QAG3CuQ,KAAK1a,MAAQA,MAEjB,MAAOilB;;;;;;;AAmBX,QAAS2L,SAAQlS,eAAgBmS,WAE7B,IAAK,GADgBjR,UAAW,GAAIvc,OAAMwtB,UAAUrwB,OAAS,GACnCkC,EAAI,EAAGA,EAAImuB,UAAUrwB,OAAQkC,IACnDkd,SAASld,EAAI,IACT6M,MAAO,EACPtQ,KAAM,KACN4iB,GAAI,KACJoB,gBAAiB,KACjBF,gBAAiB,KACjBC,OAAQ6N,UAAUnuB,GAG1B,IAAqB6M,OAAQ,CAC7B,QAEIvO,OAAO,EACP6E,OAAQ,KACR4X,aAAc,KACdrD,cAAc,EACdoH,aAAa,EAEbjS,MAAOA,MACPkS,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBzE,kBACAC,gBAAiB,EACjBC,cAAgBsB,eAAgBA,eAChCF,WAAY,EAAGoB,SAAUA,SACzBV,aAAcS,iBAAiBC,UAC/BgC,WACA/L,QAAS,KACTzR,SAAU,KACViD,MAAQypB,OAAQD,UAAU,IAC1B3O,MAAO,KACPC,UAAW,MASnB,QAAS4O,YAAWtY,KAAM+E,WAAYrD,KAClC,GAAqBmL,eACAnH,SAAW1F,KAAK0F,QACrCmH,eAAgBnH,SAAS4S,WAA8B5W,IAAS,KAAE2W,OAClE,IAAqBrN,UAAWlG,uBAAuB9E,KAAM+E,WAAYrD,IAIzE,OAHIsJ,WACAtF,SAASkB,YAAYoE,SAAU6B,gBAE1B5I,WAAY4I,eAiBzB,QAAS0L,0BAAyBvY,KAAM0B,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC7E,GAAqBE,UAAU,EACVrF,SAAWzF,IAAIyF,SACfoF,QAAUpF,SAASpf,MAqBxC,IApBIwkB,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGmK,MACnDW,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGoK,MACnDU,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGqK,MACnDS,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGsK,MACnDQ,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGuK,MACnDO,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGwK,MACnDM,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAGyK,MACnDK,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG0K,MACnDI,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG2K,MACnDG,SAAU,GACVD,QAAU,GAAK7J,sBAAsB1C,KAAM0B,IAAK,EAAG4K,MACnDE,SAAU,GACVA,QAAS,CACT,GAAqBjlB,OAA2Bma,IAAS,KAAE2W,MACvD9L,SAAU,IACVhlB,OAASixB,sBAAsB3M,GAAI1E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsB1M,GAAI3E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBzM,GAAI5E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBxM,GAAI7E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBvM,GAAI9E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBtM,GAAI/E,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBrM,GAAIhF,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBpM,GAAIjF,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBnM,GAAIlF,SAAS,KAC5CoF,QAAU,IACVhlB,OAASixB,sBAAsBlM,GAAInF,SAAS,IAChD,IAAqB0F,eAAgB9M,WAAWC,KAAM0B,IAAInZ,OAAO0b,UACjEjE,MAAK0F,SAAS+S,SAAS5L,cAAetlB,OAE1C,MAAOilB,SAQX,QAASkM,2BAA0B1Y,KAAM0B,IAAK1Z,QAG1C,IAAK,GAFgBmf,UAAWzF,IAAIyF,SACfqF,SAAU,EACLviB,EAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAG5CyY,sBAAsB1C,KAAM0B,IAAKzX,EAAGjC,OAAOiC,MAC3CuiB,SAAU,EAGlB,IAAIA,QAAS,CAET,IAAK,GADgBjlB,OAAQ,GACH0C,EAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAChD1C,OAAgBixB,sBAAsBxwB,OAAOiC,GAAIkd,SAASld,GAE9D1C,OAA2Bma,IAAS,KAAE2W,OAAS9wB,KAC/C,IAAqBslB,eAAgB9M,WAAWC,KAAM0B,IAAInZ,OAAO0b,UACjEjE,MAAK0F,SAAS+S,SAAS5L,cAAetlB,OAE1C,MAAOilB,SAOX,QAASgM,uBAAsBjxB,MAAOolB,SAClC,GAAqBgM,UAAoB,MAATpxB,MAAgBA,MAAM0D,WAAa,EACnE,OAAO0tB,UAAWhM,QAAQpC,OAc9B,QAASgG,SAAQzZ,MAAOmJ,MAAO2Y,iBAAkBC,gBAW7C,IAAK,GATgBC,kBAAmB,EACnBC,oBAAsB,EACtBC,cAAgB,EAChBC,kBAAoB,EACpBC,mBAAqB,EACrBC,cAAgB,KAChBC,kCAAmC,EACnCC,mCAAoC,EACpCC,mBAAqB,KAChBrvB,EAAI,EAAGA,EAAIgW,MAAMlY,OAAQkC,IAAK,CACpD,KAAOkvB,eAAiBlvB,EAAIkvB,cAAc5wB,MAAQ4wB,cAAcpT,YAAY,CACxE,GAAqBwT,WAAYJ,cAAc/rB,MAC3CmsB,aACAA,UAAUvQ,YAAiCmQ,cAAyB,WACpEI,UAAUrQ,qBAAuBiQ,cAAcjQ,qBAEnDiQ,cAAgBI,UAEpB,GAAqB/b,MAAOyC,MAAMhW,EAClCuT,MAAKjV,MAAQ0B,EACbuT,KAAKpQ,OAAS+rB,cACd3b,KAAKmE,aAAemX,iBACpBtb,KAAKuL,YAAcgQ,mBAEnB,IAAqBS,qBAAsB,MAS3C,IANIA,oBAFAL,eAAuC,EAAtBA,cAAcriB,QACXqiB,cAAsB,QAAE3yB,KACtB2yB,cAAcnU,aAGdmU,cAE1B3b,KAAKwH,aAAewU,oBAChBhc,KAAKJ,QAAS,CACd,GAAqBwN,OAAQpN,KAAKJ,OAClCwN,OAAMrB,gBACF4P,cAAmCA,cAAsB,QAAE5P,gBAAkBljB,OAAOC,OAAO,MAC/FskB,MAAMpB,aAAeoB,MAAMrB,gBAE3B6P,kCAAmC,EACnCC,mCAAoC,EAwBxC,GAtBAI,aAAaN,cAAe3b,KAAMyC,MAAMlY,QACxCixB,eAAiBxb,KAAK1G,MACtBoiB,oBAAsB1b,KAAKkH,gBACvBlH,KAAKJ,SAAWI,KAAKJ,QAAQ0L,WAC7BoQ,oBAAsB1b,KAAKJ,QAAQ0L,SAASmN,oBAE5CkD,eACAA,cAAcnQ,YAAcxL,KAAK1G,MACjCqiB,cAAclQ,kBAAoBzL,KAAK1G,MACvCqiB,cAAcjQ,qBAAuB1L,KAAKkH,gBACtClH,KAAKJ,SAAWI,KAAKJ,QAAQ0L,WAC7BqQ,cAAcjQ,qBAAuB1L,KAAKJ,QAAQ0L,SAASmN,qBAI/DgD,mBAAqBzb,KAAK1G,MAE9BgiB,kBAAoBtb,KAAK2J,SAASpf,OAClCgxB,qBAAuBvb,KAAK2L,QAAQphB,QAC/ByxB,qBAAqC,EAAbhc,KAAK1G,QAC9BwiB,mBAAqB9b,MAER,MAAbA,KAAK1G,MAAiC,CACjCsiB,mCACDA,kCAAmC,EAChB,cAA0B,QAAE7P,gBAAkBljB,OAAOC,OAA2C,cAA0B,QAAEijB,iBAC5H,cAA0B,QAAEC,aAAmD,cAA0B,QAAED,gBAElI,IAAqBmQ,kBAAiE,KAAhC,KAAblc,KAAK1G,OACzB6iB,YAAuD,KAA3B,MAAbnc,KAAK1G,QACpC4iB,kBAAoBC,YACkC,cAA0B,QAAkB,gBAAE1Y,SAA4BzD,KAAc,SAAE7S,QAAU6S,MAGtJ6b,oCACDA,mCAAoC,EACjB,cAA0B,QAAE7P,aAAenjB,OAAOC,OAA2C,cAA0B,QAAEijB,kBAE1G,cAA0B,QAAe,aAAEtI,SAA4BzD,KAAc,SAAE7S,QAAU6S,MAEvImc,cACoC,cAA0B,QAAErQ,kBAAoB9L,MAGxFA,KAAKuI,aACLoT,cAAgB3b,MAGxB,KAAO2b,eAAe,CAClB,GAAqBI,WAAYJ,cAAc/rB,MAC3CmsB,aACAA,UAAUvQ,YAAcmQ,cAAcnQ,WACtCuQ,UAAUrQ,qBAAuBiQ,cAAcjQ,qBAEnDiQ,cAAgBI,UAEpB,GAAqB7V,aAAc,SAAU1D,KAAMoD,UAAWC,UAAWC,OAAS,MAA6CrD,OAAMmD,WAAmB,QAAc,YAAEpD,KAAMqD,UAAWC,OACzL,QAEIve,QAAS,KACTyrB,UAAWwI,cACXY,cAAeX,kBACfhD,mBAAoBiD,mBAAoBpiB,MAAOA,MAC/CmJ,MAAOA,MACP2Y,iBAAkBA,kBAAoBvT,KACtCwT,eAAgBA,gBAAkBxT,KAClC3B,YAAaA,aAAe2B,KAC5BwU,aAAcf,iBACdgB,YAAaf,oBAAqBO,mBAAoBA,oBAS9D,QAASG,cAAarsB,OAAQoQ,KAAMuc,WAChC,GAAqBjR,UAAWtL,KAAKJ,SAAWI,KAAKJ,QAAQ0L,QAC7D,IAAIA,SAAU,CACV,IAAKA,SAASwQ,mBACV,KAAM,IAAI9rB,OAAM,mEAEpB,IAAIsb,SAASwQ,oBAC2B,SAApCxQ,SAASwQ,mBAAmBxiB,MAC5B,KAAM,IAAItJ,OAAM,mFAAqFgQ,KAAKjV,MAAQ,KAG1H,GAAiB,MAAbiV,KAAK1G,MAAiC,CACtC,GAAqBkjB,aAAc5sB,OAASA,OAAO0J,MAAQ,CAC3D,IAA4C,KAAzB,EAAdkjB,aACD,KAAM,IAAIxsB,OAAM,sGAAwGgQ,KAAKjV,MAAQ,KAG7I,GAAIiV,KAAKiM,MAAO,CACZ,GAAiB,SAAbjM,KAAK1G,SACH1J,QAAyD,KAA/B,MAAfA,OAAO0J,QACpB,KAAM,IAAItJ,OAAM,kFAAoFgQ,KAAKjV,MAAQ,IAErH,IAAiB,UAAbiV,KAAK1G,OAAyC1J,OAC9C,KAAM,IAAII,OAAM,wEAA0EgQ,KAAKjV,MAAQ,KAG/G,GAAIiV,KAAKuI,WAAY,CACjB,GAAqBkU,WAAY7sB,OAASA,OAAO7E,MAAQ6E,OAAO2Y,WAAagU,UAAY,CACzF,IAAIvc,KAAKjV,OAAS0xB,WAAazc,KAAKjV,MAAQiV,KAAKuI,WAAakU,UAC1D,KAAM,IAAIzsB,OAAM,uEAAyEgQ,KAAKjV,MAAQ,MAWlH,QAAS2xB,oBAAmB9sB,OAAQ+sB,aAAc5J,QAASxhB,SAGvD,GAAqBiR,MAAOoa,WAAWhtB,OAAOuW,KAAMvW,OAAOsY,SAAUtY,OAAQ+sB,aAAc5J,QAG3F,OAFA8J,UAASra,KAAM5S,OAAOmJ,UAAWxH,SACjCurB,gBAAgBta,MACTA,KAQX,QAASua,gBAAe5W,KAAMjC,IAAK3S,SAC/B,GAAqBiR,MAAOoa,WAAWzW,KAAMA,KAAK+B,SAAU,KAAM,KAAMhE,IAGxE,OAFA2Y,UAASra,KAAMjR,QAASA,SACxBurB,gBAAgBta,MACTA,KASX,QAASwa,qBAAoB3W,WAAYN,QAASgN,QAASkK,aACvD,GACqBC,cADAC,aAAkCpX,QAAgB,QAAE0B,qBAQzE,OAFIyV,cAJCC,aAIc9W,WAAWF,KAAKiX,gBAAgBC,eAAeJ,YAAaE,cAH5D9W,WAAWF,KAAK+B,SAK5B0U,WAAWvW,WAAWF,KAAM+W,aAAc7W,WAA+BN,QAAgB,QAAE+F,kBAAmBiH,SAUzH,QAAS6J,YAAWzW,KAAM+B,SAAUtY,OAAQqjB,cAAe/O,KACvD,GAAqBzB,OAAQ,GAAIrV,OAAM8W,IAAIzB,MAAMlY,QAC5B+yB,YAAcpZ,IAAIoY,YAAc,GAAIlvB,OAAM8W,IAAIoY,aAAe,KAC7D9Z,MACjB0B,IAAKA,IACLtU,OAAQA,OACR4V,oBAAqB,KAAMyN,cAAeA,cAC1C1hB,QAAS,KACTwH,UAAW,KAAM0J,MAAOA,MACxBwC,MAAO,GAAkBkB,KAAMA,KAAM+B,SAAUA,SAC/C9D,UAAW,GAAIhX,OAAM8W,IAAImY,cAAeiB,YAAaA,YAEzD,OAAO9a,MAQX,QAASqa,UAASra,KAAMzJ,UAAWxH,SAC/BiR,KAAKzJ,UAAYA,UACjByJ,KAAKjR,QAAUA,QAMnB,QAASurB,iBAAgBta,MACrB,GAAqB+E,WACrB,IAAIZ,gBAAgBnE,MAAO,CACvB,GAAqB+a,SAAU/a,KAAKyQ,aACpC1L,YAAa7E,cAAiCF,KAAY,OAAuC,QAAmB,OAAEzX,OAAOyb,cAIjI,IAAK,GAFgBtC,KAAM1B,KAAK0B,IACXzB,MAAQD,KAAKC,MACRhW,EAAI,EAAGA,EAAIyX,IAAIzB,MAAMlY,OAAQkC,IAAK,CACxD,GAAqBsZ,SAAU7B,IAAIzB,MAAMhW,EACzC2Y,UAAS0S,eAAetV,KAAM/V,EAC9B,IAAqB+wB,UAAW,MAChC,QAAwB,UAAhBzX,QAAQzM,OACZ,IAAK,GACD,GAAqBoF,IAAuByO,cAAc3K,KAAM+E,WAAYxB,SACvDE,cAAiC,MACtD,IAAoB,SAAhBF,QAAQzM,MAAsC,CAC9C,GAAqBmkB,aAAc9V,kBAAwD5B,QAAgB,QAAgB,cAC3HE,eAAgBb,SAAS4X,oBAAoBxa,KAAMuD,QAAS0X,YAAa/e,IAE7EkP,uBAAuBpL,KAAMyD,cAAeF,QAASrH,IACrD8e,UACIhX,cAAe9H,GACfuH,cAAeA,cACfiR,cAAe,KACf5L,SAA6BvF,QAAgB,QAAEuF,SAAWmJ,mBAAmBjS,KAAMuD,SAAWzV,QAE9E,SAAhByV,QAAQzM,QACRkkB,SAAStG,cAAgB7C,wBAAwB7R,KAAMuD,QAASyX,UAEpE,MACJ,KAAK,GACDA,SAA6B1C,WAAWtY,KAAM+E,WAAYxB,QAC1D,MACJ,KAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACD,GAAqBiM,UAAWsD,uBAAuB9S,KAAMuD,QAC7DyX,WAA+BxL,SAAUA,SACzC,MAEJ,KAAK,IACD,GAAqBA,UAAWyD,mBAAmBjT,KAAMuD,QACzDyX,WAA+BxL,SAAUA,SACzC,MAEJ,KAAK,OACD,GAAqBA,UAAW4D,wBAAwBpT,KAAMuD,QAE9D,IADAyX,UAA+BxL,SAAUA,UACrB,MAAhBjM,QAAQzM,MAA+B,CACvC,GAAqBoP,UAAWhG,cAAcF,KAAyBuD,QAAe,OAAEhb,OAAOkb,aAC/F4W,UAASnU,SAAUsJ,SAAUA,UAEjC,KAEJ,KAAK,IACL,IAAK,IACL,IAAK,KACDwL,SAA6BlD,qBAAqB9X,KAAMuD,QACxD,MACJ,KAAK,UACL,IAAK,WACDyX,SAA6BlF,aAC7B,MACJ,KAAK,GACDuB,gBAAgBrX,KAAM+E,WAAYxB,SAElCyX,SAAWltB,OAGnBmS,MAAMhW,GAAK+wB,SAIfE,yBAAyBlb,KAAMmb,WAAWC,iBAE1CC,kBAAkBrb,KAAM,UAAiE,UAA6B,GAM1H,QAASsb,oBAAmBtb,MACxBub,2BAA2Bvb,MAC3B4C,SAASgW,iBAAiB5Y,KAAM,GAChCwb,wBAAwBxb,KAAMmb,WAAWM,gBACzC7Y,SAASiW,eAAe7Y,KAAM,GAC9Bkb,yBAAyBlb,KAAMmb,WAAWM,gBAG1Czb,KAAKyC,QAAS,GAMlB,QAASiZ,oBAAmB1b,MACP,EAAbA,KAAKyC,OACLzC,KAAKyC,QAAS,EACdzC,KAAKyC,OAAS,GAGdzC,KAAKyC,QAAS,EAElB8Y,2BAA2Bvb,MAC3B4C,SAASgW,iBAAiB5Y,KAAM,GAChCwb,wBAAwBxb,KAAMmb,WAAWQ,gBACzCN,kBAAkBrb,KAAM,SAAiC,UAA8B,GACvFkV,gCAAgClV,KAAM,SACpB,EAAbA,KAAKyC,MAA6B,QAAiC,IACxEG,SAASiW,eAAe7Y,KAAM,GAC9Bkb,yBAAyBlb,KAAMmb,WAAWQ,gBAC1CN,kBAAkBrb,KAAM,UAA+B,UAA8B,GACrFkV,gCAAgClV,KAAM,SACpB,EAAbA,KAAKyC,MAA6B,QAA8B,IAChD,EAAjBzC,KAAK0B,IAAI5K,QACTkJ,KAAKyC,QAAS,GAElBzC,KAAKyC,QAAS,GAkBlB,QAASmZ,oBAAmB5b,KAAMuD,QAASsY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACrF,MAAiB,KAAbuP,SACOC,yBAAyB9b,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAG5EyP,0BAA0B/b,KAAMuD,QAASsI,IAOxD,QAAS0P,4BAA2Bvb,MAChC,GAAqB0B,KAAM1B,KAAK0B,GAChC,IAAsB,EAAhBA,IAAI8O,UAGV,IAAK,GAAqBvmB,GAAI,EAAGA,EAAIyX,IAAIzB,MAAMlY,OAAQkC,IAAK,CACxD,GAAqBsZ,SAAU7B,IAAIzB,MAAMhW,EACzC,IAAoB,EAAhBsZ,QAAQzM,MAAmC,CAC3C,GAAqBsZ,gBAAiBlQ,cAAcF,KAAM/V,GAAG6e,SAASuH,eACtE,IAAID,eACA,IAAK,GAAqB4L,KAAM,EAAGA,IAAM5L,eAAeroB,OAAQi0B,MAAO,CACnE,GAAqB9E,eAAgB9G,eAAe4L,IACpD9E,eAAczU,OAAS,GACvBQ,sCAAsCiU,cAAelX,WAIH,MAA/B,EAArBuD,QAAQyF,cAId/e,GAAKsZ,QAAQwC,aAmBzB,QAAS+V,0BAAyB9b,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACjF,GAAqBE,UAAU,CAC/B,QAAwB,UAAhBjJ,QAAQzM,OACZ,IAAK,GACD0V,QAAUZ,4BAA4B5L,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACzF,MACJ,KAAK,GACDE,QAAU+L,yBAAyBvY,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACtF,MACJ,KAAK,OACDE,QACIgH,8BAA8BxT,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACrF,MACJ,KAAK,IACL,IAAK,IACL,IAAK,KACDE,QACIuL,mCAAmC/X,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAGlG,MAAOE,SAQX,QAASuP,2BAA0B/b,KAAMuD,QAASvb,QAC9C,GAAqBwkB,UAAU,CAC/B,QAAwB,UAAhBjJ,QAAQzM,OACZ,IAAK,GACD0V,QAAUE,6BAA6B1M,KAAMuD,QAASvb,OACtD,MACJ,KAAK,GACDwkB,QAAUkM,0BAA0B1Y,KAAMuD,QAASvb,OACnD,MACJ,KAAK,OACDwkB,QAAUwH,+BAA+BhU,KAAMuD,QAASvb,OACxD,MACJ,KAAK,IACL,IAAK,IACL,IAAK,KACDwkB,QAAU0L,oCAAoClY,KAAMuD,QAASvb,QAGrE,GAAIwkB,QAMA,IAAK,GAHgBD,SAAUhJ,QAAQ4D,SAASpf,OAC3Bk0B,aAAe1Y,QAAQ5B,aACvBC,UAAY5B,KAAK4B,UACZ3X,EAAI,EAAGA,EAAIsiB,QAAStiB,IAC1C2X,UAAUqa,aAAehyB,GAAKjC,OAAOiC,EAG7C,OAAOuiB,SAkBX,QAAS0P,oBAAmBlc,KAAMuD,QAASsY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAQrF,MAPiB,KAAbuP,SACAM,yBAAyBnc,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAG5E8P,0BAA0Bpc,KAAMuD,QAASsI,KAGtC,EAiBX,QAASsQ,0BAAyBnc,KAAMuD,QAASsI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACjF,GAAqBC,SAAUhJ,QAAQ4D,SAASpf,MAC5CwkB,SAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAGsI,IACxCU,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAGuI,IACxCS,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAGwI,IACxCQ,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAGyI,IACxCO,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG0I,IACxCM,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG2I,IACxCK,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG4I,IACxCI,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG6I,IACxCG,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG8I,IACxCE,QAAU,GACV5J,sBAAsB3C,KAAMuD,QAAS,EAAG+I,IAQhD,QAAS8P,2BAA0Bpc,KAAMuD,QAASvb,QAC9C,IAAK,GAAqBiC,GAAI,EAAGA,EAAIjC,OAAOD,OAAQkC,IAChD0Y,sBAAsB3C,KAAMuD,QAAStZ,EAAGjC,OAAOiC,IAUvD,QAASoyB,qBAAoBrc,KAAMuD,SAC/B,GAAqB+S,WAAYjW,YAAYL,KAAMuD,QAAQhb,MAC3D,IAAI+tB,UAAUC,MACV,KAAMjW,6CAA4CsC,SAASC,mBAAmB7C,KAAMuD,QAAQhb,OAAQ,SAA+Bgb,QAAe,MAAEjP,GAAK,aAAc,SAA+BiP,QAAe,MAAEjP,GAAK,SAAsD,KAA9B,EAAb0L,KAAKyC,QAOpP,QAAS6Z,aAAYtc,MACjB,KAAiB,IAAbA,KAAKyC,OAAT,CAMA,GAHA+Y,wBAAwBxb,KAAMmb,WAAWoB,SACzCrB,yBAAyBlb,KAAMmb,WAAWoB,SAC1CrH,gCAAgClV,KAAM,QAClCA,KAAK8a,YACL,IAAK,GAAqB7wB,GAAI,EAAGA,EAAI+V,KAAK8a,YAAY/yB,OAAQkC,IAC1D+V,KAAK8a,YAAY7wB,IAGzB4mB,qBAAoB7Q,MAChBA,KAAK0F,SAAS8W,aACdC,iBAAiBzc,MAEjBmE,gBAAgBnE,OAChBA,KAAK0F,SAAShK,UAElBsE,KAAKyC,OAAS,KAMlB,QAASga,kBAAiBzc,MAEtB,IAAK,GADgBoP,KAAMpP,KAAK0B,IAAIzB,MAAMlY,OAChBkC,EAAI,EAAGA,EAAImlB,IAAKnlB,IAAK,CAC3C,GAAqByX,KAAM1B,KAAK0B,IAAIzB,MAAMhW,EAC1B,GAAZyX,IAAI5K,MACekJ,KAAK0F,SAAqB,YAAExF,cAAcF,KAAM/V,GAAG+Z,eAErD,EAAZtC,IAAI5K,MACUkJ,KAAK0F,SAAqB,YAAE3F,WAAWC,KAAM/V,GAAGga,aAElD,SAAZvC,IAAI5K,OAAuD,UAAZ4K,IAAI5K,QACxDuJ,YAAYL,KAAM/V,GAAGyR,WAwBjC,QAASwf,0BAAyBlb,KAAM3I,QACpC,GAAqBqK,KAAM1B,KAAK0B,GAChC,IAAsB,SAAhBA,IAAI8O,UAGV,IAAK,GAAqBvmB,GAAI,EAAGA,EAAIyX,IAAIzB,MAAMlY,OAAQkC,IAAK,CACxD,GAAqBsZ,SAAU7B,IAAIzB,MAAMhW,EACrB,UAAhBsZ,QAAQzM,MAER4lB,eAAexc,cAAcF,KAAM/V,GAAGwZ,cAAepM,QAEQ,KAAlC,SAArBkM,QAAQyF,cAId/e,GAAKsZ,QAAQwC,aASzB,QAASyV,yBAAwBxb,KAAM3I,QACnC,GAAqBqK,KAAM1B,KAAK0B,GAChC,IAAsB,SAAhBA,IAAI8O,UAGV,IAAK,GAAqBvmB,GAAI,EAAGA,EAAIyX,IAAIzB,MAAMlY,OAAQkC,IAAK,CACxD,GAAqBsZ,SAAU7B,IAAIzB,MAAMhW,EACzC,IAAoB,SAAhBsZ,QAAQzM,MAGR,IAAK,GADgB4P,eAAmCxG,cAAcF,KAAM/V,GAAiB,cAAE0c,eACrEjW,EAAI,EAAGA,EAAIgW,cAAc3e,OAAQ2I,IACvDgsB,eAAehW,cAAchW,GAAI2G,YAGwB,MAAlC,SAArBkM,QAAQyF,cAId/e,GAAKsZ,QAAQwC,aASzB,QAAS2W,gBAAe1c,KAAM3I,QAC1B,GAAqBslB,WAAY3c,KAAKyC,KACtC,QAAQpL,QACJ,IAAK8jB,YAAWM,eAC8B,KAAzB,IAAZkB,aAC+C,MAA/B,GAAZA,WACDrB,mBAAmBtb,MAEF,GAAZ2c,WACLC,yBAAyB5c,KAAMmb,WAAW0B,8BAGlD,MACJ,KAAK1B,YAAW0B,6BAC8B,KAAzB,IAAZF,aACe,GAAZA,UACArB,mBAAmBtb,MAEF,GAAZ2c,WACLC,yBAAyB5c,KAAM3I,QAGvC,MACJ,KAAK8jB,YAAWQ,eAC8B,KAAzB,IAAZgB,aAC+C,MAA/B,GAAZA,WACDjB,mBAAmB1b,MAEF,GAAZ2c,WACLC,yBAAyB5c,KAAMmb,WAAW2B,8BAGlD,MACJ,KAAK3B,YAAW2B,6BAC8B,KAAzB,IAAZH,aACe,GAAZA,UACAjB,mBAAmB1b,MAEF,GAAZ2c,WACLC,yBAAyB5c,KAAM3I,QAGvC,MACJ,KAAK8jB,YAAWoB,QAGZD,YAAYtc,KACZ,MACJ,KAAKmb,YAAWC,gBACZd,gBAAgBta,OAS5B,QAAS4c,0BAAyB5c,KAAM3I,QACpCmkB,wBAAwBxb,KAAM3I,QAC9B6jB,yBAAyBlb,KAAM3I,QASnC,QAASgkB,mBAAkBrb,KAAM+c,WAAYC,uBAAwBC,WACjE,GAAMjd,KAAK0B,IAAI8O,UAAYuM,YAAiB/c,KAAK0B,IAAI8O,UAAYwM,uBAIjE,IAAK,GADgBjD,WAAY/Z,KAAK0B,IAAIzB,MAAMlY,OACtBkC,EAAI,EAAGA,EAAI8vB,UAAW9vB,IAAK,CACjD,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EAC9C,IAAKsZ,QAAQzM,MAAQimB,YAAgBxZ,QAAQzM,MAAQkmB,uBAEjD,OADApa,SAAS0S,eAAetV,KAAMuD,QAAQhb,OAC9B00B,WACJ,IAAK,GACD5G,oBAAoBrW,KAAMuD,QAC1B,MACJ,KAAK,GACD8Y,oBAAoBrc,KAAMuD,SAIhCA,QAAQyF,WAAa+T,YAAiBxZ,QAAQyF,WAAagU,yBAG7D/yB,GAAKsZ,QAAQwC,aAoBzB,QAASmX,wBACL,IAAIC,YAAJ,CAGAA,aAAc,CACd,IAAqBC,UAAW5iB,YAAc6iB,sBAAwBC,oBACtE1a,UAAS0S,eAAiB8H,SAAS9H,eACnC1S,SAAS2X,eAAiB6C,SAAS7C,eACnC3X,SAASsX,mBAAqBkD,SAASlD,mBACvCtX,SAAS4X,oBAAsB4C,SAAS5C,oBACxC5X,SAAS4P,kBAAoB4K,SAAS5K,kBACtC5P,SAAS2a,iBAAmBH,SAASG,iBACrC3a,SAAS4a,uBAAyBJ,SAASI,uBAC3C5a,SAAS8Y,mBAAqB0B,SAAS1B,mBACvC9Y,SAAS0Y,mBAAqB8B,SAAS9B,mBACvC1Y,SAAS0Z,YAAcc,SAASd,YAChC1Z,SAASsR,WAAaA,WACtBtR,SAASC,mBAAqBua,SAASva,mBACvCD,SAASc,YAAc0Z,SAAS1Z,YAChCd,SAASgW,iBAAmBwE,SAASxE,iBACrChW,SAASiW,eAAiBuE,SAASvE,eACnCjW,SAASmN,mBAAqBA,oBAKlC,QAASuN,sBACL,OACIhI,eAAgB,aAChBiF,eAAgBkD,mBAChBvD,mBAAoBA,mBACpBM,oBAAqBA,oBACrBhI,kBAAmBA,kBACnB+K,iBAAkBlY,KAClBmY,uBAAwBnY,KACxBqW,mBAAoBA,mBACpBJ,mBAAoBA,mBACpBgB,YAAaA,YACbzZ,mBAAoB,SAAU7C,KAAMoD,WAAa,MAAO,IAAIsa,eAAc1d,KAAMoD,YAChFM,YAAa,SAAU1D,KAAMoD,UAAWC,UAAWC,OAC/C,MAAOtD,MAAK0B,IAAIgC,YAAY1D,KAAMoD,UAAWC,UAAWC,QAE5DsV,iBAAkB,SAAU5Y,KAAMid,WAC9B,MAAOjd,MAAK0B,IAAIkX,iBAA+B,IAAdqE,UAAuCU,uBACpEC,uBAAwB5d,OAEhC6Y,eAAgB,SAAU7Y,KAAMid,WAC5B,MAAOjd,MAAK0B,IAAImX,eAA6B,IAAdoE,UAAuCU,uBAClEC,uBAAwB5d,QAOxC,QAASqd,uBACL,OACI/H,eAAgBuI,oBAChBtD,eAAgBuD,oBAChB5D,mBAAoB6D,wBACpBvD,oBAAqBwD,yBACrBxL,kBAAmByL,uBACnBV,iBAAkBW,sBAClBV,uBAAwBW,4BACxBzC,mBAAoB0C,wBACpB9C,mBAAoB+C,wBACpB/B,YAAagC,iBACbzb,mBAAoB,SAAU7C,KAAMoD,WAAa,MAAO,IAAIsa,eAAc1d,KAAMoD,YAChFM,YAAa6a,iBACb3F,iBAAkB4F,sBAClB3F,eAAgB4F,qBAYxB,QAAShB,oBAAmBiB,WAAYpY,iBAAkBuE,mBAAoBnJ,IAAKsN,SAAUjgB,SACzF,GAAqB6rB,iBAAkB5L,SAASpe,SAAS9D,IAAI6xB,iBAC7D,OAAOpE,gBAAeqE,eAAeF,WAAY1P,SAAU4L,gBAAiBtU,iBAAkBuE,oBAAqBnJ,IAAK3S,SAW5H,QAAS+uB,qBAAoBY,WAAYpY,iBAAkBuE,mBAAoBnJ,IAAKsN,SAAUjgB,SAC1F,GAAqB6rB,iBAAkB5L,SAASpe,SAAS9D,IAAI6xB,kBACxChb,KAAOib,eAAeF,WAAY1P,SAAU,GAAI6P,uBAAsBjE,iBAAkBtU,iBAAkBuE,oBAC1GiU,gBAAkBC,6BAA6Brd,IACpE,OAAOsd,sBAAqBC,YAAY34B,OAAQi0B,eAAgB,MAAO5W,KAAMmb,gBAAiB/vB,UAUlG,QAAS6vB,gBAAeF,WAAY1P,SAAU4L,gBAAiBtU,iBAAkBuE,oBAC7E,GAAqBuC,WAAY4B,SAASpe,SAAS9D,IAAIoyB,WAClCtjB,aAAeoT,SAASpe,SAAS9D,IAAIqyB,cACrCzZ,SAAWkV,gBAAgBC,eAAe,KAAM,KACrE,QACI7L,SAAUA,SACVpe,SAAU8tB,WAAYpY,iBAAkBA,iBACxCwE,eAAgBD,mBAAoBuC,UAAWA,UAAWwN,gBAAiBA,gBAAiBlV,SAAUA,SAAU9J,aAAcA,cAUtI,QAASmiB,yBAAwBla,WAAY+E,UAAWwW,WAAYrwB,SAChE,GAAqB+vB,iBAAkBC,6BAA6BK,WACpE,OAAOJ,sBAAqBC,YAAY34B,OAAQ4zB,mBAAoB,MAAOrW,WAAY+E,UAAWkW,gBAAiB/vB,UASvH,QAASivB,0BAAyBna,WAAYN,QAAS6b,WAAY3E,aAC/D,GAAqBqE,iBAAkBC,6BAA6BK,WACpE,OAAOJ,sBAAqBC,YAAY34B,OAAQk0B,oBAAqB,MAAO3W,WAAYN,QAASub,gBAAiBrE,cAStH,QAASwD,wBAAuB3hB,WAAY+iB,eAAgB5M,oBAAqB/Q,KAC7E,GAAqBod,iBAAkBQ,iCAAiC5d,IACxE,OAAO8Q,mBAAkBlW,WAAY+iB,eAAgB5M,oBAAqBqM,iBAO9E,QAASZ,uBAAsBqB,UAC3BC,kBAAkBxyB,IAAIuyB,SAAS50B,MAAO40B,UAK1C,QAASpB,+BACLqB,kBAAkBC,QAMtB,QAASV,8BAA6Brd,KAmBlC,QAASge,4CAA2Che,KAGhD,IAAK,GAFgBie,sCACAC,eAAiB,KACZ31B,EAAI,EAAGA,EAAIyX,IAAIzB,MAAMlY,OAAQkC,IAAK,CACxD,GAAqBsZ,SAAU7B,IAAIzB,MAAMhW,EACrB,GAAhBsZ,QAAQzM,QACR8oB,eAAiBrc,SAEjBqc,gBAAkC,KAAhBrc,QAAQzM,OAC1B0oB,kBAAkBK,IAAuBtc,QAAiB,SAAE5Y,SAC5Dg1B,kCAAkCn4B,KAAsB,eAAmBe,OAC3Eq3B,eAAiB,MAGzB,MAAOD,mCAOX,QAASG,iCAAgCV,WAAYW,SACjD,IAAK,GAAqB91B,GAAI81B,QAAU,EAAG91B,EAAIm1B,WAAWnf,MAAMlY,OAAQkC,IAAK,CACzE,GAAqBsZ,SAAU6b,WAAWnf,MAAMhW,EAChD,IAAoB,EAAhBsZ,QAAQzM,MAER,MAEJ,IAAoB,KAAhByM,QAAQzM,MAA2C,CAGnDyM,QAAQzM,OAAS,IACjB,IAAqBnL,UAA8B4X,QAAiB,SAC/Cgc,SAAWC,kBAAkB1yB,IAAInB,SAAShB,MAC3D40B,YACAhc,QAAQzM,MAASyM,QAAQzM,OAAQ,KAAsCyoB,SAASzoB,MAChFnL,SAASC,KAAOiZ,aAAa0a,SAAS3zB,MACtCD,SAASpE,MAAQg4B,SAASh4B,SAvD1C,GAA+B,IAA3Bi4B,kBAAkBre,KAClB,MAAOO,IAEX,IAAqBse,wCAAyCN,2CAA2Che,IACzG,IAAsD,IAAlDse,uCAAuCj4B,OACvC,MAAO2Z,IAIXA,KAAyBA,IAAY,QAAE,WAAc,MAAO2D,OAC5D,KAAK,GAAqBpb,GAAI,EAAGA,EAAI+1B,uCAAuCj4B,OAAQkC,IAChF61B,gCAAgCpe,IAAKse,uCAAuC/1B,GAEhF,OAAOyX,KAoDX,QAAS4d,kCAAiC5d,KAatC,QAASue,eAAcve,KACnB,MAAOA,KAAI7N,UAAUiB,KAAK,SAAU0I,MAChC,SAAuB,KAAbA,KAAK1G,QAA8C0oB,kBAAkBK,IAAIriB,KAAK7S,SAOhG,QAASu1B,wBAAuBxe,KAC5B,IAAK,GAAqBzX,GAAI,EAAGA,EAAIyX,IAAI7N,UAAU9L,OAAQkC,IAAK,CAC5D,GAAqB0B,UAAW+V,IAAI7N,UAAU5J,EAG9C0B,UAASmL,OAAS,IAClB,IAAqByoB,UAAWC,kBAAkB1yB,IAAInB,SAAShB,MAC3D40B,YACA5zB,SAASmL,MAASnL,SAASmL,OAAQ,KAAsCyoB,SAASzoB,MAClFnL,SAASC,KAAOiZ,aAAa0a,SAAS3zB,MACtCD,SAASpE,MAAQg4B,SAASh4B,QA/BtC,MAA+B,KAA3Bi4B,kBAAkBre,MAAe8e,cAAcve,MAKnDA,IAAyBA,IAAY,QAAE,WAAc,MAAO2D,QAC5D6a,uBAAuBxe,KAChBA,KANIA,IAmDf,QAASic,wBAAuB3d,KAAMoD,UAAWyY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC3F,GAAqB/I,SAAUvD,KAAK0B,IAAIzB,MAAMmD,UAE9C,OADAwY,oBAAmB5b,KAAMuD,QAASsY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACxD,IAAhB/I,QAAQzM,MACZsJ,qBAAqBJ,KAAMoD,WAAW7b,MACtCuG,OAkBR,QAAS8vB,wBAAuB5d,KAAMoD,UAAWyY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC3F,GAAqB/I,SAAUvD,KAAK0B,IAAIzB,MAAMmD,UAE9C,OADA8Y,oBAAmBlc,KAAMuD,QAASsY,SAAUhQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACxD,IAAhB/I,QAAQzM,MACZsJ,qBAAqBJ,KAAMoD,WAAW7b,MACtCuG,OAMR,QAASswB,yBAAwBpe,MAC7B,MAAOgf,sBAAqBC,YAAYkB,cAAezE,mBAAoB,MAAO1b,OAMtF,QAASqe,yBAAwBre,MAC7B,MAAOgf,sBAAqBC,YAAYmB,eAAgB9E,mBAAoB,MAAOtb,OAMvF,QAASse,kBAAiBte,MACtB,MAAOgf,sBAAqBC,YAAYvjB,QAAS4gB,YAAa,MAAOtc,OAuBzE,QAAS6d,qBAAoB7d,KAAMoD,WAC/Bid,aAAergB,KACfsgB,kBAAoBld,UASxB,QAASmb,kBAAiBve,KAAMoD,UAAWC,UAAWC,OAElD,MADAua,qBAAoB7d,KAAMoD,WACnB4b,qBAAqBC,YAAYvb,YAAa1D,KAAK0B,IAAIgC,YAAa,MAAO1D,KAAMoD,UAAWC,UAAWC,QAOlH,QAASkb,uBAAsBxe,KAAMid,WAajC,QAASsD,wBAAuBvgB,KAAMoD,UAAWyY,UAE7C,IAAK,GADD7zB,WACKH,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCG,OAAOH,GAAK,GAAKC,UAAUD,GAE/B,IAAqB0b,SAAUvD,KAAK0B,IAAIzB,MAAMmD,UAU9C,OATkB,KAAd6Z,UACAuD,wBAAwBxgB,KAAMuD,QAASsY,SAAU7zB,QAGjDy4B,wBAAwBzgB,KAAMuD,QAASsY,SAAU7zB,QAEjC,MAAhBub,QAAQzM,OACR+mB,oBAAoB7d,KAAM0gB,yBAAyB1gB,KAAMoD,YAErC,IAAhBG,QAAQzM,MACZsJ,qBAAqBJ,KAAMuD,QAAQhb,OAAOhB,MAC1CuG,OA7BR,GAAiB,IAAbkS,KAAKyC,MACL,KAAMzB,oBAAmBie,YAAY0B,gBAGzC,OADA9C,qBAAoB7d,KAAM0gB,yBAAyB1gB,KAAM,IAClDA,KAAK0B,IAAIkX,iBAAiB2H,uBAAwBvgB,MAiC7D,QAASye,qBAAoBze,KAAMid,WAa/B,QAAS2D,wBAAuB5gB,KAAMoD,UAAWyY,UAE7C,IAAK,GADD7zB,WACKH,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCG,OAAOH,GAAK,GAAKC,UAAUD,GAE/B,IAAqB0b,SAAUvD,KAAK0B,IAAIzB,MAAMmD,UAU9C,OATkB,KAAd6Z,UACAuD,wBAAwBxgB,KAAMuD,QAASsY,SAAU7zB,QAGjDy4B,wBAAwBzgB,KAAMuD,QAASsY,SAAU7zB,QAEjC,EAAhBub,QAAQzM,OACR+mB,oBAAoB7d,KAAM6gB,0BAA0B7gB,KAAMoD,YAEtC,IAAhBG,QAAQzM,MACZsJ,qBAAqBJ,KAAMuD,QAAQhb,OAAOhB,MAC1CuG,OA7BR,GAAiB,IAAbkS,KAAKyC,MACL,KAAMzB,oBAAmBie,YAAY0B,gBAGzC,OADA9C,qBAAoB7d,KAAM6gB,0BAA0B7gB,KAAM,IACnDA,KAAK0B,IAAImX,eAAe+H,uBAAwB5gB,MAmC3D,QAASwgB,yBAAwBxgB,KAAMuD,QAASsY,SAAUiF,aACtD,GAAqBtU,SAAU,mBAAwCvkB,MAAM,QAAS+X,KAAMuD,QAASsY,UAAUjzB,OAAOk4B,aACtH,IAAItU,QAAS,CACT,GAAqBxkB,QAAsB,IAAb6zB,SAA+BiF,YAAY,GAAKA,WAC9E,IAAoB,MAAhBvd,QAAQzM,MAAmC,CAE3C,IAAK,GADgBiqB,kBACK92B,EAAI,EAAGA,EAAIsZ,QAAQ4D,SAASpf,OAAQkC,IAAK,CAC/D,GAAqB0iB,SAAUpJ,QAAQ4D,SAASld,GAC3B1C,MAAQS,OAAOiC,EAChB,GAAhB0iB,QAAQ7V,QACRiqB,cAAcC,0BAA6CrU,QAAwB,kBAC/EsU,2BAA2B15B,QAGvC,GAAqBqjB,OAA2BrH,QAAe,OAC1CrH,GAAKgE,cAAcF,KAAM4K,MAAMriB,OAAOyb,aAC3D,IAAwB4G,MAAc,QAAEpkB,KAMpC,IAAK,GAAqB06B,QAAQH,eAAe,CAC7C,GAAqBx5B,OAAQw5B,cAAcG,KAC9B,OAAT35B,MACAyY,KAAK0F,SAASyF,aAAajP,GAAIglB,KAAM35B,OAGrCyY,KAAK0F,SAAS4H,gBAAgBpR,GAAIglB,UAV1ClhB,MAAK0F,SAAS+S,SAASvc,GAAI,YAAcjN,KAAKvE,UAAUq2B,cAAe,KAAM,MAwB7F,QAASN,yBAAwBzgB,KAAMuD,QAASsY,SAAU7zB,QACtD,mBAAwCC,MAAM,QAAS+X,KAAMuD,QAASsY,UAAUjzB,OAAOZ,SAM3F,QAASg5B,2BAA0Bx6B,MAG/B,MADAA,MAAO26B,oBAAoB36B,KAAK0I,QAAQ,QAAS,MAC1C,cAAgB1I,KAO3B,QAAS26B,qBAAoBC,OACzB,MAAOA,OAAMlyB,QAAQmyB,kBAAmB,WAEpC,IAAK,GADDC,MACKz5B,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCy5B,EAAEz5B,IAAMC,UAAUD,GAEtB,OAAO,IAAMy5B,EAAE,GAAGC,gBAO1B,QAASN,4BAA2B15B,OAChC,IAEI,MAAgB,OAATA,MAAgBA,MAAM0D,WAAWsF,MAAM,EAAG,IAAMhJ,MAE3D,MAAwBgG,GACpB,MAAO,yDAQf,QAASmzB,0BAAyB1gB,KAAMoD,WACpC,IAAK,GAAqBnZ,GAAImZ,UAAWnZ,EAAI+V,KAAK0B,IAAIzB,MAAMlY,OAAQkC,IAAK,CACrE,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EAC9C,IAAoB,MAAhBsZ,QAAQzM,OAAqCyM,QAAQ4D,UAAY5D,QAAQ4D,SAASpf,OAClF,MAAOkC,GAGf,MAAO,MAOX,QAAS42B,2BAA0B7gB,KAAMoD,WACrC,IAAK,GAAqBnZ,GAAImZ,UAAWnZ,EAAI+V,KAAK0B,IAAIzB,MAAMlY,OAAQkC,IAAK,CACrE,GAAqBsZ,SAAUvD,KAAK0B,IAAIzB,MAAMhW,EAC9C,IAAqB,EAAhBsZ,QAAQzM,OAAkCyM,QAAQ4D,UAAY5D,QAAQ4D,SAASpf,OAChF,MAAOkC,GAGf,MAAO,MA8KX,QAASu3B,oBAAmBpC,WAAYhc,WAEpC,IAAK,GADgBqe,kBAAkB,EACbx3B,EAAI,EAAGA,GAAKmZ,UAAWnZ,IAAK,CAClD,GAAqBsZ,SAAU6b,WAAWnf,MAAMhW,EAC5B,GAAhBsZ,QAAQzM,OACR2qB,kBAGR,MAAOA,iBAMX,QAASC,iBAAgB1hB,MACrB,KAAOA,OAASmE,gBAAgBnE,OAC5BA,KAA0BA,KAAY,MAE1C,OAAIA,MAAK5S,OACE8S,cAAcF,KAAK5S,OAA2B0W,aAAa9D,MAAQzX,OAEvE,KAQX,QAASo5B,mBAAkB3hB,KAAMuD,QAASoB,YACtC,IAAK,GAAqBid,WAAWre,SAAQoB,WACzCA,WAAWid,SAAW7K,cAAc/W,KAAMuD,QAASA,QAAQoB,WAAWid,UAU9E,QAAS5C,sBAAqB3nB,OAAQjN,GAAIy3B,KAAMj6B,MAC5C,GAAqBk6B,WAAYnB,eACZoB,QAAU1B,aACV2B,aAAe1B,iBACpC,KACIK,eAAiBtpB,MACjB,IAAqByE,QAAS1R,GAAGnC,MAAM45B,KAAMj6B,KAI7C,OAHAy4B,cAAe0B,QACfzB,kBAAoB0B,aACpBrB,eAAiBmB,UACVhmB,OAEX,MAAwBvO,GACpB,GAAIwT,iBAAiBxT,KAAO8yB,aACxB,KAAM9yB,EAEV,MAAMoT,uBAAsBpT,EAAsB00B,2BAM1D,QAASA,0BACL,MAAO5B,cAAe,GAAI3C,eAAc2C,aAAcC,mBAAqB;;;;;;;AAga/E,QAAS/C,kBAAiBgC,UAEtB,MADArC,wBACOta,SAAS2a,iBAAiBgC,UAKrC,QAAS/B,0BAEL,MADAN,wBACOta,SAAS4a,yBAQpB,QAAS0E,uBAAsBC,aAAc1P,oBAAqB2P,YAC9D,MAAO,IAAIC,kBAAiBF,aAAc1P,oBAAqB2P;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0SnE,QAASE,WAAU97B,KAAM+7B,aACrB,OAAS92B,KAAM,EAAiBjF,KAAMA,KAAM+7B,YAAaA,YAAat1B,YAkD1E,QAASu1B,WAAUC,QAAS1gB,QAExB,MADe,UAAXA,SAAqBA,OAAS,OACzBtW,KAAM,EAAiBsW,OAAQA,OAAQ0gB,QAASA,SAoC7D,QAASC,SAAQC,MAAO11B,SAEpB,MADgB,UAAZA,UAAsBA,QAAU,OAC3BxB,KAAM,EAAek3B,MAAOA,MAAO11B,QAASA,SAuCzD,QAAS21B,YAAWD,MAAO11B,SAEvB,MADgB,UAAZA,UAAsBA,QAAU,OAC3BxB,KAAM,EAAkBk3B,MAAOA,MAAO11B,QAASA,SA8C5D,QAAS41B,SAAQC,QACb,OAASr3B,KAAM,EAAesW,OAAQ+gB,OAAQC,OAAQ,MAsD1D,QAASC,SAAQx8B,KAAMub,OAAQ9U,SAC3B,OAASxB,KAAM,EAAejF,KAAMA,KAAMub,OAAQA,OAAQ9U,QAASA,SAiDvE,QAASg2B,aAAYN,OACjB,OAASl3B,KAAM,EAAmBk3B,MAAOA,OA6L7C,QAASO,cAAaC,gBAAiBR,MAAO11B,SAE1C,MADgB,UAAZA,UAAsBA,QAAU,OAC3BxB,KAAM,EAAoB23B,KAAMD,gBAAiBE,UAAWV,MAAO11B,QAASA,SA6YzF,QAASq2B,YAAW98B,KAAM+7B,aACtB,MAAOD,WAAU97B,KAAM+7B,aAQ3B,QAASgB,YAAWd,QAAS1gB,QACzB,MAAOygB,WAAUC,QAAS1gB,QAO9B,QAASyhB,UAASb,OACd,MAAOD,SAAQC,OAOnB,QAASc,aAAYd,OACjB,MAAOC,YAAWD,OAOtB,QAASe,UAASZ,QACd,MAAOD,SAAQC,QAQnB,QAASa,UAASn9B,KAAMub,QACpB,MAAOihB,SAAQx8B,KAAMub,QAOzB,QAAS6hB,cAAajB,OAClB,MAAOM,aAAYN,OAQvB,QAASkB,eAAcV,gBAAiBR,OACpC,MAAOO,cAAaC,gBAAiBR,OAt+fzC,GAAIv8B,eAAgBC,OAAOy9B,iBACpBC,uBAA2Bn5B,QAAS,SAAU5E,EAAGC,GAAKD,EAAE+9B,UAAY99B,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI8O,KAAK9O,GAAOA,EAAEmB,eAAe2N,KAAI/O,EAAE+O,GAAK9O,EAAE8O,KAQrEivB,SAAW39B,OAAO49B,QAAU,SAAkBrvB,GAC9C,IAAK,GAAIsvB,GAAGj6B,EAAI,EAAGk6B,EAAIr8B,UAAUC,OAAQkC,EAAIk6B,EAAGl6B,IAAK,CACjDi6B,EAAIp8B,UAAUmC,EACd,KAAK,GAAI8K,KAAKmvB,GAAO79B,OAAOZ,UAAU2B,eAAeL,KAAKm9B,EAAGnvB,KAAIH,EAAEG,GAAKmvB,EAAEnvB,IAE9E,MAAOH,IAkCPU,eAAkB,WAClB,QAASA,gBAAe8uB,OACpB1+B,KAAK0+B,MAAQA,MAmBjB,MAdA9uB,gBAAe7P,UAAUwF,SAGzB,WAAc,MAAO,kBAAoBvF,KAAK0+B,OAC9C/9B,OAAOiB,eAAegO,eAAe7P,UAAW,kBAE5CqH,IAIA,WAAc,MAAO,kBACrBu3B,YAAY,EACZC,cAAc,IAEXhvB,kBAsBPjO,YAAc,kBACdoB,WAAa,iBACbU,cAAgB,qBAuMhBo7B,6BAA+B,GAAIjvB,gBAAe,6BAclDkvB,UAAYr8B,mBAAmB,YAAa,SAAUs8B,eAAiB,OAAUA,cAAeA,iBAUhGC,MAAS,WACT,QAASA,UAET,MAAOA,UAiBPC,gBAAkB77B,kBAAkB,kBAAmB,SAAUuoB,SAAUpP,MAE3E,MADa,UAATA,OAAmBA,SACf+hB,UAAW3S,SAAUA,SAAUngB,OAAO,EAAO0zB,aAAa,EAAOC,aAAa,GAAS5iB,OAChGyiB,OAeCI,aAAeh8B,kBAAkB,eAAgB,SAAUuoB,SAAUpP,MAErE,MADa,UAATA,OAAmBA,SACf+hB,UAAW3S,SAAUA,SAAUngB,OAAO,EAAM0zB,aAAa,EAAOC,aAAa,GAAQ5iB,OAC9FyiB,OAgBCK,aAAej8B,kBAAkB,eAAgB,SAAUuoB,SAAUpP,MAErE,MADa,UAATA,OAAmBA,SACf+hB,UAAW3S,SAAUA,SAAUngB,OAAO,EAAO0zB,aAAa,EAAMC,aAAa,GAAQ5iB,OAC9FyiB,OAgBCM,UAAYl8B,kBAAkB,YAAa,SAAUuoB,SAAUpP,MAC/D,MAAQ+hB,WAAW3S,SAAUA,SAAUngB,OAAO,EAAM0zB,aAAa,EAAMC,aAAa,GAAQ5iB,OAC7FyiB,OAOCn7B,yBAIA07B,OAAQ,EAIRz7B,QAAS,EAEbD,yBAAwBA,wBAAwB07B,QAAU,SAC1D17B,wBAAwBA,wBAAwBC,SAAW,SAE3D,IAAI07B,uBAKAC,UAAW,EAKXC,QAAS,EAKTC,YAAa,EAKbC,SAAU,EAMVC,QAAS,EAITC,UAAW,EAEfN,sBAAqBA,qBAAqBC,WAAa,YACvDD,qBAAqBA,qBAAqBE,SAAW,UACrDF,qBAAqBA,qBAAqBG,aAAe,cACzDH,qBAAqBA,qBAAqBI,UAAY,WACtDJ,qBAAqBA,qBAAqBK,SAAW,UACrDL,qBAAqBA,qBAAqBM,WAAa;;;;;;;AAkCvD,GAAIC,WAAYl/B,cAAc,YAAa,SAAUm/B,KAEjD,MADY,UAARA,MAAkBA,QACfA,MAePC,UAAYp/B,cAAc,YAAa,SAAUq/B,GAEjD,MADU,UAANA,IAAgBA,MACZ5B,UAAW6B,gBAAiBt8B,wBAAwBC,SAAWo8B,IACxEH,WAcCK,KAAOv/B,cAAc,OAAQ,SAAUwO,GAAK,MAAQivB,WAAW+B,MAAM,GAAQhxB,KAc7EixB,MAAQl9B,kBAAkB,QAAS,SAAUm9B,qBAAuB,OAAUA,oBAAqBA,uBAcnGC,OAASp9B,kBAAkB,SAAU,SAAUm9B,qBAAuB,OAAUA,oBAAqBA,uBAcrGE,YAAcr9B,kBAAkB,cAAe,SAAUs9B,kBAAoB,OAAUA,iBAAkBA,oBAczGC,aAAev9B,kBAAkB,eAAgB,SAAUua,UAAWzb,MAAQ,OAAUyb,UAAWA,UAAWzb,KAAMA,QA4BpH0+B,wBACA9/B,KAAM,mBAON+/B,kBACA//B,KAAM,oBAeNggC,SAAWjgC,cAAc,WAAY,SAAUyoB,UAAY,MAAOA,YAOlE5M,mBASAqkB,SAAU,EAOVvhB,OAAQ,EAIR7C,KAAM,EAEVD,mBAAkBA,kBAAkBqkB,UAAY,WAChDrkB,kBAAkBA,kBAAkB8C,QAAU,SAC9C9C,kBAAkBA,kBAAkBC,MAAQ,MAgB5C,IAg1GI1L,OACAC,OAikCA8D,UAl5IAgsB,QAAW,WACX,QAASA,SAAQC,MACbjhC,KAAKihC,KAAOA,KA0BhB,MAxBAtgC,QAAOiB,eAAeo/B,QAAQjhC,UAAW,SACrCqH,IAGA,WAAc,MAAOpH,MAAKihC,KAAKC,MAAM,KAAK,IAC1CvC,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo/B,QAAQjhC,UAAW,SACrCqH,IAGA,WAAc,MAAOpH,MAAKihC,KAAKC,MAAM,KAAK,IAC1CvC,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo/B,QAAQjhC,UAAW,SACrCqH,IAGA,WAAc,MAAOpH,MAAKihC,KAAKC,MAAM,KAAKr2B,MAAM,GAAGzF,KAAK,MACxDu5B,YAAY,EACZC,cAAc,IAEXoC,WAKPG,QAAU,GAAIH,SAAQ,qBA0BtBh4B,OAASvG,mBAAmB,SAAU,SAAUwC,OAAS,OAAUA,MAAOA,SAc1E4D,SAAWpG,mBAAmB,YAc9B2+B,WAAavgC,cAAc,cAc3BkI,KAAOtG,mBAAmB,QAc1BqG,SAAWrG,mBAAmB,YAc9B4+B,KAAO5+B,mBAAmB,QAM1B6+B,SAA6B,mBAAXC,SAA0BA,OAC5CC,OAAyB,mBAATrF,OAAqD,mBAAtBsF,oBAC/CtF,eAAgBsF,oBAAqBtF,KACrCuF,SAA6B,mBAAXtiC,SAA0BA,OAC5C8E,QAAUo9B,UAAYI,UAAYF,OAClCx9B,gBAAkB,KAgIlB29B,oBAAsB,GAAIhhC,QAC1B+H,mBAAqBi5B,oBACrBC,cAAiB,WACjB,QAASA,kBAmBT,MAZAA,eAAc7hC,UAAUqH,IAKxB,SAAUnC,MAAO0C,eAEb,GADsB,SAAlBA,gBAA4BA,cAAgBg6B,qBAC5Ch6B,gBAAkBg6B,oBAClB,KAAM,IAAI75B,OAAM,sCAAwC9C,UAAUC,OAAS,IAE/E,OAAO0C,gBAEJi6B,iBAuBPn5B,SAAY,WACZ,QAASA,aAkCT,MAfAA,UAAS7H,OAUT,SAAUuN,UAAWzG,QACjB,MAAO,IAAIm6B,gBAAe1zB,UAAWzG,SAEzCe,SAASC,mBAAqBi5B,oBAC9Bl5B,SAASq5B,KAAO,GAAIF,eACbn5B,YAEPrC,MAAQ,SAAUvE,OAClB,MAAOA,QAEPwE,SACA4B,SAAW7B,MACXiB,kBAAoB,WACpB,MAAOnC,OAAMnF,UAAU8K,MAAMxJ,KAAKe,YAElCwH,qBACApD,UAAYkD,wBAAyBnD,QAAS+J,OAAQ7J,SAAUmD,oBAChEm4B,cAAgB,cAChB/5B,mBAAqB,kBACrBQ,cAAgBC,SAASq5B,KACzBr4B,SAAW,OACXvB,YAAc,IACd25B,eAAkB,WAClB,QAASA,gBAAe1zB,UAAWzG,QAChB,SAAXA,SAAqBA,OAASc,eAClCxI,KAAK0H,OAASA,MACd,IAAqBV,SAAUhH,KAAKgiC,SAAW,GAAI19B,IACnD0C,SAAQM,IAAImB,UAA8BxD,MAAOwD,SAAU/D,GAAI0B,MAAOF,KAAMG,MAAOxE,MAAO7B,KAAMsG,QAAQ,IACxGS,4BAA4BC,QAASmH,WAoCzC,MA7BA0zB,gBAAe9hC,UAAUqH,IAKzB,SAAUnC,MAAO0C,eACb,GAAqBH,QAASxH,KAAKgiC,SAAS56B,IAAInC,MAChD,KACI,MAAOwC,iBAAgBxC,MAAOuC,OAAQxH,KAAKgiC,SAAUhiC,KAAK0H,OAAQC,eAEtE,MAAwBE,GACpB,GAAqBo6B,WAAYp6B,EAAEG,mBAInC,MAHAH,GAAE0C,QAAUtB,YAAY,KAAOpB,EAAE0C,QAAS03B,WAC1Cp6B,EAAEk6B,eAAiBE,UACnBp6B,EAAEG,oBAAsB,KAClBH,IAMdg6B,eAAe9hC,UAAUwF,SAGzB,WACI,GAAqB63B,WAAiDp2B,QAAUhH,KAAKgiC,QAErF,OADAh7B,SAAQ8H,QAAQ,SAAUrC,EAAGxH,OAAS,MAAOm4B,QAAOt7B,KAAKkD,UAAUC,UAC5D,kBAAoBm4B,OAAOh4B,KAAK,MAAQ,KAE5Cy8B,kBA0QP93B,oBAAsB,iBACtBE,qBAAuB,kBACvBE,aAAe,gBA6EfsvB,aAAgB,WAChB,QAASA,gBAILz5B,KAAKkiC,SAAW73B,QA4DpB,MAtDAovB,cAAa15B,UAAUsU,YAIvB,SAAUvK,OACN,GAAqBU,eAAgBxK,KAAKmiC,mBAAmBr4B,OACxCT,QAAUrJ,KAAKoiC,aAAat4B,OAG5Bu4B,YAAcn4B,eAAeJ,MAClDu4B,aAAYriC,KAAKkiC,SAAU,QAASp4B,OAChCU,eACA63B,YAAYriC,KAAKkiC,SAAU,iBAAkB13B,eAE7CnB,SACAg5B,YAAYriC,KAAKkiC,SAAU,gBAAiB74B,UASpDowB,aAAa15B,UAAUqiC,aAKvB,SAAUt4B,OACN,MAAIA,OACOD,gBAAgBC,OAASD,gBAAgBC,OAC5C9J,KAAKoiC,aAAap4B,iBAAiBF,QAEpC,MAQX2vB,aAAa15B,UAAUoiC,mBAKvB,SAAUr4B,OAEN,IADA,GAAqBjC,GAAImC,iBAAiBF,OACnCjC,GAAKmC,iBAAiBnC,IACzBA,EAAImC,iBAAiBnC,EAEzB,OAAOA,IAEJ4xB,gBAySP7rB,cAAiB,WAIjB,QAASA,eAAc3I,MAAO2J,IAG1B,GAFA5O,KAAKiF,MAAQA,MACbjF,KAAK4O,GAAKA,IACL3J,MACD,KAAM,IAAI6C,OAAM,0BA0CxB,MAvCAnH,QAAOiB,eAAegM,cAAc7N,UAAW,eAI3CqH,IAIA,WAAc,MAAOpC,WAAUhF,KAAKiF,QACpC05B,YAAY,EACZC,cAAc,IAUlBhxB,cAAcxG,IAKd,SAAUnC,OACN,MAAOq9B,oBAAmBl7B,IAAItB,kBAAkBb,SAEpDtE,OAAOiB,eAAegM,cAAe,gBAIjCxG,IAGA,WAAc,MAAOk7B,oBAAmBC,cACxC5D,YAAY,EACZC,cAAc,IAEXhxB,iBAKP40B,YAAe,WACf,QAASA,eACLxiC,KAAKyiC,SAAW,GAAIn+B,KA4BxB,MAtBAk+B,aAAYziC,UAAUqH,IAItB,SAAUnC,OACN,GAAIA,gBAAiB2I,eACjB,MAAO3I,MACX,IAAIjF,KAAKyiC,SAAStI,IAAIl1B,OAClB,MAA0BjF,MAAKyiC,SAASr7B,IAAInC,MAEhD,IAAqBy9B,QAAS,GAAI90B,eAAc3I,MAAO2I,cAAc20B,aAErE,OADAviC,MAAKyiC,SAASn7B,IAAIrC,MAAOy9B,QAClBA,QAEX/hC,OAAOiB,eAAe4gC,YAAYziC,UAAW,gBACzCqH,IAGA,WAAc,MAAOpH,MAAKyiC,SAAShnB,MACnCkjB,YAAY,EACZC,cAAc,IAEX4D,eAEPF,mBAAqB,GAAIE,aAgBzBzzB,KAAO4zB,SAuBPC,cAAgB,6DAChBC,uBAA0B,WAC1B,QAASA,wBAAuBC,SAC5B9iC,KAAK+iC,SAAWD,SAAW5+B,QAAiB,QA+VhD,MA1VA2+B,wBAAuB9iC,UAAUijC,oBAGjC,WAAc,OAAO,GAMrBH,uBAAuB9iC,UAAUV,QAKjC,SAAU6P,GAAK,MAAO,YAElB,IAAK,GADDhN,SACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,OAAO,KAAK+M,EAAEjM,KAAKV,MAAM2M,GAAI,QAAQhM,OAAOhB,UAShD2gC,uBAAuB9iC,UAAUkjC,wBAMjC,SAAUC,WAAYC,kBAClB,GAAqB/sB,OAEjBA,QADsB,mBAAf8sB,YACE,GAAIh+B,OAAMi+B,iBAAiB9gC,QAG3B,GAAI6C,OAAMg+B,WAAW7gC,OAElC,KAAK,GAAqBkC,GAAI,EAAGA,EAAI6R,OAAO/T,OAAQkC,IAItB,mBAAf2+B,YACP9sB,OAAO7R,MAEF2+B,WAAW3+B,IAAM5D,OACtByV,OAAO7R,IAAM2+B,WAAW3+B,IAGxB6R,OAAO7R,MAEP4+B,kBAA2C,MAAvBA,iBAAiB5+B,KACrC6R,OAAO7R,GAAK6R,OAAO7R,GAAGrB,OAAOigC,iBAAiB5+B,IAGtD,OAAO6R,SAOXysB,uBAAuB9iC,UAAUqjC,eAKjC,SAAUr9B,KAAMoH,YAQZ,GAAIy1B,cAAcS,KAAKt9B,KAAKR,YACxB,MAAO,KAGX,IAAI,KAA0BzC,YAAc,KAA0BA,aAAeqK,WAAWrK,WAC5F,MAAO,MAA0BA,UAGrC,IAAqBwgC,mBAAoB,KAA0BC,cACnE,IAAID,mBAAqBA,oBAAsBn2B,WAAWo2B,eAAgB,CAGtE,GAAqBA,gBAA8C,kBAAtBD,mBAAmCA,oBAAsBA,kBACjFE,aAAeD,eAAep+B,IAAI,SAAUs+B,WAAa,MAAOA,YAAaA,UAAU19B,OACvF29B,mBAAqBH,eAAep+B,IAAI,SAAUs+B,WACnE,MAAOA,YAAa/2B,oCAAoC+2B,UAAUE,aAEtE,OAAO3jC,MAAKijC,wBAAwBO,aAAcE,oBAGtD,GAAqBP,kBAAmBp9B,KAAKrE,eAAeqB,aAAe,KAA0BA,YAChFmgC,WAAaljC,KAAK+iC,UAAY/iC,KAAK+iC,SAASa,gBAC7D5jC,KAAK+iC,SAASa,eAAe,oBAAqB79B,KACtD,OAAIm9B,aAAcC,iBACPnjC,KAAKijC,wBAAwBC,WAAYC,kBAM7C,GAAIj+B,OAAyBa,KAAY,QAAG89B,KAAKz7B,SAM5Dy6B,uBAAuB9iC,UAAU+C,WAIjC,SAAUiD,MAGN,IAAKyG,OAAOzG,MACR,QAEJ,IAAqBoH,YAAaJ,cAAchH,MAC3BjD,WAAa9C,KAAKojC,eAAer9B,KAAMoH,WAI5D,OAHKrK,aAAcqK,aAAexM,SAC9BmC,WAAa9C,KAAK8C,WAAWqK,aAE1BrK,gBAOX+/B,uBAAuB9iC,UAAU+jC,gBAKjC,SAAU/3B,WAAYoB,YAElB,GAAI,WAAgC1L,aAAe,WAAgCA,cAAgB0L,WAAW1L,YAAa,CACvH,GAAqBA,aAAc,WAAgCA,WAInE,OAH2B,kBAAhBA,cAA8BA,YAAYA,cACjDA,YAAcA,YAAYA,aAEvBA,YAGX,MAAI,YAAgCkiC,YAAc,WAAgCA,aAAex2B,WAAWw2B,WACjGj3B,oCAAoC,WAAgCi3B,YAG3E53B,WAAWrK,eAAeC,aACnB,WAAgCA,aAEpC,MAMXkhC,uBAAuB9iC,UAAU0B,YAIjC,SAAUsK,YACN,IAAKS,OAAOT,YACR,QAEJ,IAAqBoB,YAAaJ,cAAchB,YAC3Bg4B,eAAiB/jC,KAAK8jC,gBAAgB/3B,WAAYoB,gBAClD62B,kBAAoB72B,aAAexM,OAASX,KAAKyB,YAAY0L,cAClF,OAAO62B,mBAAkB9gC,OAAO6gC,iBAOpClB,uBAAuB9iC,UAAUkkC,iBAKjC,SAAUl4B,WAAYoB,YAElB,GAAI,WAAgC+2B,cAChC,WAAgCA,eAAiB/2B,WAAW+2B,aAAc,CAC1E,GAAqBA,cAAe,WAAgCA,YAIpE,OAH4B,kBAAjBA,eAA+BA,aAAaA,eACnDA,aAAeA,aAAaA,cAEzBA,aAGX,GAAI,WAAgCC,gBAChC,WAAgCA,iBAAmBh3B,WAAWg3B,eAAgB,CAC9E,GAAqBC,kBAAmB,WAAgCD,eACnDE,iBAIrB,OAHA1jC,QAAOyD,KAAKggC,kBAAkBt1B,QAAQ,SAAUoe,MAC5CmX,eAAenX,MAAQxgB,oCAAoC03B,iBAAiBlX,SAEzEmX,eAGX,MAAIt4B,YAAWrK,eAAe+B,eACnB,WAAgCA,eAEpC,MAMXo/B,uBAAuB9iC,UAAUmkC,aAIjC,SAAUn4B,YACN,IAAKS,OAAOT,YACR,QAEJ,IAAqBoB,YAAaJ,cAAchB,YAC3Bm4B,eACrB,IAAI/2B,aAAexM,OAAQ,CACvB,GAAqB2jC,sBAAuBtkC,KAAKkkC,aAAa/2B,WAC9DxM,QAAOyD,KAAKkgC,sBAAsBx1B,QAAQ,SAAUtM,UAChD0hC,aAAa1hC,UAAY8hC,qBAAqB9hC,YAGtD,GAAqB+hC,iBAAkBvkC,KAAKikC,iBAAiBl4B,WAAYoB,WAWzE,OAVIo3B,kBACA5jC,OAAOyD,KAAKmgC,iBAAiBz1B,QAAQ,SAAUtM,UAC3C,GAAqBmhC,cACjBO,cAAaxiC,eAAec,WAC5BmhC,WAAW7hC,KAAKS,MAAMohC,WAAYO,aAAa1hC,WAEnDmhC,WAAW7hC,KAAKS,MAAMohC,WAAYY,gBAAgB/hC,WAClD0hC,aAAa1hC,UAAYmhC,aAG1BO,cAOXrB,uBAAuB9iC,UAAUykC,iBAKjC,SAAUz+B,KAAM0+B,YACZ,MAAO1+B,gBAAgBgJ,OAAQ01B,aAAc1+B,MAAKhG,WAMtD8iC,uBAAuB9iC,UAAU0U,OAIjC,SAAU3T,MAAQ,MAAwB,IAAK6hC,UAAS,IAAK,YAAc7hC,KAAO,MAKlF+hC,uBAAuB9iC,UAAU2kC,OAIjC,SAAU5jC,MACN,MAAwB,IAAK6hC,UAAS,IAAK,IAAK,YAAc7hC,KAAO,UAMzE+hC,uBAAuB9iC,UAAU4kC,OAIjC,SAAU7jC,MACN,GAAqB8jC,cAAe,UAAY9jC,KAAO,wBAA0BA,KAAO,wCAA0CA,KAAO,kBACzI,OAAwB,IAAK6hC,UAAS,IAAK,OAAQiC,eAOvD/B,uBAAuB9iC,UAAU8kC,UAIjC,SAAU9+B,MAEN,MAAoB,gBAATA,OAAqBA,KAAe,SACpCA,KAAe,SAGnB,KAAOf,UAAUe,OAM5B88B,uBAAuB9iC,UAAU+kC,YAIjC,SAAU/+B,MAAQ,MAAO,KAAOf,UAAUe,OAQ1C88B,uBAAuB9iC,UAAUglC,kBAOjC,SAAUjkC,KAAMkkC,UAAWC,QAASC,SAChC,MAAOA,UAOXrC,uBAAuB9iC,UAAUolC,YAKjC,SAAUC,eAAgBtkC,MAAQ,MAAOskC,gBAAetkC,OACjD+hC,0BAqCPwC,UAAa,WACb,QAASA,WAAUC,wBACftlC,KAAKslC,uBAAyBA,uBA6IlC,MAvIAD,WAAUtlC,UAAUwlC,mBAIpB,SAAUC,MAAQxlC,KAAKslC,uBAAyBE,MAKhDH,UAAUtlC,UAAUV,QAIpB,SAAU0G,MAAQ,MAAO/F,MAAKslC,uBAAuBjmC,QAAQ0G,OAK7Ds/B,UAAUtlC,UAAU+C,WAIpB,SAAUiJ,YACN,MAAO/L,MAAKslC,uBAAuBxiC,WAAWiJ,aAMlDs5B,UAAUtlC,UAAU0B,YAIpB,SAAUsK,YACN,MAAO/L,MAAKslC,uBAAuB7jC,YAAYsK,aAMnDs5B,UAAUtlC,UAAUmkC,aAIpB,SAAUn4B,YACN,MAAO/L,MAAKslC,uBAAuBpB,aAAan4B,aAOpDs5B,UAAUtlC,UAAUykC,iBAKpB,SAAUz+B,KAAM0+B,YACZ,MAAOzkC,MAAKslC,uBAAuBd,iBAAiBz+B,KAAM0+B,aAM9DY,UAAUtlC,UAAU0U,OAIpB,SAAU3T,MAAQ,MAAOd,MAAKslC,uBAAuB7wB,OAAO3T,OAK5DukC,UAAUtlC,UAAU2kC,OAIpB,SAAU5jC,MAAQ,MAAOd,MAAKslC,uBAAuBZ,OAAO5jC,OAK5DukC,UAAUtlC,UAAU4kC,OAIpB,SAAU7jC,MAAQ,MAAOd,MAAKslC,uBAAuBX,OAAO7jC,OAK5DukC,UAAUtlC,UAAU8kC,UAIpB,SAAU9+B,MAAQ,MAAO/F,MAAKslC,uBAAuBT,UAAU9+B,OAK/Ds/B,UAAUtlC,UAAU+kC,YAIpB,SAAU/+B,MAAQ,MAAO/F,MAAKslC,uBAAuBR,YAAY/+B,OAQjEs/B,UAAUtlC,UAAUglC,kBAOpB,SAAUjkC,KAAMkkC,UAAWC,QAASC,SAChC,MAAOllC,MAAKslC,uBAAuBP,kBAAkBjkC,KAAMkkC,UAAWC,QAASC,UAOnFG,UAAUtlC,UAAUolC,YAKpB,SAAUM,WAAY3kC,MAClB,MAAOd,MAAKslC,uBAAuBH,YAAYM,WAAY3kC,OAExDukC,aAkBP93B,UAAY,GAAI83B,WAAU,GAAIxC,yBAiB9Bn1B,qBAAwB,WACxB,QAASA,sBAAqBlJ,IAAK+K,SAAUG,YACzC1P,KAAKwE,IAAMA,IACXxE,KAAKuP,SAAWA,SAChBvP,KAAK0P,WAAaA,WAatB,MAPAhC,sBAAqBC,QAIrB,SAAUnJ,KACN,MAAO,IAAIkJ,sBAAqBlJ,MAAK,GAAO,OAEzCkJ,wBAEPI,eAqBAG,4BAA+B,WAC/B,QAASA,6BAA4BzJ,IAAKqK,kBAAmB1H,eACzDnH,KAAKwE,IAAMA,IACXxE,KAAK6O,kBAAoBA,kBACzB7O,KAAKmH,cAAgBA,cAUzB,MARAxG,QAAOiB,eAAeqM,4BAA4BlO,UAAW,mBACzDqH,IAGA,WAAc,MAAOpH,MAAK6O,kBAAkB,IAC5C8vB,YAAY,EACZC,cAAc,IAEX3wB,+BAOPF,0BAA6B,WAC7B,QAASA,2BAA0B1O,QAAS2P,cACxChP,KAAKX,QAAUA,QACfW,KAAKgP,aAAeA,aAExB,MAAOjB,8BA4MP23B,UAAY,GAAI/kC,QAqChBglC,mBAAsB,WACtB,QAASA,uBAkRT,MA5MAA,oBAAmBC,QAmCnB,SAAUz3B,WACN,MAAOD,4BAA2BC,YAyDtCw3B,mBAAmBE,iBA6BnB,SAAU13B,UAAWzG,QACjB,GAAqBo+B,6BAA8BH,mBAAmBC,QAAQz3B,UAC9E,OAAOw3B,oBAAmBI,sBAAsBD,4BAA6Bp+B,SAmDjFi+B,mBAAmBI,sBA0BnB,SAAU53B,UAAWzG,QACjB,MAAO,IAAIs+B,qBAAoB73B,UAAWzG,SAEvCi+B,sBAEPK,oBAAuB,WAIvB,QAASA,qBAAoBl2B,WAAYkZ,SAIrChpB,KAAKimC,qBAAuB,EAC5BjmC,KAAK8P,WAAaA,WAClB9P,KAAKgpB,QAAUA,SAAW,IAC1B,IAAqBU,KAAM5Z,WAAWzN,MACtCrC,MAAKkmC,OAAS,GAAIhhC,OAAMwkB,KACxB1pB,KAAKmmC,KAAO,GAAIjhC,OAAMwkB,IACtB,KAAK,GAAqBnlB,GAAI,EAAGA,EAAImlB,IAAKnlB,IACtCvE,KAAKkmC,OAAO3hC,GAAKuL,WAAWvL,GAAGC,IAAIoK,GACnC5O,KAAKmmC,KAAK5hC,GAAKmhC,UAuTvB,MA/SAM,qBAAoBjmC,UAAUqH,IAK9B,SAAUnC,MAAO0C,eAEb,MADsB,UAAlBA,gBAA4BA,cAAgBe,oBACzC1I,KAAKomC,UAAUx4B,cAAcxG,IAAInC,OAAQ,KAAM0C,gBAE1DhH,OAAOiB,eAAeokC,oBAAoBjmC,UAAW,UACjDqH,IAGA,WAAc,MAAOpH,MAAKgpB,SAC1B2V,YAAY,EACZC,cAAc,IAMlBoH,oBAAoBjmC,UAAUsmC,sBAI9B,SAAUl4B,WACN,GAAqB23B,6BAA8BH,mBAAmBC,QAAQz3B,UAC9E,OAAOnO,MAAKsmC,wBAAwBR,8BAMxCE,oBAAoBjmC,UAAUumC,wBAI9B,SAAUn4B,WACN,GAAqBo4B,KAAM,GAAIP,qBAAoB73B,UAEnD,OADAo4B,KAAIvd,QAAUhpB,KACPumC,KAMXP,oBAAoBjmC,UAAUymC,sBAI9B,SAAUvgC,UACN,MAAOjG,MAAKymC,oBAAoBd,mBAAmBC,SAAS3/B,WAAW,KAM3E+/B,oBAAoBjmC,UAAU0mC,oBAI9B,SAAUxgC,UACN,MAAOjG,MAAK0mC,qBAAqBzgC,WAMrC+/B,oBAAoBjmC,UAAUgQ,mBAI9B,SAAUlN,OACN,GAAIA,MAAQ,GAAKA,OAAS7C,KAAK8P,WAAWzN,OACtC,KAAM+J,kBAAiBvJ,MAE3B,OAAO7C,MAAK8P,WAAWjN,QAQ3BmjC,oBAAoBjmC,UAAU4mC,KAK9B,SAAU1gC,UACN,GAAIjG,KAAKimC,uBAAyBjmC,KAAK4mC,yBACnC,KAAMn7B,uBAAsBzL,KAAMiG,SAASzB,IAE/C,OAAOxE,MAAK0mC,qBAAqBzgC,WAKrC+/B,oBAAoBjmC,UAAU6mC,uBAG9B,WAAc,MAAO5mC,MAAKmmC,KAAK9jC,QAK/B2jC,oBAAoBjmC,UAAU2mC,qBAI9B,SAAUzgC,UACN,GAAIA,SAASkB,cAAe,CAExB,IAAK,GADgB7B,KAAM,GAAIJ,OAAMe,SAAS4I,kBAAkBxM,QACtCkC,EAAI,EAAGA,EAAI0B,SAAS4I,kBAAkBxM,SAAUkC,EACtEe,IAAIf,GAAKvE,KAAK6mC,aAAa5gC,SAAUA,SAAS4I,kBAAkBtK,GAEpE,OAAOe,KAGP,MAAOtF,MAAK6mC,aAAa5gC,SAAUA,SAAS4I,kBAAkB,KAQtEm3B,oBAAoBjmC,UAAU8mC,aAK9B,SAAU5gC,SAAU6gC,8BAChB,GAEqB5gC,MAFjB6gC,MAAQ/mC,KACSX,QAAUynC,6BAA6BznC,OAE5D,KACI6G,KACI4gC,6BAA6B93B,aAAa7J,IAAI,SAAU6hC,KAAO,MAAOD,OAAME,2BAA2BD,OAE/G,MAAwBn/B,GAIpB,KAHIA,GAAEwD,QACFxD,EAAEwD,OAAOrL,KAAMiG,SAASzB,KAEtBqD,EAEV,GAAqBM,IACrB,KACIA,IAAM9I,QAAQkD,MAAM,OAAQ2D,MAEhC,MAAwB2B,GACpB,KAAM6D,oBAAmB1L,KAAM6H,EAAGA,EAAEq/B,MAAOjhC,SAASzB,KAExD,MAAO2D,MAMX69B,oBAAoBjmC,UAAUknC,2BAI9B,SAAUD,KACN,MAAOhnC,MAAKomC,UAAUY,IAAIxiC,IAAKwiC,IAAIt3B,WAAYs3B,IAAIz3B,SAAW,KAAO7G,qBAQzEs9B,oBAAoBjmC,UAAUqmC,UAM9B,SAAU5hC,IAAKkL,WAAY/H,eACvB,MAAInD,OAAQwhC,oBAAoBmB,aACrBnnC,KAEP0P,qBAAsB3G,MACf/I,KAAKonC,cAAc5iC,IAAKmD,eAGxB3H,KAAKqnC,iBAAiB7iC,IAAKmD,cAAe+H,aAOzDs2B,oBAAoBjmC,UAAUunC,eAI9B,SAAUC,OACN,IAAK,GAAqBhjC,GAAI,EAAGA,EAAIvE,KAAKkmC,OAAO7jC,OAAQkC,IACrD,GAAIvE,KAAKkmC,OAAO3hC,KAAOgjC,MAInB,MAHIvnC,MAAKmmC,KAAK5hC,KAAOmhC,YACjB1lC,KAAKmmC,KAAK5hC,GAAKvE,KAAK2mC,KAAK3mC,KAAK8P,WAAWvL,KAEtCvE,KAAKmmC,KAAK5hC,EAGzB,OAAOmhC,YASXM,oBAAoBjmC,UAAUynC,aAM9B,SAAUhjC,IAAKmD,eACX,GAAIA,gBAAkBe,mBAClB,MAAOf,cAGP,MAAM4D,iBAAgBvL,KAAMwE,MAUpCwhC,oBAAoBjmC,UAAUqnC,cAM9B,SAAU5iC,IAAKmD,eACX,GAAqBQ,KAAMnI,KAAKsnC,eAAe9iC,IAAIoK,GACnD,OAAQzG,OAAQu9B,UAAav9B,IAAMnI,KAAKwnC,aAAahjC,IAAKmD,gBAU9Dq+B,oBAAoBjmC,UAAUsnC,iBAO9B,SAAU7iC,IAAKmD,cAAe+H,YAC1B,GAAqB62B,IAOrB,KALIA,IADA72B,qBAAsB5G,UAChB9I,KAAKgpB,QAGLhpB,KAEHumC,cAAeP,sBAAqB,CACvC,GAAqByB,MAAwB,IACxBt/B,IAAMs/B,KAAKH,eAAe9iC,IAAIoK,GACnD,IAAIzG,MAAQu9B,UACR,MAAOv9B,IACXo+B,KAAMkB,KAAKze,QAEf,MAAY,QAARud,IACOA,IAAIn/B,IAAI5C,IAAIS,MAAO0C,eAGnB3H,KAAKwnC,aAAahjC,IAAKmD,gBAGtChH,OAAOiB,eAAeokC,oBAAoBjmC,UAAW,eACjDqH,IAGA,WACI,GAAqB+G,WAAY0B,cAAc7P,KAAM,SAAUO,GAAK,MAAO,KAAOA,EAAEiE,IAAIkjC,YAAc,OACjGtiC,KAAK,KACV,OAAO,kCAAoC+I,UAAY,MAE3DwwB,YAAY,EACZC,cAAc,IAKlBoH,oBAAoBjmC,UAAUwF,SAG9B,WAAc,MAAOvF,MAAK0nC,aAC1B1B,oBAAoBmB,aAAev5B,cAAcxG,IAAIqB,UAC9Cu9B,uBAuEP2B,gBAAkB,GAAI/3B,gBAAe,2BAMrCg4B,sBAAyB,WACzB,QAASA,uBAAsBC,UAC3B,GAAId,OAAQ/mC,IACZA,MAAK6nC,SAAWA,SAChB7nC,KAAKy3B,aAAc,EACnBz3B,KAAK8nC,OAAQ,EACb9nC,KAAK+nC,aAAe,GAAIC,SAAQ,SAAU1iC,IAAK2iC,KAC3ClB,MAAMnB,QAAUtgC,IAChByhC,MAAMmB,OAASD,MA2DvB,MAnDAL,uBAAsB7nC,UAAUooC,gBAIhC,WACI,GAAIpB,OAAQ/mC,IACZ,KAAIA,KAAKy3B,YAAT,CAGA,GAAqB2Q,sBACAC,SAAW,WAC5BtB,MAAMe,OAAQ,EACdf,MAAMnB,UAEV,IAAI5lC,KAAK6nC,SACL,IAAK,GAAqBtjC,GAAI,EAAGA,EAAIvE,KAAK6nC,SAASxlC,OAAQkC,IAAK,CAC5D,GAAqB+jC,YAAatoC,KAAK6nC,SAAStjC,IAC5CyL,WAAUs4B,aACVF,kBAAkBtmC,KAAKwmC,YAInCN,QAAQO,IAAIH,mBAAmBn4B,KAAK,WAAco4B,aAAehyB,MAAM,SAAUxO,GAAKk/B,MAAMmB,OAAOrgC,KAClE,IAA7BugC,kBAAkB/lC,QAClBgmC,WAEJroC,KAAKy3B,aAAc,IAEvB92B,OAAOiB,eAAegmC,sBAAsB7nC,UAAW,QACnDqH,IAGA,WAAc,MAAOpH,MAAK8nC,OAC1BnJ,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAegmC,sBAAsB7nC,UAAW,eACnDqH,IAGA,WAAc,MAAOpH,MAAK+nC,cAC1BpJ,YAAY,EACZC,cAAc,IAElBgJ,sBAAsBjE,aAChB59B,KAAMq7B,aAGZwG,sBAAsBrE,eAAiB,WAAc,QAC/Cx9B,KAAMb,MAAOy+B,aAAe59B,KAAMiD,OAAQ9G,MAAOylC,mBAAuB5hC,KAAM8C,cAE7E++B,yBAwBPY,OAAS,GAAI54B,gBAAe,SAW5B64B,wBACAliC,QAASiiC,OACT9hC,WAAY0J,4BACZlK,SAYAmP,qBAAuB,GAAIzF,gBAAe,wBAK1C84B,YAAc,GAAI94B,gBAAe,eASjC+4B,uBAAyB,GAAI/4B,gBAAe,wBAK5Cg5B,iBAAmB,GAAIh5B,gBAAe,iCAatCi5B,QAAW,WACX,QAASA,YAgCT,MA1BAA,SAAQ9oC,UAAU+oC,IAIlB,SAAUv+B,SAENF,QAAQy+B,IAAIv+B,UAOhBs+B,QAAQ9oC,UAAUgpC,KAIlB,SAAUx+B,SAENF,QAAQ0+B,KAAKx+B,UAEjBs+B,QAAQlF,aACF59B,KAAMq7B,aAGZyH,QAAQtF,eAAiB,WAAc,UAChCsF,WAmBPG,6BAAgC,WAChC,QAASA,8BAA6BC,gBAAiBC,oBACnDlpC,KAAKipC,gBAAkBA,gBACvBjpC,KAAKkpC,mBAAqBA,mBAE9B,MAAOF,iCAkBPG,SAAY,WACZ,QAASA,aAqIT,MAxHAA,UAASppC,UAAUqpC,kBAOnB,SAAUxyB,YAAc,KAAMjG,gBAU9Bw4B,SAASppC,UAAUspC,mBAMnB,SAAUzyB,YAAc,KAAMjG,gBAU9Bw4B,SAASppC,UAAUupC,kCAMnB,SAAU1yB,YACN,KAAMjG,gBAWVw4B,SAASppC,UAAUwpC,mCAMnB,SAAU3yB,YACN,KAAMjG,gBAoBVw4B,SAASppC,UAAUypC,sBAUnB,SAAU34B,WAAa,KAAMF,gBAQ7Bw4B,SAASppC,UAAU0pC,WAInB,aASAN,SAASppC,UAAU2pC,cAKnB,SAAU3jC,QACVojC,SAASxF,aACH59B,KAAMq7B,aAGZ+H,SAAS5F,eAAiB,WAAc,UACjC4F,YAOPQ,iBAAmB,GAAI/5B,gBAAe,mBAOtCg6B,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBAgBPC,aAAgB,WAChB,QAASA,iBAET,MAAOA,iBAMPC,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAgBPh5B,gBAAkB,cAMlBi5B,8BAAiC,WACjC,QAASA,kCAeT,MARAA,+BAA8BhqC,UAAUiqC,wBAKxC,SAAUn5B,WACN,KAAMD,yBAAwBC,YAE3Bk5B,iCAMPE,yBAA4B,WAC5B,QAASA,6BAGT,MADAA,0BAAyBnI,KAAO,GAAIiI,+BAC7BE,4BAEPC,gCAAmC,WACnC,QAASA,iCAAgCC,UAAWnhB,QAASohB,WACzDpqC,KAAKgpB,QAAUA,QACfhpB,KAAKoqC,UAAYA,UACjBpqC,KAAKqqC,WAAa,GAAI/lC,IACtB,KAAK,GAAqBC,GAAI,EAAGA,EAAI4lC,UAAU9nC,OAAQkC,IAAK,CACxD,GAAqBlF,SAAU8qC,UAAU5lC,EACzCvE,MAAKqqC,WAAW/iC,IAAIjI,QAAQusB,cAAevsB,UAuBnD,MAfA6qC,iCAAgCnqC,UAAUiqC,wBAK1C,SAAUn5B,WACN,GAAqBxR,SAAUW,KAAKqqC,WAAWjjC,IAAIyJ,UAInD,KAHKxR,SAAWW,KAAKgpB,UACjB3pB,QAAUW,KAAKgpB,QAAQghB,wBAAwBn5B,aAE9CxR,QACD,KAAMuR,yBAAwBC,UAElC,OAAO,IAAIy5B,+BAA8BjrC,QAASW,KAAKoqC,YAEpDF,mCAEPI,8BAAiC,SAAUC,QAE3C,QAASD,+BAA8BjrC,QAASiqB,UAC5C,GAAIyd,OAAQwD,OAAOlpC,KAAKrB,OAASA,IAGjC,OAFA+mC,OAAM1nC,QAAUA,QAChB0nC,MAAMzd,SAAWA,SACVyd,MA2DX,MAhEA1mC,WAAUiqC,8BAA+BC,QAOzC5pC,OAAOiB,eAAe0oC,8BAA8BvqC,UAAW,YAC3DqH,IAGA,WAAc,MAAOpH,MAAKX,QAAQssB,UAClCgT,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0oC,8BAA8BvqC,UAAW,iBAC3DqH,IAGA,WAAc,MAAOpH,MAAKX,QAAQusB,eAClC+S,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0oC,8BAA8BvqC,UAAW,sBAC3DqH,IAGA,WAAc,MAAOpH,MAAKX,QAAQ0sB,oBAClC4S,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0oC,8BAA8BvqC,UAAW,UAC3DqH,IAGA,WAAc,MAAOpH,MAAKX,QAAQysB,QAClC6S,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0oC,8BAA8BvqC,UAAW,WAC3DqH,IAGA,WAAc,MAAOpH,MAAKX,QAAQokB,SAClCkb,YAAY,EACZC,cAAc,IASlB0L,8BAA8BvqC,UAAUa,OAOxC,SAAUsK,SAAU0V,iBAAkBuE,mBAAoBmE,UACtD,MAAOtpB,MAAKX,QAAQuB,OAAOsK,SAAU0V,iBAAkBuE,mBAAoBmE,UAAYtpB,KAAKspB,WAEzFghB,+BACTR,kBAeEU,YAAe,WACf,QAASA,gBAET,MAAOA,gBAUPC,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBA8FPC,WAAa35B,YAuCb45B,eAAiBD,WAAav5B,YAAc,SAAUlF,UAAWmF,OAAS,MAAOW,YAUjF64B,SAAWF,WAAar5B,MAAQ,SAAUmtB,EAAGqM,GAAK,MAAOA,IAczDC,kBAAoBJ,WAAaj5B,eAAiB,SAAUC,UAAWC,QAAU,MAAO,OAOxFo5B,gBAAkBL,WAAa74B,aAAe,SAAUg5B,GAAK,MAAO,OA4DpEG,aAAgB,SAAUT,QAS1B,QAASS,cAAaC,SACF,SAAZA,UAAsBA,SAAU,EACpC,IAAIlE,OAAQwD,OAAOlpC,KAAKrB,OAASA,IAEjC,OADA+mC,OAAMmE,UAAYD,QACXlE,MAsDX,MAlEA1mC,WAAU2qC,aAAcT,QAkBxBS,aAAajrC,UAAU0S,KAIvB,SAAU5Q,OAAS0oC,OAAOxqC,UAAUqZ,KAAK/X,KAAKrB,KAAM6B,QAOpDmpC,aAAajrC,UAAUoQ,UAMvB,SAAUg7B,gBAAiBrhC,MAAOu+B,UAC9B,GAAqB+C,aACAC,QAAU,SAAUnwB,KAAO,MAAO,OAClCowB,WAAa,WAAc,MAAO,MA0BvD,OAzBIH,kBAA8C,gBAApBA,kBAC1BC,YAAcprC,KAAKkrC,UAAY,SAAUrpC,OACrC0pC,WAAW,WAAc,MAAOJ,iBAAgB/xB,KAAKvX,UACrD,SAAUA,OAASspC,gBAAgB/xB,KAAKvX,QACxCspC,gBAAgBrhC,QAChBuhC,QAAUrrC,KAAKkrC,UAAY,SAAUhwB,KAAOqwB,WAAW,WAAc,MAAOJ,iBAAgBrhC,MAAMoR,QAC9F,SAAUA,KAAOiwB,gBAAgBrhC,MAAMoR,OAE3CiwB,gBAAgB9C,WAChBiD,WAAatrC,KAAKkrC,UAAY,WAAcK,WAAW,WAAc,MAAOJ,iBAAgB9C,cACxF,WAAc8C,gBAAgB9C,eAItC+C,YAAcprC,KAAKkrC,UAAY,SAAUrpC,OAAS0pC,WAAW,WAAc,MAAOJ,iBAAgBtpC,UAC9F,SAAUA,OAASspC,gBAAgBtpC,QACnCiI,QACAuhC,QACIrrC,KAAKkrC,UAAY,SAAUhwB,KAAOqwB,WAAW,WAAc,MAAOzhC,OAAMoR,QAAc,SAAUA,KAAOpR,MAAMoR,OAEjHmtB,WACAiD,WACItrC,KAAKkrC,UAAY,WAAcK,WAAW,WAAc,MAAOlD,eAAoB,WAAcA,cAGtGkC,OAAOxqC,UAAUoQ,UAAU9O,KAAKrB,KAAMorC,YAAaC,QAASC,aAEhEN,cACT5qC,aAAaorC,SA8EXC,OAAU,WACV,QAASA,QAAOzoC,IACZ,GAAIohB,IAAKphB,GAAG0oC,qBAAsBA,qBAA8B,SAAPtnB,IAAwBA,EA2BjF,IA1BApkB,KAAKsS,sBAAuB,EAC5BtS,KAAKkU,sBAAuB,EAI5BlU,KAAKuS,UAAW,EAIhBvS,KAAKuU,WAAa,GAAIy2B,gBAAa,IAMnChrC,KAAKwS,iBAAmB,GAAIw4B,gBAAa,IAMzChrC,KAAK2S,SAAW,GAAIq4B,gBAAa,IAIjChrC,KAAKsU,QAAU,GAAI02B,gBAAa,IACb,mBAARrmC,MACP,KAAM,IAAImD,OAAM,sCAEpBnD,MAAKgnC,mBACL,IAAqBxP,MAAwB,IAC7CA,MAAK9pB,SAAW,EAChB8pB,KAAKyP,OAASzP,KAAKtpB,OAASlO,KAAKC,QAC7B,KAAuC,cACvCu3B,KAAKtpB,OAASspB,KAAKtpB,OAAOC,KAAK,KAAuC,cAEtE44B,sBAAwB,KAAkD,yBAC1EvP,KAAKtpB,OAASspB,KAAKtpB,OAAOC,KAAK,KAAkD,yBAErFF,iCAAiCupB,MAmNrC,MA9MAsP,QAAOI,gBAGP,WAAc,MAAOlnC,MAAKC,QAAQwC,IAAI,oBAAqB,GAI3DqkC,OAAOK,oBAGP,WACI,IAAKL,OAAOI,kBACR,KAAM,IAAI/jC,OAAM,mDAMxB2jC,OAAOM,uBAGP,WACI,GAAIN,OAAOI,kBACP,KAAM,IAAI/jC,OAAM,mDAgCxB2jC,OAAO1rC,UAAUisC,IAiBjB,SAAUtnC,GAAI0O,UAAWC,WACrB,MAAyB,MAA4BR,OAAOm5B,IAAItnC,GAAI0O,UAAWC,YAgCnFo4B,OAAO1rC,UAAUksC,QAkBjB,SAAUvnC,GAAI0O,UAAWC,UAAWvS,MAChC,GAAqBsR,MAAO,KAA4BS,OACnCM,KAAOf,KAAK85B,kBAAkB,gBAAkBprC,KAAM4D,GAAIynC,cAAej6B,KAAMA,KACpG,KACI,MAAyBE,MAAK65B,QAAQ94B,KAAMC,UAAWC,WAE3D,QACIjB,KAAKg6B,WAAWj5B,QAgBxBs4B,OAAO1rC,UAAUssC,WASjB,SAAU3nC,GAAI0O,UAAWC,WACrB,MAAyB,MAA4BR,OAAOw5B,WAAW3nC,GAAI0O,UAAWC,YA+B1Fo4B,OAAO1rC,UAAU2S,kBAgBjB,SAAUhO,IACN,MAAyB,MAA4BknC,OAAOI,IAAItnC,KAE7D+mC,UAOPU,iBA4GAG,YAAe,WACf,QAASA,aAAYC,SACjBvsC,KAAKusC,QAAUA,QAIfvsC,KAAKwsC,cAAgB,EAIrBxsC,KAAKysC,eAAgB,EAOrBzsC,KAAK0sC,UAAW,EAIhB1sC,KAAK2sC,cACL3sC,KAAK4sC,sBAsKT,MA/JAN,aAAYvsC,UAAU6sC,oBAItB,WACI,GAAI7F,OAAQ/mC,IACZA,MAAKusC,QAAQh4B,WAAWpE,WACpBiJ,KAAM,WACF2tB,MAAM2F,UAAW,EACjB3F,MAAM0F,eAAgB,KAG9BzsC,KAAKusC,QAAQ75B,kBAAkB,WAC3Bq0B,MAAMwF,QAAQ55B,SAASxC,WACnBiJ,KAAM,WACFqyB,OAAOM,yBACPtnC,kBAAkB,WACdsiC,MAAM0F,eAAgB,EACtB1F,MAAM8F,+BAa1BP,YAAYvsC,UAAU+sC,4BAItB,WAGI,MAFA9sC,MAAKwsC,eAAiB,EACtBxsC,KAAK0sC,UAAW,EACT1sC,KAAKwsC,eAShBF,YAAYvsC,UAAUgtC,4BAItB,WAEI,GADA/sC,KAAKwsC,eAAiB,EAClBxsC,KAAKwsC,cAAgB,EACrB,KAAM,IAAI1kC,OAAM,oCAGpB,OADA9H,MAAK6sC,uBACE7sC,KAAKwsC,eAShBF,YAAYvsC,UAAUwS,SAItB,WACI,MAAOvS,MAAKysC,eAAuC,GAAtBzsC,KAAKwsC,gBAAuBxsC,KAAKusC,QAAQr4B,sBAO1Eo4B,YAAYvsC,UAAU8sC,qBAItB,WACI,GAAI9F,OAAQ/mC,IACRA,MAAKuS,WAEL9N,kBAAkB,WACd,KAAmC,IAA5BsiC,MAAM4F,WAAWtqC,QACA0kC,MAAM4F,WAAWlhB,MAASsb,MAAM2F,SAExD3F,OAAM2F,UAAW,IAKrB1sC,KAAK0sC,UAAW,GAYxBJ,YAAYvsC,UAAUitC,WAKtB,SAAUt5B,UACN1T,KAAK2sC,WAAW7qC,KAAK4R,UACrB1T,KAAK6sC,wBASTP,YAAYvsC,UAAUktC,uBAItB,WAAc,MAAOjtC,MAAKwsC,eAc1BF,YAAYvsC,UAAUmtC,cAOtB,SAAUC,MAAOlnC,SAAUmnC,YAEvB,UAEJd,YAAY3I,aACN59B,KAAMq7B,aAGZkL,YAAY/I,eAAiB,WAAc,QACrCx9B,KAAM0lC,UAELa,eAMPe,oBAAuB,WACvB,QAASA,uBAILrtC,KAAKstC,cAAgB,GAAIhpC,KACzBoQ,mBAAmB64B,YAAYvtC,MAqHnC,MAxGAqtC,qBAAoBttC,UAAUytC,oBAM9B,SAAUvoC,MAAOwoC,aACbztC,KAAKstC,cAAchmC,IAAIrC,MAAOwoC,cAWlCJ,oBAAoBttC,UAAU2tC,sBAK9B,SAAUzoC,OAASjF,KAAKstC,cAAc/0B,OAAOtT,QAQ7CooC,oBAAoBttC,UAAU4tC,0BAI9B,WAAc3tC,KAAKstC,cAAcvT,SAUjCsT,oBAAoBttC,UAAU6tC,eAK9B,SAAUC,MAAQ,MAAO7tC,MAAKstC,cAAclmC,IAAIymC,OAAS,MAQzDR,oBAAoBttC,UAAU+tC,oBAI9B,WAAc,MAAO5oC,OAAMuJ,KAAKzO,KAAKstC,cAAchrC,WAQnD+qC,oBAAoBttC,UAAUguC,mBAI9B,WAAc,MAAO7oC,OAAMuJ,KAAKzO,KAAKstC,cAAclpC,SAcnDipC,oBAAoBttC,UAAUiuC,sBAO9B,SAAUH,KAAMI,iBAEZ,MADwB,UAApBA,kBAA8BA,iBAAkB,GAC7Cv5B,mBAAmBs5B,sBAAsBhuC,KAAM6tC,KAAMI,kBAEhEZ,oBAAoB1J,aACd59B,KAAMq7B,aAGZiM,oBAAoB9J,eAAiB,WAAc,UAC5C8J,uBAWPa,oBAAuB,WACvB,QAASA,wBA0BT,MApBAA,qBAAoBnuC,UAAUwtC,YAI9B,SAAUY,YAOVD,oBAAoBnuC,UAAUiuC,sBAM9B,SAAUG,SAAUN,KAAMI,iBACtB,MAAO,OAEJC,uBAWPx5B,mBAAqB,GAAIw5B,qBAazBr5B,UAAW,EACXD,gBAAiB,EAEjBM,yBAA2B,GAAItF,gBAAe,sBAoC9Cw+B,aAAgB,WAChB,QAASA,cAAattC,KAAMmE,OACxBjF,KAAKc,KAAOA,KACZd,KAAKiF,MAAQA,MAEjB,MAAOmpC,iBA+FPj5B,YAAe,WACf,QAASA,gBAET,MAAOA,gBA8BPk5B,aAAgB,SAAU9D,QAE1B,QAAS8D,cAAaC,WAClB,GAAIvH,OAAQwD,OAAOlpC,KAAKrB,OAASA,IAKjC,OAJA+mC,OAAMuH,UAAYA,UAClBvH,MAAMwH,YACNxH,MAAMyH,qBACNzH,MAAM0H,YAAa,EACZ1H,MAkKX,MAzKA1mC,WAAUguC,aAAc9D,QAaxB8D,aAAatuC,UAAU2uC,UAIvB,SAAUh7B,UAAY1T,KAAKwuC,kBAAkB1sC,KAAK4R,WAClD/S,OAAOiB,eAAeysC,aAAatuC,UAAW,YAC1CqH,IAGA,WAAc,MAAOpH,MAAKsuC,WAC1B3P,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeysC,aAAatuC,UAAW,aAC1CqH,IAGA,WAAc,MAAOpH,MAAKyuC,YAC1B9P,YAAY,EACZC,cAAc,IAKlByP,aAAatuC,UAAUiW,QAGvB,WACI,GAAIhW,KAAKyuC,WACL,KAAM,IAAI3mC,OAAM,2CAEpB9H,MAAKuuC,SAAS1jC,QAAQiE,QAAQ,SAAUvP,QAAU,MAAOA,QAAOyW,YAChEhW,KAAKwuC,kBAAkB1/B,QAAQ,SAAU6/B,UAAY,MAAOA,cAC5D3uC,KAAKyuC,YAAa,GAOtBJ,aAAatuC,UAAU6uC,uBAKvB,SAAUC;AACN,MAAO7uC,MAAK8uC,gCAAgCD,gBAQhDR,aAAatuC,UAAU+uC,gCAMvB,SAAUD,cAAe14B,QACrB,GAAI4wB,OAAQ/mC,IASZ,OAJKmW,UACDA,OAAS,GAAIs1B,SAASC,qBAAsB52B,eAGzCqB,OAAO61B,IAAI,WACd,GAAqB+C,gBAAiBtmC,SAAS7H,SAAU2F,QAASklC,OAAQhlC,SAAU0P,SAAW4wB,MAAM77B,UAChF8jC,UAA8BH,cAAcjuC,OAAOmuC,gBACnDE,iBAAmBD,UAAU9jC,SAAS9D,IAAIqyB,aAAc,KAC7E,KAAKwV,iBACD,KAAM,IAAInnC,OAAM,gEAIpB,OAFAknC,WAAUN,UAAU,WAAc,MAAOp4B,QAAOywB,MAAMwH,SAAUS,aAChE,OAAWt8B,kBAAkB,WAAc,MAAwB,QAAW4B,QAAQnE,WAAYiJ,KAAM,SAAUtP,OAASmlC,iBAAiB56B,YAAYvK,YACjJmM,6BAA6Bg5B,iBAAmC,OAAY,WAC/E,GAAqBC,YAAaF,UAAU9jC,SAAS9D,IAAIwgC,sBAEzD,OADAsH,YAAW/G,kBACJ+G,WAAWC,YAAYl/B,KAAK,WAE/B,MADA82B,OAAMqI,mBAAmBJ,WAClBA,iBAWvBX,aAAatuC,UAAUsvC,gBAMvB,SAAUz4B,WAAY04B,iBAElB,MADwB,UAApBA,kBAA8BA,oBAC3BtvC,KAAKuvC,yBAAyB34B,WAAY04B,kBASrDjB,aAAatuC,UAAUwvC,yBAOvB,SAAU34B,WAAY04B,gBAAiBn5B,QACnC,GAAI4wB,OAAQ/mC,IACY,UAApBsvC,kBAA8BA,mBAClC,IAAqBE,iBAAkBxvC,KAAKkL,SAAS9D,IAAIwiC,iBACpC6F,SAAWD,gBAAgBE,eAAexqC,MAAMsK,QAAQ8/B,iBAAmBA,iBAAmBA,iBACnH,OAAOG,UAASpG,mBAAmBzyB,YAC9B3G,KAAK,SAAU4+B,eAAiB,MAAO9H,OAAM+H,gCAAgCD,cAAe14B,WAMrGk4B,aAAatuC,UAAUqvC,mBAIvB,SAAUJ,WACN,GAAqBW,QAA2BX,UAAU9jC,SAAS9D,IAAIwoC,eACvE,IAAIZ,UAAUa,qBAAqBxtC,OAAS,EACxC2sC,UAAUa,qBAAqB/gC,QAAQ,SAAUghC,GAAK,MAAOH,QAAOI,UAAUD,SAE7E,CAAA,IAAId,UAAUllB,SAASkmB,cAIxB,KAAM,IAAIloC,OAAM,cAAgB9C,UAAUgqC,UAAUllB,SAASrpB,aAAe,wIAH5EuuC,WAAUllB,SAASkmB,cAAcL,QAMrC3vC,KAAKuuC,SAASzsC,KAAKktC,YAEvBX,aAAa1K,aACP59B,KAAMq7B,aAGZiN,aAAa9K,eAAiB,WAAc,QACtCx9B,KAAM0C,YAEL4lC,cACTl5B,aAOEy6B,eAAkB,WAClB,QAASA,mBAET,MAAOA,mBAMPK,gBAAmB,SAAU1F,QAE7B,QAAS0F,iBAAgBC,MAAOhO,SAAUoM,UAAW6B,kBAAmBC,0BAA2BC,aAC/F,GAAItJ,OAAQwD,OAAOlpC,KAAKrB,OAASA,IACjC+mC,OAAMmJ,MAAQA,MACdnJ,MAAM7E,SAAWA,SACjB6E,MAAMuH,UAAYA,UAClBvH,MAAMoJ,kBAAoBA,kBAC1BpJ,MAAMqJ,0BAA4BA,0BAClCrJ,MAAMsJ,YAAcA,YACpBtJ,MAAMuJ,uBACNvJ,MAAMwJ,mBACNxJ,MAAMyJ,uBACNzJ,MAAM0J,UACN1J,MAAM2J,cAAe,EACrB3J,MAAM4J,sBAAuB,EAC7B5J,MAAM6J,SAAU,EAChB7J,MAAM4J,qBAAuB77B,YAC7BiyB,MAAMmJ,MAAM19B,iBAAiBrC,WAAYiJ,KAAM,WAAc2tB,MAAMmJ,MAAMlE,IAAI,WAAcjF,MAAM8J,WACjG,IAAqBC,mBAAoB,GAAI7wC,iBAAgBH,WAAW,SAAUixC,UAC9EhK,MAAM6J,QAAU7J,MAAMmJ,MAAM39B,WAAaw0B,MAAMmJ,MAAMh8B,uBAChD6yB,MAAMmJ,MAAM59B,qBACjBy0B,MAAMmJ,MAAMx9B,kBAAkB,WAC1Bq+B,SAAS33B,KAAK2tB,MAAM6J,SACpBG,SAAS1I,eAGI91B,SAAW,GAAItS,iBAAgBH,WAAW,SAAUixC,UAGrE,GAAqBC,UACrBjK,OAAMmJ,MAAMx9B,kBAAkB,WAC1Bs+B,UAAYjK,MAAMmJ,MAAMv9B,SAASxC,UAAU,WACvCs7B,OAAOM,yBAGPtnC,kBAAkB,WACTsiC,MAAM6J,SAAY7J,MAAMmJ,MAAMh8B,sBAC9B6yB,MAAMmJ,MAAM59B,uBACby0B,MAAM6J,SAAU,EAChBG,SAAS33B,MAAK,SAK9B,IAAqB63B,aAAclK,MAAMmJ,MAAM37B,WAAWpE,UAAU,WAChEs7B,OAAOK,sBACH/E,MAAM6J,UACN7J,MAAM6J,SAAU,EAChB7J,MAAMmJ,MAAMx9B,kBAAkB,WAAcq+B,SAAS33B,MAAK,OAGlE,OAAO,YACH43B,UAAUnjB,cACVojB,YAAYpjB,gBAIpB,OADAkZ,OAAMmK,UAAYhxC,sBAAsBixC,MAAML,kBAAmB3wC,oBAAoBixC,MAAM/vC,KAAKkR,WACzFw0B,MA0LX,MAnPA1mC,WAAU4vC,gBAAiB1F,QA+D3B0F,gBAAgBlwC,UAAUsxC,WAI1B,SAAUC,SACN,GAAqBh3B,MAAO,OAC5Bta,MAAKywC,OAAO3uC,KAAKwY,MACjBA,KAAKi3B,eAAevxC,OAMxBiwC,gBAAgBlwC,UAAUyxC,WAI1B,SAAUF,SACN,GAAqBh3B,MAAO,OAC5BhE,QAAOtW,KAAKywC,OAAQn2B,MACpBA,KAAKm3B,oBAQTxB,gBAAgBlwC,UAAUgwC,UAM1B,SAAU2B,mBAAoBvsB,oBAC1B,GAAI4hB,OAAQ/mC,IACZ,KAAKA,KAAKqwC,YAAY/2B,KAClB,KAAM,IAAIxR,OAAM,gJAEpB,IAAqBokB,iBAEjBA,kBADAwlB,6BAA8B5H,kBACX4H,mBAII1xC,KAAKowC,0BAA0BpG,wBAAwB0H,oBAElF1xC,KAAKwwC,oBAAoB1uC,KAAKoqB,iBAAiBN,cAE/C,IAAqBtC,UAAW4C,2BAA4Boe,+BACxD,KACAtqC,KAAKsuC,UAAUlnC,IAAIojC,aACFplB,eAAiBD,oBAAsB+G,iBAAiBP,SACxDgmB,QAAUzlB,iBAAiBtrB,OAAO6H,SAASq5B,QAAU1c,eAAgBkE,SAC1FqoB,SAAQjD,UAAU,WAAc3H,MAAM6K,iBAAiBD,UACvD,IAAqBlE,aAAckE,QAAQzmC,SAAS9D,IAAIklC,YAAa,KASrE,OARImB,cACAkE,QAAQzmC,SAAS9D,IAAIimC,qBAChBG,oBAAoBmE,QAAQE,SAASr6B,cAAei2B,aAE7DztC,KAAK8xC,eAAeH,SAChB78B,aACA9U,KAAKkiC,SAAS4G,IAAI,oGAEf6I,SAMX1B,gBAAgBlwC,UAAU+xC,eAI1B,SAAUC,cACN/xC,KAAKqxC,WAAWU,aAAatxB,UAC7BzgB,KAAK6wC,OACL7wC,KAAKuwC,gBAAgBzuC,KAAKiwC,aAE1B,IAAqBC,WAAYhyC,KAAKsuC,UAAUlnC,IAAIuhC,2BAA4BzlC,OAAOlD,KAAKswC,oBAC5F0B,WAAUljC,QAAQ,SAAU6/B,UAAY,MAAOA,UAASoD,iBAM5D9B,gBAAgBlwC,UAAU6xC,iBAI1B,SAAUG,cACN/xC,KAAKwxC,WAAWO,aAAatxB,UAC7BnK,OAAOtW,KAAKuwC,gBAAiBwB,eAKjC9B,gBAAgBlwC,UAAU8wC,KAG1B,WACI,GAAI9J,OAAQ/mC,IACZ,IAAIA,KAAK0wC,aACL,KAAM,IAAI5oC,OAAM,4CAEpB,IAAqBwJ,OAAQ2+B,gBAAgBgC,YAC7C,KACIjyC,KAAK0wC,cAAe,EACpB1wC,KAAKywC,OAAO3hC,QAAQ,SAAUwL,MAAQ,MAAOA,MAAKmgB,kBAC9Cz6B,KAAK2wC,sBACL3wC,KAAKywC,OAAO3hC,QAAQ,SAAUwL,MAAQ,MAAOA,MAAKogB,mBAG1D,MAAwB7yB,GAEpB7H,KAAKkwC,MAAMx9B,kBAAkB,WAAc,MAAOq0B,OAAMoJ,kBAAkB97B,YAAYxM,KAE1F,QACI7H,KAAK0wC,cAAe,EACpB9F,SAASt5B,SAMjB2+B,gBAAgBlwC,UAAUgqB,YAG1B,WAEI/pB,KAAKywC,OAAO5lC,QAAQiE,QAAQ,SAAUwL,MAAQ,MAAOA,MAAKtE,aAE9DrV,OAAOiB,eAAequC,gBAAgBlwC,UAAW,aAC7CqH,IAGA,WAAc,MAAOpH,MAAKywC,OAAOpuC,QACjCs8B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAequC,gBAAgBlwC,UAAW,kBAC7CqH,IAGA,WAAc,MAAOpH,MAAKwwC,qBAC1B7R,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAequC,gBAAgBlwC,UAAW,cAC7CqH,IAGA,WAAc,MAAOpH,MAAKuwC,iBAC1B5R,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAequC,gBAAgBlwC,UAAW,YAC7CqH,IAGA,WAAc,MAAOpH,MAAKkxC,WAC1BvS,YAAY,EACZC,cAAc,IAKlBqR,gBAAgBgC,WAAatH,eAAe,yBAC5CsF,gBAAgBtM,aACV59B,KAAMq7B,aAGZ6O,gBAAgB1M,eAAiB,WAAc,QACzCx9B,KAAM0lC,SACN1lC,KAAM8iC,UACN9iC,KAAM0C,WACN1C,KAAM0zB,eACN1zB,KAAMkkC,2BACNlkC,KAAM6hC,yBAELqI,iBACTL,gBAyCEsC,oBAAuB,WACvB,QAASA,qBAAoBtjC,GAAIujC,YAAaC,UAAW91B,cAAeD,OAAQg2B,YAC5EryC,KAAK4O,GAAKA,GACV5O,KAAKmyC,YAAcA,YACnBnyC,KAAKoyC,UAAYA,UACjBpyC,KAAKsc,cAAgBA,cACrBtc,KAAKqc,OAASA,OACdrc,KAAKqyC,WAAaA,WAEtB,MAAOH,wBAMPI,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBAWPC,SAAY,WACZ,QAASA,aAET,MAAOA,aAmBPC,cAjBuB,GAAI5iC,gBAAe,wBAiB1B,WAChB,QAAS4iC,iBAET,MAAOA,kBAWPvZ,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAGPwZ,qBACAC,UAAW,EACXC,SAAU,EAEdF,qBAAoBA,oBAAoBC,WAAa,YACrDD,oBAAoBA,oBAAoBE,UAAY,UAKpD,IAAIC,WAAa,WACb,QAASA,cAET,MAAOA,cAgCP9jB,WAAc,WACd,QAASA,YAAWtX,eAChBxX,KAAKwX,cAAgBA,cAEzB,MAAOsX,eAYP+jB,sBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAEPl8B,gBAAkB,GAAIrS,KA8DtB+rB,UAAa,WACb,QAASA,aACLrwB,KAAK8yC,QAAS,EACd9yC,KAAK+yC,YACL/yC,KAAKgzC,SAAW,GAAIhI,cA+NxB,MA7NArqC,QAAOiB,eAAeyuB,UAAUtwB,UAAW,WACvCqH,IAGA,WAAc,MAAOpH,MAAKgzC,UAC1BrU,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeyuB,UAAUtwB,UAAW,UACvCqH,IAGA,WAAc,MAAOpH,MAAK+yC,SAAS1wC,QACnCs8B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeyuB,UAAUtwB,UAAW,SACvCqH,IAGA,WAAc,MAAOpH,MAAK+yC,SAAS,IACnCpU,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeyuB,UAAUtwB,UAAW,QACvCqH,IAGA,WAAc,MAAOpH,MAAK+yC,SAAS/yC,KAAKqC,OAAS,IACjDs8B,YAAY,EACZC,cAAc,IAalBvO,UAAUtwB,UAAUoF,IAOpB,SAAUT,IAAM,MAAO1E,MAAK+yC,SAAS5tC,IAAIT,KAWzC2rB,UAAUtwB,UAAUkzC,OAMpB,SAAUvuC,IACN,MAAO1E,MAAK+yC,SAASE,OAAOvuC,KAYhC2rB,UAAUtwB,UAAUmzC,KAMpB,SAAUxuC,IACN,MAAO1E,MAAK+yC,SAASG,KAAKxuC,KAc9B2rB,UAAUtwB,UAAUgX,OAQpB,SAAUrS,GAAI4Q,MACV,MAAOtV,MAAK+yC,SAASh8B,OAAOrS,GAAI4Q,OAYpC+a,UAAUtwB,UAAU+O,QAMpB,SAAUpK,IAAM1E,KAAK+yC,SAASjkC,QAAQpK,KAWtC2rB,UAAUtwB,UAAUqP,KAMpB,SAAU1K,IACN,MAAO1E,MAAK+yC,SAAS3jC,KAAK1K,KAK9B2rB,UAAUtwB,UAAUozC,QAGpB,WAAc,MAAOnzC,MAAK+yC,SAASloC,SAInCwlB,UAAUtwB,UAAUgE,qBAGpB,WAAc,MAA0B/D,MAAc,SAAE+D,wBAIxDssB,UAAUtwB,UAAUwF,SAGpB,WAAc,MAAOvF,MAAK+yC,SAASxtC,YAKnC8qB,UAAUtwB,UAAUkxB,MAIpB,SAAU3rB,KACNtF,KAAK+yC,SAAWj8B,QAAQxR,KACxBtF,KAAK8yC,QAAS,GAKlBziB,UAAUtwB,UAAUqxB,gBAGpB,WAAcpxB,KAAKgzC,SAASvgC,KAAKzS,OAMjCqwB,UAAUtwB,UAAU2wB,SAIpB,WAAc1wB,KAAK8yC,QAAS,GAC5BnyC,OAAOiB,eAAeyuB,UAAUtwB,UAAW,SAEvCqH,IAIA,WAAc,MAAOpH,MAAK8yC,QAC1BnU,YAAY,EACZC,cAAc,IAOlBvO,UAAUtwB,UAAUiW,QAIpB,WACIhW,KAAKgzC,SAAS3K,WACdroC,KAAKgzC,SAASnlB,eAEXwC,aAyBP+iB,WAAa,IACbC,qBAAuB,YAQvBC,6BAAgC,WAChC,QAASA,iCAET,MAAOA,iCAEPC,gBACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,uBAA0B,WAC1B,QAASA,wBAAuBC,UAAWC,QACvC5zC,KAAK2zC,UAAYA,UACjB3zC,KAAK6zC,QAAUD,QAAUL,eA4D7B,MAtDAG,wBAAuB3zC,UAAU+zC,KAIjC,SAAU/rC,MACN,GAAqBgsC,aAAc/zC,KAAK2zC,oBAAqBxK,SAC7D,OAAO4K,aAAc/zC,KAAKg0C,YAAYjsC,MAAQ/H,KAAKi0C,eAAelsC,OAMtE2rC,uBAAuB3zC,UAAUk0C,eAIjC,SAAUlsC,MACN,GAAIg/B,OAAQ/mC,KACRgD,GAAK+E,KAAKm5B,MAAMkS,YAAa7zC,OAASyD,GAAG,GAAIqU,WAAarU,GAAG,EAIjE,OAHmBoF,UAAfiP,aACAA,WAAa,WAEV68B,OAAOC,OAAO50C,QAChB0Q,KAAK,SAAU1Q,QAAU,MAAOA,QAAO8X,cACvCpH,KAAK,SAAUlK,MAAQ,MAAOoR,eAAcpR,KAAMxG,OAAQ8X,cAC1DpH,KAAK,SAAUlK,MAAQ,MAAOghC,OAAM4M,UAAUtK,mBAAmBtjC,SAM1E2tC,uBAAuB3zC,UAAUi0C,YAIjC,SAAUjsC,MACN,GAAI/E,IAAK+E,KAAKm5B,MAAMkS,YAAa7zC,OAASyD,GAAG,GAAIqU,WAAarU,GAAG,GAC5CoxC,mBAAqBf,oBAK1C,OAJmBjrC,UAAfiP,aACAA,WAAa,UACb+8B,mBAAqB,IAElBF,OAAOC,OAAOn0C,KAAK6zC,QAAQL,kBAAoBj0C,OAASS,KAAK6zC,QAAQJ,mBACvExjC,KAAK,SAAU1Q,QAAU,MAAOA,QAAO8X,WAAa+8B,sBACpDnkC,KAAK,SAAU5Q,SAAW,MAAO8X,eAAc9X,QAASE,OAAQ8X,eAEzEq8B,uBAAuB/P,aACjB59B,KAAMq7B,aAGZsS,uBAAuBnQ,eAAiB,WAAc,QAChDx9B,KAAMojC,WACNpjC,KAAMutC,6BAA8B3P,aAAe59B,KAAM8C,cAExD6qC,0BAiCPW,YAAe,WACf,QAASA,gBAET,MAAOA,gBA0BPC,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAWPC,kBAAqB,WACrB,QAASA,sBAET,MAAOA,sBAWPC,QAAW,SAAUjK,QAErB,QAASiK,WACL,MAAkB,QAAXjK,QAAmBA,OAAOhoC,MAAMvC,KAAMoC,YAAcpC,KAE/D,MAJAK,WAAUm0C,QAASjK,QAIZiK,SACTD,mBAwDEE,gBAAmB,SAAUlK,QAE7B,QAASkK,mBACL,MAAkB,QAAXlK,QAAmBA,OAAOhoC,MAAMvC,KAAMoC,YAAcpC,KAE/D,MAJAK,WAAUo0C,gBAAiBlK,QAIpBkK,iBACTD,SAsBEE,cAAiB,WACjB,QAASA,eAAc5zC,KAAM4S,UACzB1T,KAAKc,KAAOA,KACZd,KAAK0T,SAAWA,SAGpB,MAAOghC,kBAKPC,UAAa,WACb,QAASA,WAAUx8B,WAAYzQ,OAAQktC,eACnC50C,KAAK40C,cAAgBA,cACrB50C,KAAKmY,WAAaA,WACdzQ,QAAUA,iBAAkBqQ,cAC5BrQ,OAAOmtC,SAAS70C,MAGhBA,KAAK0H,OAAS,KAElB1H,KAAKgyC,aA0CT,MAxCArxC,QAAOiB,eAAe+yC,UAAU50C,UAAW,YACvCqH,IAGA,WAAc,MAAOpH,MAAK40C,cAAc1pC,UACxCyzB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+yC,UAAU50C,UAAW,qBACvCqH,IAGA,WAAc,MAAOpH,MAAK40C,cAAc/jC,WACxC8tB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+yC,UAAU50C,UAAW,WACvCqH,IAGA,WAAc,MAAOpH,MAAK40C,cAAcvrC,SACxCs1B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+yC,UAAU50C,UAAW,cACvCqH,IAGA,WAAc,MAAOpH,MAAK40C,cAAc31B,YACxC0f,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+yC,UAAU50C,UAAW,kBACvCqH,IAGA,WAAc,MAAOpH,MAAK40C,cAAcE,gBACxCnW,YAAY,EACZC,cAAc,IAEX+V,aAKP58B,aAAgB,SAAUwyB,QAE1B,QAASxyB,cAAaI,WAAYzQ,OAAQktC,eACtC,GAAI7N,OAAQwD,OAAOlpC,KAAKrB,KAAMmY,WAAYzQ,OAAQktC,gBAAkB50C,IAOpE,OANA+mC,OAAMh0B,cACNg0B,MAAMgO,cACNhO,MAAMiO,WACNjO,MAAM1qB,UACN0qB,MAAMlvB,cACNkvB,MAAMvvB,cAAgBW,WACf4uB,MA+IX,MAxJA1mC,WAAU0X,aAAcwyB,QAexBxyB,aAAahY,UAAU80C,SAIvB,SAAUI,OACFA,QACAj1C,KAAK6X,WAAW/V,KAAKmzC,OACrBA,MAAMvtC,OAAS1H,OAOvB+X,aAAahY,UAAUqhB,YAIvB,SAAU6zB,OACN,GAAqBC,YAAal1C,KAAK6X,WAAWpS,QAAQwvC,MACtDC,eAAe,IACfD,MAAMvtC,OAAS,KACf1H,KAAK6X,WAAWpB,OAAOy+B,WAAY,KAQ3Cn9B,aAAahY,UAAUo1C,oBAKvB,SAAUF,MAAOG,aACb,GAAIrO,OAAQ/mC,KACSq1C,aAAer1C,KAAK6X,WAAWpS,QAAQwvC,MACxDI,iBAAiB,KAChBryC,GAAKhD,KAAK6X,YAAYpB,OAAOlU,MAAMS,IAAKqyC,aAAe,EAAG,GAAGnyC,OAAOkyC,cACrEA,YAAYtmC,QAAQ,SAAUoxB,GACtBA,EAAEx4B,QACFw4B,EAAEx4B,OAAO0Z,YAAY8e,GAEzBA,EAAEx4B,OAASq/B,QAGnB,IAAI/jC,KAOR+U,aAAahY,UAAUohB,aAKvB,SAAUm0B,SAAUC,UAChB,GAAqBC,UAAWx1C,KAAK6X,WAAWpS,QAAQ6vC,SACpDE,aAAa,EACbx1C,KAAK60C,SAASU,WAGVA,SAAS7tC,QACT6tC,SAAS7tC,OAAO0Z,YAAYm0B,UAEhCA,SAAS7tC,OAAS1H,KAClBA,KAAK6X,WAAWpB,OAAO++B,SAAU,EAAGD,YAO5Cx9B,aAAahY,UAAUgkB,MAIvB,SAAUpM,WACN,GAAqB89B,SAAUz1C,KAAK01C,SAAS/9B,UAC7C,OAAO89B,SAAQ,IAAM,MAMzB19B,aAAahY,UAAU21C,SAIvB,SAAU/9B,WACN,GAAqBC,WAErB,OADAH,uBAAsBzX,KAAM2X,UAAWC,SAChCA,SAMXG,aAAahY,UAAU41C,cAIvB,SAAUh+B,WACN,GAAqBC,WAErB,OADAI,oBAAmBhY,KAAM2X,UAAWC,SAC7BA,SAEXjX,OAAOiB,eAAemW,aAAahY,UAAW,YAC1CqH,IAGA,WACI,MAAyBpH,MAAK6X,WAAWo7B,OAAO,SAAUn7B,MAAQ,MAAOA,gBAAgBC,iBAE7F4mB,YAAY,EACZC,cAAc,IAOlB7mB,aAAahY,UAAU61C,oBAKvB,SAAUj4B,UAAWk4B,UACjB71C,KAAKgyC,UAAUljC,QAAQ,SAAU6/B,UACzBA,SAAS7tC,MAAQ6c,WACjBgxB,SAASj7B,SAASmiC,aAIvB99B,cACT48B,WA4CEv8B,uBAAyB,GAAI9T,KAuF7BuX,aAAgB,WAChB,QAASA,cAAaC,SAClB9b,KAAK8b,QAAUA,QAWnB,MALAD,cAAai6B,KAIb,SAAUj0C,OAAS,MAAO,IAAIga,cAAaha,QACpCga,gBAKPk6B,eAAkB,WAClB,QAASA,kBACL/1C,KAAKg2C,iBAAkB,EAwB3B,MAlBAD,gBAAeh2C,UAAUk2C,OAIzB,SAAUp0C,OACN,MAAIA,iBAAiBga,eACjB7b,KAAKg2C,iBAAkB,EAChBn0C,MAAMia,SAEVja,OAKXk0C,eAAeh2C,UAAUkxB,MAGzB,WAAcjxB,KAAKg2C,iBAAkB,GAC9BD,kBAMPxmB,aAAgB,WAChB,QAASA,cAAa2mB,cAAeC,aAAcC,aAC/Cp2C,KAAKk2C,cAAgBA,cACrBl2C,KAAKm2C,aAAeA,aACpBn2C,KAAKo2C,YAAcA,YAcvB,MALA7mB,cAAaxvB,UAAUs2C,cAIvB,WAAc,MAAOr2C,MAAKo2C,aACnB7mB,gBAwEP+mB,6BAAgC,WAChC,QAASA,iCAwBT,MAlBAA,8BAA6Bv2C,UAAUw2C,SAIvC,SAAUpuC,KAAO,MAAOuQ,oBAAmBvQ,MAM3CmuC,6BAA6Bv2C,UAAUa,OAKvC,SAAU41C,WACN,MAAO,IAAIC,uBAAsBD,YAE9BF,gCAEPI,gBAAkB,SAAU7zC,MAAOoU,MAAQ,MAAOA,OAIlDw/B,sBAAyB,WACzB,QAASA,uBAAsBD,WAC3Bx2C,KAAK22C,QAAU,EACf32C,KAAK42C,YAAc,KACnB52C,KAAK62C,eAAiB,KACtB72C,KAAK82C,iBAAmB,KACxB92C,KAAK+2C,gBAAkB,KACvB/2C,KAAKg3C,QAAU,KACfh3C,KAAKi3C,QAAU,KACfj3C,KAAKk3C,eAAiB,KACtBl3C,KAAKm3C,eAAiB,KACtBn3C,KAAKo3C,WAAa,KAClBp3C,KAAKq3C,WAAa,KAClBr3C,KAAKs3C,cAAgB,KACrBt3C,KAAKu3C,cAAgB,KACrBv3C,KAAKw3C,qBAAuB,KAC5Bx3C,KAAKy3C,qBAAuB,KAC5Bz3C,KAAK03C,WAAalB,WAAaE,gBAqyBnC,MAnyBA/1C,QAAOiB,eAAe60C,sBAAsB12C,UAAW,cACnDqH,IAGA,WAAc,MAAOpH,MAAK42C,aAC1BjY,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe60C,sBAAsB12C,UAAW,UACnDqH,IAGA,WAAc,MAAOpH,MAAK22C,SAC1BhY,YAAY,EACZC,cAAc,IAMlB6X,sBAAsB12C,UAAU43C,YAIhC,SAAUjzC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKg3C,QAAoB,OAAXxvC,OAAiBA,OAASA,OAAOowC,MACzDlzC,GAAG8C,SAOXivC,sBAAsB12C,UAAU83C,iBAIhC,SAAUnzC,IAKN,IAJA,GAAqBozC,QAAS93C,KAAKg3C,QACde,WAAa/3C,KAAKs3C,cAClB59B,gBAAkB,EAClBC,YAAc,KAC5Bm+B,QAAUC,YAAY,CAGzB,GAAqBvwC,SAAUuwC,YAC3BD,QAA6BA,OAAoB,aAAIr+B,iBAAiBs+B,WAAYr+B,gBAAiBC,aAClF,OACjBo+B,WACiBC,iBAAmBv+B,iBAAiBjS,OAAQkS,gBAAiBC,aAC7Ds+B,aAAezwC,OAAOywC,YAE3C,IAAIzwC,SAAWuwC,WACXr+B,kBACAq+B,WAAaA,WAAWG,iBAIxB,IADAJ,OAA0B,OAAWF,MACT,MAAxBpwC,OAAOoS,cACPF,sBAEC,CAEIC,cACDA,eACJ,IAAqBw+B,wBAAyBH,iBAAmBt+B,gBAC5C0+B,kBAAqC,aAAmB1+B,eAC7E,IAAIy+B,wBAA0BC,kBAAmB,CAC7C,IAAK,GAAqB7zC,GAAI,EAAGA,EAAI4zC,uBAAwB5zC,IAAK,CAC9D,GAAqB84B,QAAS94B,EAAIoV,YAAYtX,OAASsX,YAAYpV,GAAMoV,YAAYpV,GAAK,EACrE1B,MAAQw6B,OAAS94B,CAClC6zC,oBAAqBv1C,OAASA,MAAQs1C,yBACtCx+B,YAAYpV,GAAK84B,OAAS,GAGlC,GAAqBzjB,eAAgBpS,OAAOoS,aAC5CD,aAAYC,eAAiBw+B,kBAAoBD,wBAIzDH,mBAAqBC,cACrBvzC,GAAG8C,OAAQwwC,iBAAkBC,gBAQzCxB,sBAAsB12C,UAAUs4C,oBAIhC,SAAU3zC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAK+2C,gBAA4B,OAAXvvC,OAAiBA,OAASA,OAAO8wC,cACjE5zC,GAAG8C,SAOXivC,sBAAsB12C,UAAUw4C,iBAIhC,SAAU7zC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKk3C,eAA2B,OAAX1vC,OAAiBA,OAASA,OAAOgxC,WAChE9zC,GAAG8C,SAOXivC,sBAAsB12C,UAAU04C,iBAIhC,SAAU/zC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKo3C,WAAuB,OAAX5vC,OAAiBA,OAASA,OAAOkxC,WAC5Dh0C,GAAG8C,SAOXivC,sBAAsB12C,UAAU44C,mBAIhC,SAAUj0C,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKs3C,cAA0B,OAAX9vC,OAAiBA,OAASA,OAAO0wC,aAC/DxzC,GAAG8C,SAOXivC,sBAAsB12C,UAAU64C,sBAIhC,SAAUl0C,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKw3C,qBAAiC,OAAXhwC,OAAiBA,OAASA,OAAOqxC,oBACtEn0C,GAAG8C,SAOXivC,sBAAsB12C,UAAU+4C,KAIhC,SAAUC,YAGN,GAFkB,MAAdA,aACAA,gBACCrgC,mBAAmBqgC,YACpB,KAAM,IAAIjxC,OAAM,yBAA2B9C,UAAU+zC,YAAc,2CAEvE,OAAI/4C,MAAKg5C,MAAMD,YACJ/4C,KAGA,MAMfy2C,sBAAsB12C,UAAU2uC,UAGhC,aAKA+H,sBAAsB12C,UAAUi5C,MAIhC,SAAUD,YACN,GAAIhS,OAAQ/mC,IACZA,MAAKi5C,QACL,IAEqBp2C,OACAoU,KACAiiC,YAJA1xC,OAASxH,KAAKg3C,QACdmC,YAAa,CAIlC,IAAIj0C,MAAMsK,QAAQupC,YAAa,CAC3B/4C,KAAK22C,QAAUoC,WAAW12C,MAC1B,KAAK,GAAqB+2C,SAAU,EAAGA,QAAUp5C,KAAK22C,QAASyC,UAC3DniC,KAAO8hC,WAAWK,SAClBF,YAAcl5C,KAAK03C,WAAW0B,QAASniC,MACxB,OAAXzP,QAAoB3C,eAAe2C,OAAO6xC,UAAWH,cAKjDC,aAEA3xC,OAASxH,KAAKs5C,mBAAmB9xC,OAAQyP,KAAMiiC,YAAaE,UAE3Dv0C,eAAe2C,OAAOyP,KAAMA,OAC7BjX,KAAKu5C,mBAAmB/xC,OAAQyP,QATpCzP,OAASxH,KAAKw5C,UAAUhyC,OAAQyP,KAAMiiC,YAAaE,SACnDD,YAAa,GAUjB3xC,OAASA,OAAOowC,UAIpB/0C,OAAQ,EACR0W,gBAAgBw/B,WAAY,SAAU9hC,MAClCiiC,YAAcnS,MAAM2Q,WAAW70C,MAAOoU,MACvB,OAAXzP,QAAoB3C,eAAe2C,OAAO6xC,UAAWH,cAKjDC,aAEA3xC,OAASu/B,MAAMuS,mBAAmB9xC,OAAQyP,KAAMiiC,YAAar2C,QAE5DgC,eAAe2C,OAAOyP,KAAMA,OAC7B8vB,MAAMwS,mBAAmB/xC,OAAQyP,QATrCzP,OAASu/B,MAAMyS,UAAUhyC,OAAQyP,KAAMiiC,YAAar2C,OACpDs2C,YAAa,GAUjB3xC,OAASA,OAAOowC,MAChB/0C,UAEJ7C,KAAK22C,QAAU9zC,KAInB,OAFA7C,MAAKy5C,UAAUjyC,QACfxH,KAAK42C,YAAcmC,WACZ/4C,KAAK05C,SAEhB/4C,OAAOiB,eAAe60C,sBAAsB12C,UAAW,WAInDqH,IAGA,WACI,MAA+B,QAAxBpH,KAAKk3C,gBAA+C,OAApBl3C,KAAKo3C,YACjB,OAAvBp3C,KAAKs3C,eAAwD,OAA9Bt3C,KAAKw3C,sBAE5C7Y,YAAY,EACZC,cAAc,IAmBlB6X,sBAAsB12C,UAAUk5C,OAShC,WACI,GAAIj5C,KAAK05C,QAAS,CACd,GAAqBlyC,QAAS,OACTmyC,WAAa,MAClC,KAAKnyC,OAASxH,KAAK+2C,gBAAkB/2C,KAAKg3C,QAAoB,OAAXxvC,OAAiBA,OAASA,OAAOowC,MAChFpwC,OAAO8wC,cAAgB9wC,OAAOowC,KAElC,KAAKpwC,OAASxH,KAAKk3C,eAA2B,OAAX1vC,OAAiBA,OAASA,OAAOgxC,WAChEhxC,OAAOoS,cAAgBpS,OAAOywC,YAGlC,KADAj4C,KAAKk3C,eAAiBl3C,KAAKm3C,eAAiB,KACvC3vC,OAASxH,KAAKo3C,WAAuB,OAAX5vC,OAAiBA,OAASmyC,WACrDnyC,OAAOoS,cAAgBpS,OAAOywC,aAC9B0B,WAAanyC,OAAOkxC,UAExB14C,MAAKo3C,WAAap3C,KAAKq3C,WAAa,KACpCr3C,KAAKs3C,cAAgBt3C,KAAKu3C,cAAgB,KAC1Cv3C,KAAKw3C,qBAAuBx3C,KAAKy3C,qBAAuB,OA8BhEhB,sBAAsB12C,UAAUy5C,UAehC,SAAUhyC,OAAQyP,KAAMiiC,YAAar2C,OAEjC,GAAqB+2C,eAkCrB,OAjCe,QAAXpyC,OACAoyC,eAAiB55C,KAAKi3C,SAGtB2C,eAAiBpyC,OAAOqyC,MAExB75C,KAAK85C,QAAQtyC,SAGjBA,OAAiC,OAAxBxH,KAAK62C,eAA0B,KAAO72C,KAAK62C,eAAezvC,IAAI8xC,YAAar2C,OACrE,OAAX2E,QAGK3C,eAAe2C,OAAOyP,KAAMA,OAC7BjX,KAAKu5C,mBAAmB/xC,OAAQyP,MACpCjX,KAAK+5C,WAAWvyC,OAAQoyC,eAAgB/2C,SAIxC2E,OAAmC,OAA1BxH,KAAK82C,iBAA4B,KAAO92C,KAAK82C,iBAAiB1vC,IAAI8xC,YAAa,MACzE,OAAX1xC,QAGK3C,eAAe2C,OAAOyP,KAAMA,OAC7BjX,KAAKu5C,mBAAmB/xC,OAAQyP,MACpCjX,KAAKg6C,eAAexyC,OAAQoyC,eAAgB/2C,QAI5C2E,OACIxH,KAAKi6C,UAAU,GAAIC,uBAAsBjjC,KAAMiiC,aAAcU,eAAgB/2C,QAGlF2E,QA6DXivC,sBAAsB12C,UAAUu5C,mBAgChC,SAAU9xC,OAAQyP,KAAMiiC,YAAar2C,OACjC,GAAqBs3C,gBAA2C,OAA1Bn6C,KAAK82C,iBAA4B,KAAO92C,KAAK82C,iBAAiB1vC,IAAI8xC,YAAa,KAQrH,OAPuB,QAAnBiB,eACA3yC,OAASxH,KAAKg6C,eAAeG,eAAmC3yC,OAAa,MAAG3E,OAE3E2E,OAAOywC,cAAgBp1C,QAC5B2E,OAAOywC,aAAep1C,MACtB7C,KAAKo6C,YAAY5yC,OAAQ3E,QAEtB2E,QAkBXivC,sBAAsB12C,UAAU05C,UAShC,SAAUjyC,QAEN,KAAkB,OAAXA,QAAiB,CACpB,GAAqBmyC,YAAanyC,OAAOowC,KACzC53C,MAAKq6C,eAAer6C,KAAKs6C,QAAQ9yC,SACjCA,OAASmyC,WAEiB,OAA1B35C,KAAK82C,kBACL92C,KAAK82C,iBAAiB/c,QAEE,OAAxB/5B,KAAKm3C,iBACLn3C,KAAKm3C,eAAeqB,WAAa,MAEb,OAApBx4C,KAAKq3C,aACLr3C,KAAKq3C,WAAWqB,WAAa,MAEZ,OAAjB14C,KAAKi3C,UACLj3C,KAAKi3C,QAAQW,MAAQ,MAEE,OAAvB53C,KAAKu3C,gBACLv3C,KAAKu3C,cAAcW,aAAe,MAEJ,OAA9Bl4C,KAAKy3C,uBACLz3C,KAAKy3C,qBAAqBoB,oBAAsB,OAWxDpC,sBAAsB12C,UAAUi6C,eAOhC,SAAUxyC,OAAQ+yC,WAAY13C,OACI,OAA1B7C,KAAK82C,kBACL92C,KAAK82C,iBAAiBxgC,OAAO9O,OAEjC,IAAqBgzC,MAAOhzC,OAAOizC,aACdrhC,KAAO5R,OAAO0wC,YAenC,OAda,QAATsC,KACAx6C,KAAKs3C,cAAgBl+B,KAGrBohC,KAAKtC,aAAe9+B,KAEX,OAATA,KACApZ,KAAKu3C,cAAgBiD,KAGrBphC,KAAKqhC,aAAeD,KAExBx6C,KAAK06C,aAAalzC,OAAQ+yC,WAAY13C,OACtC7C,KAAKo6C,YAAY5yC,OAAQ3E,OAClB2E,QAUXivC,sBAAsB12C,UAAUg6C,WAOhC,SAAUvyC,OAAQ+yC,WAAY13C,OAI1B,MAHA7C,MAAKs6C,QAAQ9yC,QACbxH,KAAK06C,aAAalzC,OAAQ+yC,WAAY13C,OACtC7C,KAAKo6C,YAAY5yC,OAAQ3E,OAClB2E,QAUXivC,sBAAsB12C,UAAUk6C,UAOhC,SAAUzyC,OAAQ+yC,WAAY13C,OAa1B,MAZA7C,MAAK06C,aAAalzC,OAAQ+yC,WAAY13C,OACV,OAAxB7C,KAAKm3C,eAGLn3C,KAAKm3C,eAAiBn3C,KAAKk3C,eAAiB1vC,OAM5CxH,KAAKm3C,eAAiBn3C,KAAKm3C,eAAeqB,WAAahxC,OAEpDA,QAUXivC,sBAAsB12C,UAAU26C,aAOhC,SAAUlzC,OAAQ+yC,WAAY13C,OAK1B,GAAqBuW,MAAsB,OAAfmhC,WAAsBv6C,KAAKg3C,QAAUuD,WAAW3C,KAuB5E,OAnBApwC,QAAOowC,MAAQx+B,KACf5R,OAAOqyC,MAAQU,WACF,OAATnhC,KACApZ,KAAKi3C,QAAUzvC,OAGf4R,KAAKygC,MAAQryC,OAEE,OAAf+yC,WACAv6C,KAAKg3C,QAAUxvC,OAGf+yC,WAAW3C,MAAQpwC,OAEK,OAAxBxH,KAAK62C,iBACL72C,KAAK62C,eAAiB,GAAI8D,gBAE9B36C,KAAK62C,eAAe+D,IAAIpzC,QACxBA,OAAOywC,aAAep1C,MACf2E,QAQXivC,sBAAsB12C,UAAU+5C,QAKhC,SAAUtyC,QACN,MAAOxH,MAAKq6C,eAAer6C,KAAKs6C,QAAQ9yC,UAQ5CivC,sBAAsB12C,UAAUu6C,QAKhC,SAAU9yC,QACsB,OAAxBxH,KAAK62C,gBACL72C,KAAK62C,eAAevgC,OAAO9O,OAE/B,IAAqBgzC,MAAOhzC,OAAOqyC,MACdzgC,KAAO5R,OAAOowC,KAgBnC,OAZa,QAAT4C,KACAx6C,KAAKg3C,QAAU59B,KAGfohC,KAAK5C,MAAQx+B,KAEJ,OAATA,KACApZ,KAAKi3C,QAAUuD,KAGfphC,KAAKygC,MAAQW,KAEVhzC,QASXivC,sBAAsB12C,UAAUq6C,YAMhC,SAAU5yC,OAAQqzC,SAGd,MAAIrzC,QAAOoS,gBAAkBihC,QAClBrzC,QAEa,OAApBxH,KAAKq3C,WAGLr3C,KAAKq3C,WAAar3C,KAAKo3C,WAAa5vC,OAKpCxH,KAAKq3C,WAAar3C,KAAKq3C,WAAWqB,WAAalxC,OAE5CA,SAMXivC,sBAAsB12C,UAAUs6C,eAIhC,SAAU7yC,QAoBN,MAnB8B,QAA1BxH,KAAK82C,mBACL92C,KAAK82C,iBAAmB,GAAI6D,gBAEhC36C,KAAK82C,iBAAiB8D,IAAIpzC,QAC1BA,OAAOywC,aAAe,KACtBzwC,OAAO0wC,aAAe,KACK,OAAvBl4C,KAAKu3C,eAGLv3C,KAAKu3C,cAAgBv3C,KAAKs3C,cAAgB9vC,OAC1CA,OAAOizC,aAAe,OAMtBjzC,OAAOizC,aAAez6C,KAAKu3C,cAC3Bv3C,KAAKu3C,cAAgBv3C,KAAKu3C,cAAcW,aAAe1wC,QAEpDA,QASXivC,sBAAsB12C,UAAUw5C,mBAMhC,SAAU/xC,OAAQyP,MAQd,MAPAzP,QAAOyP,KAAOA,KACoB,OAA9BjX,KAAKy3C,qBACLz3C,KAAKy3C,qBAAuBz3C,KAAKw3C,qBAAuBhwC,OAGxDxH,KAAKy3C,qBAAuBz3C,KAAKy3C,qBAAqBoB,oBAAsBrxC,OAEzEA,QAEJivC,yBAKPyD,sBAAyB,WACzB,QAASA,uBAAsBjjC,KAAMoiC,WACjCr5C,KAAKiX,KAAOA,KACZjX,KAAKq5C,UAAYA,UACjBr5C,KAAKi4C,aAAe,KACpBj4C,KAAK4Z,cAAgB,KAIrB5Z,KAAKs4C,cAAgB,KAIrBt4C,KAAK65C,MAAQ,KAIb75C,KAAK43C,MAAQ,KAIb53C,KAAK86C,SAAW,KAIhB96C,KAAK+6C,SAAW,KAIhB/6C,KAAKy6C,aAAe,KAIpBz6C,KAAKk4C,aAAe,KAIpBl4C,KAAKw4C,WAAa,KAIlBx4C,KAAK04C,WAAa,KAIlB14C,KAAK64C,oBAAsB,KAE/B,MAAOqB,0BAEPc,yBAA4B,WAC5B,QAASA,4BAILh7C,KAAKi7C,MAAQ,KAIbj7C,KAAKk7C,MAAQ,KAwGjB,MA1FAF,0BAAyBj7C,UAAUo7C,IAOnC,SAAU3zC,QACa,OAAfxH,KAAKi7C,OACLj7C,KAAKi7C,MAAQj7C,KAAKk7C,MAAQ1zC,OAC1BA,OAAOuzC,SAAW,KAClBvzC,OAAOszC,SAAW,OAOlB96C,KAAW,MAAE+6C,SAAWvzC,OACxBA,OAAOszC,SAAW96C,KAAKk7C,MACvB1zC,OAAOuzC,SAAW,KAClB/6C,KAAKk7C,MAAQ1zC,SAUrBwzC,yBAAyBj7C,UAAUqH,IAKnC,SAAUiyC,UAAW+B,gBACjB,GAAqB5zC,OACrB,KAAKA,OAASxH,KAAKi7C,MAAkB,OAAXzzC,OAAiBA,OAASA,OAAOuzC,SACvD,IAAwB,OAAnBK,gBAA2BA,gBAAqC5zC,OAAoB,eACrF3C,eAAe2C,OAAO6xC,UAAWA,WACjC,MAAO7xC,OAGf,OAAO,OAcXwzC,yBAAyBj7C,UAAUuW,OAOnC,SAAU9O,QASN,GAAqBgzC,MAAOhzC,OAAOszC,SACd1hC,KAAO5R,OAAOuzC,QAanC,OAZa,QAATP,KACAx6C,KAAKi7C,MAAQ7hC,KAGbohC,KAAKO,SAAW3hC,KAEP,OAATA,KACApZ,KAAKk7C,MAAQV,KAGbphC,KAAK0hC,SAAWN,KAEE,OAAfx6C,KAAKi7C,OAETD,4BAEPL,cAAiB,WACjB,QAASA,iBACL36C,KAAKmF,IAAM,GAAIb,KA8FnB,MAxFAq2C,eAAc56C,UAAU66C,IAIxB,SAAUpzC,QACN,GAAqBhD,KAAMgD,OAAO6xC,UACbgC,WAAar7C,KAAKmF,IAAIiC,IAAI5C,IAC1C62C,cACDA,WAAa,GAAIL,0BACjBh7C,KAAKmF,IAAImC,IAAI9C,IAAK62C,aAEtBA,WAAWF,IAAI3zC,SAmBnBmzC,cAAc56C,UAAUqH,IAUxB,SAAUiyC,UAAW+B,gBACjB,GAAqB52C,KAAM60C,UACNiC,WAAat7C,KAAKmF,IAAIiC,IAAI5C,IAC/C,OAAO82C,YAAaA,WAAWl0C,IAAIiyC,UAAW+B,gBAAkB,MAcpET,cAAc56C,UAAUuW,OAOxB,SAAU9O,QACN,GAAqBhD,KAAMgD,OAAO6xC,UACbiC,WAAgCt7C,KAAKmF,IAAIiC,IAAI5C,IAKlE,OAHI82C,YAAWhlC,OAAO9O,SAClBxH,KAAKmF,IAAIoT,OAAO/T,KAEbgD,QAEX7G,OAAOiB,eAAe+4C,cAAc56C,UAAW,WAC3CqH,IAGA,WAAc,MAAyB,KAAlBpH,KAAKmF,IAAIsW,MAC9BkjB,YAAY,EACZC,cAAc,IAKlB+b,cAAc56C,UAAUg6B,MAGxB,WAAc/5B,KAAKmF,IAAI40B,SAChB4gB,iBA8BPY,6BAAgC,WAChC,QAASA,iCAoBT,MAdAA,8BAA6Bx7C,UAAUw2C,SAIvC,SAAUpuC,KAAO,MAAOA,eAAe7D,MAAOyU,WAAW5Q,MAKzDozC,6BAA6Bx7C,UAAUa,OAIvC,WAAc,MAAO,IAAI46C,wBAClBD,gCAEPC,sBAAyB,WACzB,QAASA,yBACLx7C,KAAKgiC,SAAW,GAAI19B,KACpBtE,KAAKy7C,SAAW,KAChBz7C,KAAK07C,aAAe,KACpB17C,KAAK27C,iBAAmB,KACxB37C,KAAK47C,aAAe,KACpB57C,KAAK67C,aAAe,KACpB77C,KAAKk3C,eAAiB,KACtBl3C,KAAKm3C,eAAiB,KACtBn3C,KAAKs3C,cAAgB,KACrBt3C,KAAKu3C,cAAgB,KA0VzB,MAxVA52C,QAAOiB,eAAe45C,sBAAsBz7C,UAAW,WACnDqH,IAGA,WACI,MAA+B,QAAxBpH,KAAKk3C,gBAAiD,OAAtBl3C,KAAK47C,cACjB,OAAvB57C,KAAKs3C,eAEb3Y,YAAY,EACZC,cAAc,IAMlB4c,sBAAsBz7C,UAAU43C,YAIhC,SAAUjzC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKy7C,SAAqB,OAAXj0C,OAAiBA,OAASA,OAAOowC,MAC1DlzC,GAAG8C,SAOXg0C,sBAAsBz7C,UAAUs4C,oBAIhC,SAAU3zC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAK27C,iBAA6B,OAAXn0C,OAAiBA,OAASA,OAAO8wC,cAClE5zC,GAAG8C,SAOXg0C,sBAAsBz7C,UAAU+7C,mBAIhC,SAAUp3C,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAK47C,aAAyB,OAAXp0C,OAAiBA,OAASA,OAAOu0C,aAC9Dr3C,GAAG8C,SAOXg0C,sBAAsBz7C,UAAUw4C,iBAIhC,SAAU7zC,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKk3C,eAA2B,OAAX1vC,OAAiBA,OAASA,OAAOgxC,WAChE9zC,GAAG8C,SAOXg0C,sBAAsBz7C,UAAU44C,mBAIhC,SAAUj0C,IACN,GAAqB8C,OACrB,KAAKA,OAASxH,KAAKs3C,cAA0B,OAAX9vC,OAAiBA,OAASA,OAAO0wC,aAC/DxzC,GAAG8C,SAOXg0C,sBAAsBz7C,UAAU+4C,KAIhC,SAAU3zC,KACN,GAAKA,KAGA,KAAMA,cAAeb,MAAOyU,WAAW5T,MACxC,KAAM,IAAI2C,OAAM,yBAA2B9C,UAAUG,KAAO,4CAH5DA,KAAM,GAAIb,IAKd,OAAOtE,MAAKg5C,MAAM7zC,KAAOnF,KAAO,MAKpCw7C,sBAAsBz7C,UAAU2uC,UAGhC,aAWA8M,sBAAsBz7C,UAAUi5C,MAMhC,SAAU7zC,KACN,GAAI4hC,OAAQ/mC,IACZA,MAAKi5C,QACL,IAAqB93B,cAAenhB,KAAKy7C,QAczC,IAbAz7C,KAAK07C,aAAe,KACpB17C,KAAKg8C,SAAS72C,IAAK,SAAUtD,MAAO2C,KAChC,GAAI2c,cAAgBA,aAAa3c,MAAQA,IACrCuiC,MAAMkV,mBAAmB96B,aAActf,OACvCklC,MAAM2U,aAAev6B,aACrBA,aAAeA,aAAay2B,UAE3B,CACD,GAAqBpwC,QAASu/B,MAAMmV,yBAAyB13C,IAAK3C,MAClEsf,cAAe4lB,MAAMoV,sBAAsBh7B,aAAc3Z,WAI7D2Z,aAAc,CACVA,aAAa04B,QACb14B,aAAa04B,MAAMjC,MAAQ,MAE/B53C,KAAKs3C,cAAgBn2B,YACrB,KAAK,GAAqB3Z,QAAS2Z,aAAyB,OAAX3Z,OAAiBA,OAASA,OAAO0wC,aAC1E1wC,SAAWxH,KAAKy7C,WAChBz7C,KAAKy7C,SAAW,MAEpBz7C,KAAKgiC,SAASzpB,OAAO/Q,OAAOhD,KAC5BgD,OAAO0wC,aAAe1wC,OAAOowC,MAC7BpwC,OAAO0uC,cAAgB1uC,OAAO2uC,aAC9B3uC,OAAO2uC,aAAe,KACtB3uC,OAAOqyC,MAAQ,KACfryC,OAAOowC,MAAQ,KAQvB,MAJI53C,MAAK67C,eACL77C,KAAK67C,aAAaE,aAAe,MACjC/7C,KAAKm3C,iBACLn3C,KAAKm3C,eAAeqB,WAAa,MAC9Bx4C,KAAK05C,SAahB8B,sBAAsBz7C,UAAUo8C,sBAWhC,SAAUC,OAAQ50C,QACd,GAAI40C,OAAQ,CACR,GAAqB5B,MAAO4B,OAAOvC,KAWnC,OAVAryC,QAAOowC,MAAQwE,OACf50C,OAAOqyC,MAAQW,KACf4B,OAAOvC,MAAQryC,OACXgzC,OACAA,KAAK5C,MAAQpwC,QAEb40C,SAAWp8C,KAAKy7C,WAChBz7C,KAAKy7C,SAAWj0C,QAEpBxH,KAAK07C,aAAeU,OACbA,OAUX,MARIp8C,MAAK07C,cACL17C,KAAK07C,aAAa9D,MAAQpwC,OAC1BA,OAAOqyC,MAAQ75C,KAAK07C,cAGpB17C,KAAKy7C,SAAWj0C,OAEpBxH,KAAK07C,aAAel0C,OACb,MAOXg0C,sBAAsBz7C,UAAUm8C,yBAKhC,SAAU13C,IAAK3C,OACX,GAAI7B,KAAKgiC,SAAS7H,IAAI31B,KAAM,CACxB,GAAqB63C,UAA8Br8C,KAAKgiC,SAAS56B,IAAI5C,IACrExE,MAAKi8C,mBAAmBI,SAAUx6C,MAClC,IAAqB24C,MAAO6B,SAASxC,MAChBzgC,KAAOijC,SAASzE,KASrC,OARI4C,QACAA,KAAK5C,MAAQx+B,MAEbA,OACAA,KAAKygC,MAAQW,MAEjB6B,SAASzE,MAAQ,KACjByE,SAASxC,MAAQ,KACVwC,SAEX,GAAqB70C,QAAS,GAAI80C,uBAAsB93C,IAIxD,OAHAxE,MAAKgiC,SAAS16B,IAAI9C,IAAKgD;AACvBA,OAAO2uC,aAAet0C,MACtB7B,KAAKu8C,gBAAgB/0C,QACdA,QAOXg0C,sBAAsBz7C,UAAUk5C,OAIhC,WACI,GAAIj5C,KAAK05C,QAAS,CACd,GAAqBlyC,QAAS,MAG9B,KADAxH,KAAK27C,iBAAmB37C,KAAKy7C,SACxBj0C,OAASxH,KAAK27C,iBAA6B,OAAXn0C,OAAiBA,OAASA,OAAOowC,MAClEpwC,OAAO8wC,cAAgB9wC,OAAOowC,KAIlC,KAAKpwC,OAASxH,KAAK47C,aAAyB,OAAXp0C,OAAiBA,OAASA,OAAOu0C,aAC9Dv0C,OAAO0uC,cAAgB1uC,OAAO2uC,YAElC,KAAK3uC,OAASxH,KAAKk3C,eAA0B,MAAV1vC,OAAgBA,OAASA,OAAOgxC,WAC/DhxC,OAAO0uC,cAAgB1uC,OAAO2uC,YAElCn2C,MAAK47C,aAAe57C,KAAK67C,aAAe,KACxC77C,KAAKk3C,eAAiBl3C,KAAKm3C,eAAiB,KAC5Cn3C,KAAKs3C,cAAgB,OAQ7BkE,sBAAsBz7C,UAAUk8C,mBAKhC,SAAUz0C,OAAQg1C,UACT33C,eAAe23C,SAAUh1C,OAAO2uC,gBACjC3uC,OAAO0uC,cAAgB1uC,OAAO2uC,aAC9B3uC,OAAO2uC,aAAeqG,SACtBx8C,KAAKy8C,cAAcj1C,UAO3Bg0C,sBAAsBz7C,UAAUw8C,gBAIhC,SAAU/0C,QACsB,OAAxBxH,KAAKk3C,eACLl3C,KAAKk3C,eAAiBl3C,KAAKm3C,eAAiB3vC,QAGzBxH,KAAoB,eAAEw4C,WAAahxC,OACtDxH,KAAKm3C,eAAiB3vC,SAO9Bg0C,sBAAsBz7C,UAAU08C,cAIhC,SAAUj1C,QACoB,OAAtBxH,KAAK47C,aACL57C,KAAK47C,aAAe57C,KAAK67C,aAAer0C,QAGrBxH,KAAkB,aAAE+7C,aAAev0C,OACtDxH,KAAK67C,aAAer0C,SAU5Bg0C,sBAAsBz7C,UAAUi8C,SAOhC,SAAU7zC,IAAKzD,IACPyD,cAAe7D,KACf6D,IAAI2G,QAAQpK,IAGZ/D,OAAOyD,KAAK+D,KAAK2G,QAAQ,SAAU9D,GAAK,MAAOtG,IAAGyD,IAAI6C,GAAIA,MAG3DwwC,yBAKPc,sBAAyB,WACzB,QAASA,uBAAsB93C,KAC3BxE,KAAKwE,IAAMA,IACXxE,KAAKk2C,cAAgB,KACrBl2C,KAAKm2C,aAAe,KAIpBn2C,KAAKs4C,cAAgB,KAIrBt4C,KAAK43C,MAAQ,KAIb53C,KAAK65C,MAAQ,KAIb75C,KAAKw4C,WAAa,KAIlBx4C,KAAKk4C,aAAe,KAIpBl4C,KAAK+7C,aAAe,KAExB,MAAOO,0BA6DPI,gBAAmB,WACnB,QAASA,iBAAgBvS,WACrBnqC,KAAKmqC,UAAYA,UAoHrB,MA7GAuS,iBAAgB97C,OAKhB,SAAUupC,UAAWziC,QACjB,GAAc,MAAVA,OAAgB,CAChB,GAAqBi1C,QAASj1C,OAAOyiC,UAAUt/B,OAE/C,OADAs/B,WAAYA,UAAUjnC,OAAOy5C,QACtB,GAAID,iBAAgBvS,WAG3B,MAAO,IAAIuS,iBAAgBvS,YA2CnCuS,gBAAgBE,OAqBhB,SAAUzS,WACN,OACI5jC,QAASm2C,gBACTh2C,WAAY,SAAUgB,QAClB,IAAKA,OAID,KAAM,IAAII,OAAM,0DAEpB,OAAO40C,iBAAgB97C,OAAOupC,UAAWziC,SAG7CxB,OAAQw2C,gBAAiB,GAAI5zC,UAAY,GAAID,cAOrD6zC,gBAAgB38C,UAAUmzC,KAI1B,SAAU2J,UACN,GAAqBx9C,SAAUW,KAAKmqC,UAAU+I,KAAK,SAAUpD,GAAK,MAAOA,GAAEyG,SAASsG,WACpF,IAAe,MAAXx9C,QACA,MAAOA,QAGP,MAAM,IAAIyI,OAAM,2CAA6C+0C,SAAW,cAAgB/iC,wBAAwB+iC,UAAY,MAG7HH,mBAsDPI,gBAAmB,WACnB,QAASA,iBAAgB3S,WACrBnqC,KAAKmqC,UAAYA,UAkHrB,MA1GA2S,iBAAgBl8C,OAMhB,SAAUupC,UAAWziC,QACjB,GAAIA,OAAQ,CACR,GAAqBi1C,QAASj1C,OAAOyiC,UAAUt/B,OAC/Cs/B,WAAYA,UAAUjnC,OAAOy5C,QAEjC,MAAO,IAAIG,iBAAgB3S,YA2C/B2S,gBAAgBF,OAsBhB,SAAUzS,WACN,OACI5jC,QAASu2C,gBACTp2C,WAAY,SAAUgB,QAClB,IAAKA,OAGD,KAAM,IAAII,OAAM,0DAEpB,OAAOg1C,iBAAgBl8C,OAAOupC,UAAWziC,SAG7CxB,OAAQ42C,gBAAiB,GAAIh0C,UAAY,GAAID,cAOrDi0C,gBAAgB/8C,UAAUmzC,KAI1B,SAAU6J,IACN,GAAqB19C,SAAUW,KAAKmqC,UAAU+I,KAAK,SAAUpD,GAAK,MAAOA,GAAEyG,SAASwG,KACpF,IAAI19C,QACA,MAAOA,QAEX,MAAM,IAAIyI,OAAM,2CAA6Ci1C,GAAK,MAE/DD,mBAiBPE,YAAc,GAAIzB,+BAIlB0B,cAAgB,GAAI3G,+BACpBt8B,uBAAyB,GAAI0iC,iBAAgBO,cAC7C/iC,uBAAyB,GAAI4iC,iBAAgBE,YA8B7CE,2BAEE32C,QAASmiC,YAAajiC,SAAU,YAChCF,QAAS8nC,aAAcnoC,MAAOuC,YAC9BlC,QAAS4O,YAAaxO,YAAa0nC,eACnC9nC,QAAS8mC,oBAAqBnnC,UAC9BK,QAASsiC,QAAS3iC,UAOpBi3C,aAAe5nC,sBAAsB,KAAM,OAAQ2nC,0BAgBnDE,UAAY,GAAIxtC,gBAAe,YAI/BytC,aAAe,GAAIztC,gBAAe,gBAIlC0tC,oBAAsB,GAAI1tC,gBAAe,sBAEzC2tC,4BACAz1C,MAAO,EACP01C,QAAS,EACTC,OAAQ,EAEZF,4BAA2BA,2BAA2Bz1C,OAAS,QAC/Dy1C,2BAA2BA,2BAA2BC,SAAW,UACjED,2BAA2BA,2BAA2BE,QAAU,QAsChE,IAAIC,mBAAqB,WAErB,QAASA,mBAAkB/N,SAwB3B,MAtBA+N,mBAAkB/Z,aACZ59B,KAAM+6B,SAAU5+B,OACNiM,WACI8hC,iBACE1pC,QAASqpC,eAAgBjpC,YAAaspC,iBACxCrI,sBACAuB,SACAV,wBACEliC,QAASm2C,gBAAiBh2C,WAAYqT,0BACtCxT,QAASu2C,gBAAiBp2C,WAAYuT,0BAEpC1T,QAAS62C,UACT12C,WAAYyT,eACZjU,OAAQ,GAAI8C,QAAOo0C,WAAY,GAAIv0C,UAAY,GAAIC,kBAM3E40C,kBAAkBna,eAAiB,WAAc,QAC3Cx9B,KAAM6pC,kBAEL8N,qBAQP31B,iBACA41B,KAAM,EACNC,KAAM,EACN51B,MAAO,EACP61B,OAAQ,EACRC,IAAK,EACLC,aAAc,EAElBh2B,iBAAgBA,gBAAgB41B,MAAQ,OACxC51B,gBAAgBA,gBAAgB61B,MAAQ,OACxC71B,gBAAgBA,gBAAgBC,OAAS,QACzCD,gBAAgBA,gBAAgB81B,QAAU,SAC1C91B,gBAAgBA,gBAAgB+1B,KAAO,MACvC/1B,gBAAgBA,gBAAgBg2B,cAAgB,cAOhD,IAAIvkB,WAAa,WACb,QAASA,cAET,MAAOA,cAiNPwkB,aAAgB,WAChB,QAASA,iBAET,MAAOA,iBAUP9gC,UACA0S,eAAiC,OACjCiF,eAAiC,OACjCL,mBAAqC,OACrCM,oBAAsC,OACtChI,kBAAoC,OACpC+K,iBAAmC,OACnCC,uBAAyC,OACzC9B,mBAAqC,OACrCJ,mBAAqC,OACrCgB,YAA8B,OAC9BpI,WAA6B,OAC7BrR,mBAAqC,OACrCa,YAA8B,OAC9BkV,iBAAmC,OACnCC,eAAiC,OACjC9I,mBAAqC,QAyFrC1K,KAAO,aACPnE,eAAiB,GAAIlX,KAgCrB8X,2BAA6B,cAC7BS,uBAAyB,UAazBD,iBAAmB,EAgPnB8C,iBAAmB,GAAIu+B,SAiKvB18B,aAAe,kBAmGf28B,eACAC,aA0YAv1B,cAAgB,GAAIjoB,QACpBuoB,sBAAwB3N,SAAS9S,UACjC0gB,oBAAsB5N,SAASivB,aAyX/B4T,cAAgB,GAAIz9C,QAoBpBqrB,kBAAqB,SAAUue,QAE/B,QAASve,mBAAkBL,SAAUC,cAAeC,eAAgBwyB,QAASC,SAAUvyB,oBACnF,GAAIgb,OAGJwD,OAAOlpC,KAAKrB,OAASA,IAOrB,OANA+mC,OAAMpb,SAAWA,SACjBob,MAAMnb,cAAgBA,cACtBmb,MAAMsX,QAAUA,QAChBtX,MAAMuX,SAAWA,SACjBvX,MAAMhb,mBAAqBA,mBAC3Bgb,MAAMlb,eAAiBA,eAChBkb,MAiEX,MA7EA1mC,WAAU2rB,kBAAmBue,QAc7B5pC,OAAOiB,eAAeoqB,kBAAkBjsB,UAAW,UAC/CqH,IAGA,WACI,GAAqBm3C,cACAzyB,OAA4B9rB,KAAa,OAC9D,KAAK,GAAqBwC,YAAYspB,QAAQ,CAC1C,GAAqB0yB,cAAe1yB,OAAOtpB,SAC3C+7C,WAAUz8C,MAAOU,SAAUA,SAAUg8C,aAAcA,eAEvD,MAAOD,YAEX5f,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeoqB,kBAAkBjsB,UAAW,WAC/CqH,IAGA,WACI,GAAqBq3C,cACrB,KAAK,GAAqBj8C,YAAYxC,MAAKs+C,SAAU,CACjD,GAAqBE,cAAex+C,KAAKs+C,SAAS97C,SAClDi8C,YAAW38C,MAAOU,SAAUA,SAAUg8C,aAAcA,eAExD,MAAOC,aAEX9f,YAAY,EACZC,cAAc,IAalB5S,kBAAkBjsB,UAAUa,OAQ5B,SAAUsK,SAAU0V,iBAAkBuE,mBAAoBmE,UACtD,IAAKA,SACD,KAAM,IAAIxhB,OAAM,8BAEpB,IAAqB+iB,SAAUpL,kBAAkBzf,KAAK6rB,gBACjC6yB,mBAA2D7zB,QAAQtQ,MAAM,GAAW,QAAoB,kBAAE1X,MAC1GyX,KAAO4C,SAAS2X,eAAe3pB,SAAU0V,qBAAwBuE,mBAAoB0F,QAASvB,SAAU80B,eACxGvtC,UAAY4J,eAAeH,KAAMokC,oBAAoB50B,QAI1E,OAHI3E,qBACA7K,KAAK0F,SAASyF,aAAajL,cAAcF,KAAM,GAAGgE,cAAe,aAAc6iB,QAAQF,MAEpF,GAAI0d,eAAcrkC,KAAM,GAAIgS,UAAShS,MAAOzJ,YAEhDmb,mBACT8d,kBACE6U,cAAiB,SAAUpU,QAE3B,QAASoU,eAAcC,MAAOC,SAAUC,YACpC,GAAI/X,OAAQwD,OAAOlpC,KAAKrB,OAASA,IAKjC,OAJA+mC,OAAM6X,MAAQA,MACd7X,MAAM8X,SAAWA,SACjB9X,MAAM+X,WAAaA,WACnB/X,MAAMgY,OAAShY,MAAM6X,MAAM5iC,IAAIzB,MAAM,GAC9BwsB,MAuEX,MA9EA1mC,WAAUs+C,cAAepU,QASzB5pC,OAAOiB,eAAe+8C,cAAc5+C,UAAW,YAC3CqH,IAGA,WACI,MAAO,IAAI0nB,YAAWtU,cAAcxa,KAAK4+C,MAAO5+C,KAAK++C,OAAOl8C,OAAOyb,gBAEvEqgB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+8C,cAAc5+C,UAAW,YAC3CqH,IAGA,WAAc,MAAO,IAAIslB,WAAU1sB,KAAK4+C,MAAO5+C,KAAK++C,SACpDpgB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe+8C,cAAc5+C,UAAW,YAC3CqH,IAGA,WAAc,MAAOpH,MAAK8+C,YAC1BngB,YAAY,EACZC,cAAc,IAGlBj+B,OAAOiB,eAAe+8C,cAAc5+C,UAAW,YAC3CqH,IAGA,WAAc,MAAOpH,MAAK6+C,UAC1BlgB,YAAY,EACZC,cAAc,IAGlBj+B,OAAOiB,eAAe+8C,cAAc5+C,UAAW,qBAC3CqH,IAGA,WAAc,MAAOpH,MAAK6+C,UAC1BlgB,YAAY,EACZC,cAAc,IAGlBj+B,OAAOiB,eAAe+8C,cAAc5+C,UAAW,iBAC3CqH,IAGA,WAAc,MAAyBpH,MAAK8+C,WAAsB,aAClEngB,YAAY,EACZC,cAAc,IAKlB+f,cAAc5+C,UAAUiW,QAGxB,WAAchW,KAAK6+C,SAAS7oC,WAK5B2oC,cAAc5+C,UAAU2uC,UAIxB,SAAUh7B,UAAY1T,KAAK6+C,SAASnQ,UAAUh7B,WACvCirC,eACT9U,cAUEzd,kBAAqB,WACrB,QAASA,mBAAkBwyB,MAAOG,OAAQC,OACtCh/C,KAAK4+C,MAAQA,MACb5+C,KAAK++C,OAASA,OACd/+C,KAAKg/C,MAAQA,MAIbh/C,KAAKihB,kBAkMT,MAhMAtgB,QAAOiB,eAAewqB,kBAAkBrsB,UAAW,WAC/CqH,IAGA,WAAc,MAAO,IAAI0nB,YAAW9uB,KAAKg/C,MAAM1gC,gBAC/CqgB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAewqB,kBAAkBrsB,UAAW,YAC/CqH,IAGA,WAAc,MAAO,IAAIslB,WAAU1sB,KAAK4+C,MAAO5+C,KAAK++C,SACpDpgB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAewqB,kBAAkBrsB,UAAW,kBAC/CqH,IAGA,WAGI,IAFA,GAAqBkT,MAAOta,KAAK4+C,MACZ15B,MAAQllB,KAAK++C,OAAOr3C,QACjCwd,OAAS5K,MACb4K,MAAQ9G,aAAa9D,MACrBA,KAA0BA,KAAY,MAE1C,OAAOA,MAAO,GAAIoS,WAAUpS,KAAM4K,OAAS,GAAIwH,WAAU1sB,KAAK4+C,MAAO,OAEzEjgB,YAAY,EACZC,cAAc,IAKlBxS,kBAAkBrsB,UAAUg6B,MAG5B,WAEI,IAAK,GADgBrQ,KAAM1pB,KAAKihB,eAAe5e,OACrBkC,EAAImlB,IAAM,EAAGnlB,GAAK,EAAGA,IAAK,CAChD,GAAqB+V,MAA0B0Q,mBAAmBhrB,KAAKg/C,MAAOz6C,EAC9E2Y,UAAS0Z,YAAYtc,QAO7B8R,kBAAkBrsB,UAAUqH,IAI5B,SAAUvE,OACN,GAAqByX,MAAOta,KAAKihB,eAAepe,MAChD,IAAIyX,KAAM,CACN,GAAqB2kC,KAAM,GAAI3yB,UAAShS,KAExC,OADA2kC,KAAIC,yBAAyBl/C,MACtBi/C,IAEX,MAAO,OAEXt+C,OAAOiB,eAAewqB,kBAAkBrsB,UAAW,UAC/CqH,IAGA,WAAc,MAAOpH,MAAKihB,eAAe5e,QACzCs8B,YAAY,EACZC,cAAc,IAUlBxS,kBAAkBrsB,UAAUy0B,mBAO5B,SAAU2qB,YAAa91C,QAASxG,OAC5B,GAAqByuC,SAAU6N,YAAY3qB,mBAAmBnrB,YAE9D,OADArJ,MAAKo/C,OAAO9N,QAASzuC,OACdyuC,SAWXllB,kBAAkBrsB,UAAUs/C,gBAS5B,SAAUnzB,iBAAkBrpB,MAAOqI,SAAU0V,iBAAkB0+B,aAC3D,GAAqBC,iBAAkBr0C,UAAYlL,KAAK25B,cACnD2lB,cAAiBpzB,2BAA4Boe,iCAC9CgV,YAAcC,gBAAgBn4C,IAAIojC,aAEtC,IAAqBuH,cAAe7lB,iBAAiBtrB,OAAO2+C,gBAAiB3+B,iBAAkBxY,OAAWk3C,YAE1G,OADAt/C,MAAKo/C,OAAOrN,aAAatxB,SAAU5d,OAC5BkvC,cAOX3lB,kBAAkBrsB,UAAUq/C,OAK5B,SAAU9N,QAASzuC,OACf,GAAIyuC,QAAQr8B,UACR,KAAM,IAAInN,OAAM,qDAEpB,IAAqB03C,UAA4B,QAC5BC,SAAWD,SAASZ,KAGzC,OAFA50B,oBAAmBhqB,KAAK4+C,MAAO5+C,KAAKg/C,MAAOn8C,MAAO48C,UAClDD,SAASN,yBAAyBl/C,MAC3BsxC,SAOXllB,kBAAkBrsB,UAAU2/C,KAK5B,SAAUpO,QAAS2G,cACf,GAAI3G,QAAQr8B,UACR,KAAM,IAAInN,OAAM,mDAEpB,IAAqB8R,eAAgB5Z,KAAKihB,eAAexb,QAAQ6rC,QAAQsN,MAEzE,OADAxzB,kBAAiBprB,KAAKg/C,MAAOplC,cAAeq+B,cACrC3G,SAMXllB,kBAAkBrsB,UAAU0F,QAI5B,SAAU6rC,SACN,MAAOtxC,MAAKihB,eAAexb,QAAQ,QAA6Bm5C,QAMpExyB,kBAAkBrsB,UAAUuW,OAI5B,SAAUzT,OACN,GAAqB48C,UAAWz0B,mBAAmBhrB,KAAKg/C,MAAOn8C,MAC3D48C,WACAviC,SAAS0Z,YAAY6oB,WAO7BrzB,kBAAkBrsB,UAAU4/C,OAI5B,SAAU98C,OACN,GAAqByX,MAAO0Q,mBAAmBhrB,KAAKg/C,MAAOn8C,MAC3D,OAAOyX,MAAO,GAAIgS,UAAShS,MAAQ,MAEhC8R,qBASPE,SAAY,WACZ,QAASA,UAASsyB,OACd5+C,KAAK4+C,MAAQA,MACb5+C,KAAK4/C,kBAAoB,KACzB5/C,KAAK6/C,QAAU,KA0InB,MAxIAl/C,QAAOiB,eAAe0qB,SAASvsB,UAAW,aACtCqH,IAGA,WAAc,MAAOwY,iBAAgB5f,KAAK4+C,QAC1CjgB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0qB,SAASvsB,UAAW,WACtCqH,IAGA,WAAc,MAAOpH,MAAK4+C,MAAMv1C,SAChCs1B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAe0qB,SAASvsB,UAAW,aACtCqH,IAGA,WAAc,MAAoD,MAAzB,IAAnBpH,KAAK4+C,MAAM7hC,QACjC4hB,YAAY,EACZC,cAAc,IAKlBtS,SAASvsB,UAAU+/C,aAGnB,WAAc1iC,wBAAwBpd,KAAK4+C,QAI3CtyB,SAASvsB,UAAU4/C,OAGnB,WAAc3/C,KAAK4+C,MAAM7hC,QAAS,GAIlCuP,SAASvsB,UAAU06B,cAGnB,WACI,GAAqBslB,IAAK//C,KAAK4+C,MAAM3gC,KAAKiX,eACtC6qB,IAAGC,OACHD,GAAGC,QAEP9iC,SAAS8Y,mBAAmBh2B,KAAK4+C,OAC7BmB,GAAGtvB,KACHsvB,GAAGtvB,OAMXnE,SAASvsB,UAAU26B,eAGnB,WAAcxd,SAAS0Y,mBAAmB51B,KAAK4+C,QAI/CtyB,SAASvsB,UAAUkgD,SAGnB,WAAcjgD,KAAK4+C,MAAM7hC,OAAS,GAKlCuP,SAASvsB,UAAU2uC,UAInB,SAAUh7B,UACD1T,KAAK4+C,MAAMxpB,cACZp1B,KAAK4+C,MAAMxpB,gBAEfp1B,KAAK4+C,MAAMxpB,YAAYtzB,KAAsB,WAKjDwqB,SAASvsB,UAAUiW,QAGnB,WACQhW,KAAK6/C,QACL7/C,KAAK6/C,QAAQrO,WAAWxxC,MAEnBA,KAAK4/C,mBACV5/C,KAAK4/C,kBAAkBD,OAAO3/C,KAAK4/C,kBAAkBn6C,QAAQzF,OAEjEkd,SAAS0Z,YAAY52B,KAAK4+C,QAK9BtyB,SAASvsB,UAAU0xC,iBAGnB,WACIzxC,KAAK6/C,QAAU,KACf30B,iBAAiBlrB,KAAK4+C,OACtB1hC,SAASmN,mBAAmBrqB,KAAK4+C,QAMrCtyB,SAASvsB,UAAUwxC,eAInB,SAAU5B,QACN,GAAI3vC,KAAK4/C,kBACL,KAAM,IAAI93C,OAAM,oDAEpB9H,MAAK6/C,QAAUlQ,QAMnBrjB,SAASvsB,UAAUm/C,yBAInB,SAAUgB,OACN,GAAIlgD,KAAK6/C,QACL,KAAM,IAAI/3C,OAAM,gEAEpB9H,MAAK4/C,kBAAoBM,OAEtB5zB,YAUPE,aAAgB,SAAU+d,QAE1B,QAAS/d,cAAa2zB,YAAaz3B,MAC/B,GAAIqe,OAAQwD,OAAOlpC,KAAKrB,OAASA,IAGjC,OAFA+mC,OAAMoZ,YAAcA,YACpBpZ,MAAMre,KAAOA,KACNqe,MAuBX,MA5BA1mC,WAAUmsB,aAAc+d,QAWxB/d,aAAazsB,UAAUy0B,mBAIvB,SAAUnrB,SACN,MAAO,IAAIijB,UAASpP,SAASsX,mBAAmBx0B,KAAKmgD,YAAangD,KAAK0oB,KAA4C1oB,KAAK0oB,KAAa,QAAW,SAAGrf,WAEvJ1I,OAAOiB,eAAe4qB,aAAazsB,UAAW,cAC1CqH,IAGA,WACI,MAAO,IAAI0nB,YAAWtU,cAAcxa,KAAKmgD,YAAangD,KAAK0oB,KAAK7lB,OAAOyb,gBAE3EqgB,YAAY,EACZC,cAAc,IAEXpS,cACT6nB,aASE3nB,UAAa,WACb,QAASA,WAAUpS,KAAM4K,OACrBllB,KAAKsa,KAAOA,KACZta,KAAKklB,MAAQA,MAiBjB,MAVAwH,WAAU3sB,UAAUqH,IAKpB,SAAUnC,MAAO0C,eACS,SAAlBA,gBAA4BA,cAAgBc,SAASC,mBACzD,IAAqB8kB,wBAAuBxtB,KAAKklB,OAA8D,KAAlC,SAAnBllB,KAAKklB,MAAM9T,MACrE,OAAO8L,UAASsR,WAAWxuB,KAAKsa,KAAMta,KAAKklB,MAAOsI,sBAAwBpc,MAAO,EAAcnM,MAAOA,MAAOsW,SAAUA,SAAStW,QAAU0C,gBAEvI+kB,aA4BPG,gBAAmB,WACnB,QAASA,iBAAgB3Z,UACrBlT,KAAKkT,SAAWA,SA8RpB,MAxRA2Z,iBAAgB9sB,UAAUwlB,kBAI1B,SAAUH,gBACN,MAAOplB,MAAKkT,SAASqS,kBAAkBH,iBAO3CyH,gBAAgB9sB,UAAUklB,cAK1B,SAAUvd,OAAQwc,kBACd,GAAIlhB,IAAKqe,eAAe6C,kBAAmBR,GAAK1gB,GAAG,GAAIlC,KAAOkC,GAAG,GAC5CwT,GAAKxW,KAAKkT,SAAS+R,cAAcnkB,KAAM4iB,GAI5D,OAHIhc,SACA1H,KAAKkT,SAASgO,YAAYxZ,OAAQ8O,IAE/BA,IAMXqW,gBAAgB9sB,UAAUqgD,eAI1B,SAAUrrB,aAAe,MAAOA,cAKhClI,gBAAgB9sB,UAAUsgD,qBAI1B,SAAUC,eACN,GAAqBC,SAAUvgD,KAAKkT,SAASmS,cAAc,GAI3D,OAHIi7B,gBACAtgD,KAAKkT,SAASgO,YAAYo/B,cAAeC,SAEtCA,SAOX1zB,gBAAgB9sB,UAAU6yB,WAK1B,SAAU0tB,cAAez+C,OACrB,GAAqBiW,MAAO9X,KAAKkT,SAAS0f,WAAW/wB,MAIrD,OAHIy+C,gBACAtgD,KAAKkT,SAASgO,YAAYo/B,cAAexoC,MAEtCA,MAOX+U,gBAAgB9sB,UAAUygD,aAK1B,SAAUF,cAAe/lC,OACrB,IAAK,GAAqBhW,GAAI,EAAGA,EAAIgW,MAAMlY,OAAQkC,IAC/CvE,KAAKkT,SAASgO,YAAYo/B,cAAe/lC,MAAMhW,KAQvDsoB,gBAAgB9sB,UAAU0gD,gBAK1B,SAAU3oC,KAAM4oC,eAGZ,IAAK,GAFgBJ,eAAgBtgD,KAAKkT,SAAS+E,WAAWH,MACzCiI,YAAc/f,KAAKkT,SAAS6M,YAAYjI,MACnCvT,EAAI,EAAGA,EAAIm8C,cAAcr+C,OAAQkC,IACvDvE,KAAKkT,SAASiO,aAAam/B,cAAeI,cAAcn8C,GAAIwb,cAOpE8M,gBAAgB9sB,UAAUyxC,WAI1B,SAAUkP,eACN,IAAK,GAAqBn8C,GAAI,EAAGA,EAAIm8C,cAAcr+C,OAAQkC,IAAK,CAC5D,GAAqBuT,MAAO4oC,cAAcn8C,GACrB+7C,cAAgBtgD,KAAKkT,SAAS+E,WAAWH,KAC9D9X,MAAKkT,SAASkO,YAAYk/B,cAAexoC,QAQjD+U,gBAAgB9sB,UAAU62B,YAK1B,SAAU7B,YAAa4rB,cACnB,IAAK,GAAqBp8C,GAAI,EAAGA,EAAIo8C,aAAat+C,OAAQkC,IACnCvE,KAAKkT,SAAqB,YAAEytC,aAAap8C,KASpEsoB,gBAAgB9sB,UAAUkmB,OAM1B,SAAU3H,cAAexd,KAAM4S,UAC3B,MAAO1T,MAAKkT,SAAS+S,OAAO3H,cAAexd,KAAuB,WAQtE+rB,gBAAgB9sB,UAAU6gD,aAM1B,SAAUr9C,OAAQzC,KAAM4S,UACpB,MAAO1T,MAAKkT,SAAS+S,OAAO1iB,OAAQzC,KAAuB,WAQ/D+rB,gBAAgB9sB,UAAUynB,mBAM1B,SAAUlJ,cAAeuiC,aAAcC,eACnC9gD,KAAKkT,SAASkV,YAAY9J,cAAeuiC,aAAcC,gBAQ3Dj0B,gBAAgB9sB,UAAUqnB,oBAM1B,SAAU9I,cAAe4F,iBAAkB68B,gBACvC,GAAI/9C,IAAKqe,eAAe6C,kBAAmBR,GAAK1gB,GAAG,GAAIlC,KAAOkC,GAAG,EAC3C,OAAlB+9C,eACA/gD,KAAKkT,SAASuS,aAAanH,cAAexd,KAAMigD,eAAgBr9B,IAGhE1jB,KAAKkT,SAAS0U,gBAAgBtJ,cAAexd,KAAM4iB,KAS3DmJ,gBAAgB9sB,UAAUihD,oBAM1B,SAAU1iC,cAAeuiC,aAAcC,iBAOvCj0B,gBAAgB9sB,UAAUsnB,gBAM1B,SAAU/I,cAAe2iC,UAAWC,OAC5BA,MACAlhD,KAAKkT,SAAS2U,SAASvJ,cAAe2iC,WAGtCjhD,KAAKkT,SAAS4U,YAAYxJ,cAAe2iC,YASjDp0B,gBAAgB9sB,UAAUunB,gBAM1B,SAAUhJ,cAAe6iC,UAAWC,YACd,MAAdA,WACAphD,KAAKkT,SAASgV,SAAS5J,cAAe6iC,UAAWC,YAGjDphD,KAAKkT,SAASiV,YAAY7J,cAAe6iC,YASjDt0B,gBAAgB9sB,UAAUshD,oBAM1B,SAAU/iC,cAAegjC,WAAYp/C,MACjC,cAAmCo/C,YAAY/+C,MAAM+b,cAAepc,OAOxE2qB,gBAAgB9sB,UAAUwhD,QAK1B,SAAUp6B,cAAeje,MAAQlJ,KAAKkT,SAAS6f,SAAS5L,cAAeje,OAIvE2jB,gBAAgB9sB,UAAUyhD,QAG1B,WAAc,KAAM,IAAI15C,OAAM,6CACvB+kB,mBAYPG,aAAgB,WAChB,QAASA,cAAay0B,YAAaz4B,QAAS6mB,qBAAsBnnB,MAC9D1oB,KAAKyhD,YAAcA,YACnBzhD,KAAKgpB,QAAUA,QACfhpB,KAAK6vC,qBAAuBA,qBAC5B7vC,KAAK0oB,KAAOA,KACZ1oB,KAAKwuC,qBACLxuC,KAAKyuC,YAAa,EAClBhmB,aAAazoB,MA+DjB,MAxDAgtB,cAAajtB,UAAUqH,IAKvB,SAAUnC,MAAO0C,eAEb,MADsB,UAAlBA,gBAA4BA,cAAgBc,SAASC,oBAClDogB,mBAAmB9oB,MAAQiF,MAAOA,MAAOsW,SAAUA,SAAStW,OAAQmM,MAAO,GAAgBzJ,gBAEtGhH,OAAOiB,eAAeorB,aAAajtB,UAAW,YAC1CqH,IAGA,WAAc,MAAOpH,MAAKoH,IAAIpH,KAAKyhD,cACnC9iB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeorB,aAAajtB,UAAW,4BAC1CqH,IAGA,WAAc,MAAOpH,MAAKoH,IAAI6iC,2BAC9BtL,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeorB,aAAajtB,UAAW,YAC1CqH,IAGA,WAAc,MAAOpH,OACrB2+B,YAAY,EACZC,cAAc,IAKlB5R,aAAajtB,UAAUiW,QAGvB,WACI,GAAIhW,KAAKyuC,WACL,KAAM,IAAI3mC,OAAM,iBAAmB9C,UAAUhF,KAAK8pB,SAASrpB,aAAe,+BAE9ET,MAAKyuC,YAAa,EAClB7kB,sBAAsB5pB,KAAM,QAC5BA,KAAKwuC,kBAAkB1/B,QAAQ,SAAU6/B,UAAY,MAAOA,eAMhE3hB,aAAajtB,UAAU2uC,UAIvB,SAAUh7B,UAAY1T,KAAKwuC,kBAAkB1sC,KAAK4R,WAC3CsZ,gBAcP0B,mBAAqBnT,SAASg3B,UAC9B3jB,kBAAoBrT,SAASq3B,WAC7B/jB,mBAAqBtT,SAASuT,YAC9BC,yBAA2BxT,SAAS+4B,kBACpCrlB,oBAAsB1T,SAAS84B,aAC/B5lB,0BAA4BlT,SAASg5B,mBACrCplB,oBAAsB5T,SAAS9S,UAC/B4kB,YAAc,GAAI1sB,QAqWlB0uB,yCAsgDAoG,YACAC,gBAAiB,EACjBK,eAAgB,EAChBoB,6BAA8B,EAC9BlB,eAAgB,EAChBmB,6BAA8B,EAC9BP,QAAS,EAEbpB,YAAWA,WAAWC,iBAAmB,kBACzCD,WAAWA,WAAWM,gBAAkB,iBACxCN,WAAWA,WAAW0B,8BAAgC,+BACtD1B,WAAWA,WAAWQ,gBAAkB,iBACxCR,WAAWA,WAAW2B,8BAAgC,+BACtD3B,WAAWA,WAAWoB,SAAW;;;;;;;AAmKjC,GAAIY,cAAc,EA4JdqC,kBAAoB,GAAIx1B,KA6LxBi1B,aACA34B,OAAQ,EACR65B,cAAe,EACfC,eAAgB,EAChB1kB,QAAS,EACTgI,YAAa,EAEjBub,aAAYA,YAAY34B,QAAU,SAClC24B,YAAYA,YAAYkB,eAAiB,gBACzClB,YAAYA,YAAYmB,gBAAkB,iBAC1CnB,YAAYA,YAAYvjB,SAAW,UACnCujB,YAAYA,YAAYvb,aAAe,aACvC,IAAIid,gBACAN,aACAC,kBA8JAe,kBAAoB,WAuDpB3D,cAAiB,WACjB,QAASA,eAAc1d,KAAMoD,WACzB1d,KAAKsa,KAAOA,KACZta,KAAK0d,UAAYA,UACA,MAAbA,YACA1d,KAAK0d,UAAYA,UAAY,GAEjC1d,KAAK6d,QAAUvD,KAAK0B,IAAIzB,MAAMmD,UAG9B,KAFA,GAAqBwH,OAAQllB,KAAK6d,QACb6jC,OAASpnC,KACvB4K,OAAiD,KAAzB,EAAdA,MAAM9T,QACnB8T,MAA2BA,MAAa,MAE5C,KAAKA,MACD,MAAQA,OAASw8B,QACbx8B,MAA2B9G,aAAasjC,QACxCA,OAA4BA,OAAc,MAGlD1hD,MAAKklB,MAAQA,MACbllB,KAAK0hD,OAASA,OAiJlB,MA/IA/gD,QAAOiB,eAAeo2B,cAAcj4B,UAAW,gBAC3CqH,IAGA,WAEI,MAAOoT,eAAcxa,KAAK0hD,OAAQ1hD,KAAKklB,MAAMriB,OAAOkb,eAAiB/d,KAAKsa,MAE9EqkB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,YAC3CqH,IAGA,WAAc,MAAOqlB,gBAAezsB,KAAK0hD,OAAQ1hD,KAAKklB,QACtDyZ,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,aAC3CqH,IAGA,WAAc,MAAOpH,MAAK2hD,aAAa9wC,WACvC8tB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,WAC3CqH,IAGA,WAAc,MAAOpH,MAAK2hD,aAAat4C,SACvCs1B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,kBAC3CqH,IAGA,WACI,GAAqBg2B,UACrB,IAAIp9B,KAAKklB,MACL,IAAK,GAAqB3gB,GAAIvE,KAAKklB,MAAMriB,MAAQ,EAAG0B,GAAKvE,KAAKklB,MAAMriB,MAAQ7C,KAAKklB,MAAM7E,WAAY9b,IAAK,CACpG,GAAqBq9C,UAAW5hD,KAAK0hD,OAAO1lC,IAAIzB,MAAMhW,EACjC,OAAjBq9C,SAASxwC,OACTgsB,OAAOt7B,KAAwB8/C,SAAkB,SAAE38C,OAEvDV,GAAKq9C,SAASvhC,WAGtB,MAAO+c,SAEXuB,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,cAC3CqH,IAGA,WACI,GAAqB6X,cACrB,IAAIjf,KAAKklB,MAAO,CACZ+W,kBAAkBj8B,KAAK0hD,OAAQ1hD,KAAKklB,MAAOjG,WAC3C,KAAK,GAAqB1a,GAAIvE,KAAKklB,MAAMriB,MAAQ,EAAG0B,GAAKvE,KAAKklB,MAAMriB,MAAQ7C,KAAKklB,MAAM7E,WAAY9b,IAAK,CACpG,GAAqBq9C,UAAW5hD,KAAK0hD,OAAO1lC,IAAIzB,MAAMhW,EACjC,OAAjBq9C,SAASxwC,OACT6qB,kBAAkBj8B,KAAK0hD,OAAQE,SAAU3iC,YAE7C1a,GAAKq9C,SAASvhC,YAGtB,MAAOpB,aAEX0f,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,0BAC3CqH,IAGA,WACI,GAAqB8f,QAAS8U,gBAAgBh8B,KAAK2hD,aACnD,OAAOz6B,QAASA,OAAO5I,cAAgBlW,QAE3Cu2B,YAAY,EACZC,cAAc,IAElBj+B,OAAOiB,eAAeo2B,cAAcj4B,UAAW,cAC3CqH,IAGA,WACI,MAA4B,GAArBpH,KAAK6d,QAAQzM,MAA2BiN,WAAWre,KAAKsa,KAAMta,KAAK6d,SACtEQ,WAAWre,KAAK0hD,OAAQ1hD,KAAKklB,QAErCyZ,YAAY,EACZC,cAAc,IAOlB5G,cAAcj4B,UAAUqb,SAKxB,SAAU/Q,SAEN,IAAK,GADD/H,WACKH,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCG,OAAOH,GAAK,GAAKC,UAAUD,GAE/B,IAAqB0/C,YACAC,YACI,GAArB9hD,KAAK6d,QAAQzM,OACbywC,WAAa7hD,KAAKsa,KAAK0B,IACvB8lC,aAAe9hD,KAAK6d,QAAQhb,QAG5Bg/C,WAAa7hD,KAAK0hD,OAAO1lC,IACzB8lC,aAAe9hD,KAAKklB,MAAMriB,MAI9B,IAAqBk5B,iBAAkBD,mBAAmB+lB,WAAYC,cACjDC,qBAAsB,EACtBC,WAAa,WAE9B,MADAD,uBACIA,sBAAwBhmB,iBAChB/4B,GAAKqH,QAAQP,OAAO7G,KAAKV,MAAMS,IAAKqH,SAASnH,OAAOZ,SAGrDqd,IAEX,IAAI3c,IAEN6+C,YAAmB,QAAEG,YACnBD,oBAAsBhmB,kBACtB1xB,QAAQP,MAAM,qEACdO,QAAQP,MAAMvH,MAAM8H,QAAS/H,UAG9B01B,iBAyEPmB,sBAAyB,WACzB,QAASA,uBAAsBjmB,UAC3BlT,KAAKkT,SAAWA,SAiDpB,MA1CAimB,uBAAsBp5B,UAAUo1B,eAKhC,SAAUzd,QAASuqC,YACf,MAAO,IAAIC,gBAAeliD,KAAKkT,SAASiiB,eAAezd,QAASuqC,cAKpE9oB,sBAAsBp5B,UAAUigD,MAGhC,WACQhgD,KAAKkT,SAAS8sC,OACdhgD,KAAKkT,SAAS8sC,SAMtB7mB,sBAAsBp5B,UAAU0wB,IAGhC,WACQzwB,KAAKkT,SAASud,KACdzwB,KAAKkT,SAASud,OAMtB0I,sBAAsBp5B,UAAUoiD,kBAGhC,WACI,MAAIniD,MAAKkT,SAASivC,kBACPniD,KAAKkT,SAASivC,oBAElBna,QAAQpC,QAAQ,OAEpBzM,yBAEP+oB,eAAkB,WAClB,QAASA,gBAAehvC,UACpBlT,KAAKkT,SAAWA,SAqVpB,MAnVAvS,QAAOiB,eAAesgD,eAAeniD,UAAW,QAC5CqH,IAGA,WAAc,MAAOpH,MAAKkT,SAASqJ,MACnCoiB,YAAY,EACZC,cAAc,IAMlBsjB,eAAeniD,UAAU+2B,YAIzB,SAAUhf,MACNQ,yBAA4CJ,aAAaJ,OACrD9X,KAAKkT,SAAS4jB,aACd92B,KAAKkT,SAAS4jB,YAAYhf,OAMlCoqC,eAAeniD,UAAUiW,QAGzB,WAAchW,KAAKkT,SAAS8C,WAM5BksC,eAAeniD,UAAUklB,cAKzB,SAAUnkB,KAAMshD,WACZ,GAAqB5rC,IAAKxW,KAAKkT,SAAS+R,cAAcnkB,KAAMshD,WACvCC,SAAW9lB,wBAChC,IAAI8lB,SAAU,CACV,GAAqBC,SAAU,GAAIvqC,cAAavB,GAAI,KAAM6rC,SAC1DC,SAAQxhD,KAAOA,KACfuX,eAAeiqC,SAEnB,MAAO9rC,KAMX0rC,eAAeniD,UAAUslB,cAIzB,SAAUxjB,OACN,GAAqB0+C,SAAUvgD,KAAKkT,SAASmS,cAAcxjB,OACtCwgD,SAAW9lB,wBAIhC,OAHI8lB,WACAhqC,eAAe,GAAIs8B,WAAU4L,QAAS,KAAM8B,WAEzC9B,SAMX2B,eAAeniD,UAAU6yB,WAIzB,SAAU/wB,OACN,GAAqBqH,MAAOlJ,KAAKkT,SAAS0f,WAAW/wB,OAChCwgD,SAAW9lB,wBAIhC,OAHI8lB,WACAhqC,eAAe,GAAIs8B,WAAUzrC,KAAM,KAAMm5C,WAEtCn5C,MAOXg5C,eAAeniD,UAAUmhB,YAKzB,SAAUxZ,OAAQ6tC,UACd,GAAqB+M,SAAUpqC,aAAaxQ,QACvB66C,aAAerqC,aAAaq9B,SAC7C+M,UAAWC,cAAgBD,kBAAmBvqC,eAC9CuqC,QAAQzN,SAAS0N,cAErBviD,KAAKkT,SAASgO,YAAYxZ,OAAQ6tC,WAQtC2M,eAAeniD,UAAUohB,aAMzB,SAAUzZ,OAAQ6tC,SAAUD,UACxB,GAAqBgN,SAAUpqC,aAAaxQ,QACvB66C,aAAerqC,aAAaq9B,UAC5BiN,WAAgCtqC,aAAao9B,SAC9DgN,UAAWC,cAAgBD,kBAAmBvqC,eAC9CuqC,QAAQnhC,aAAaqhC,WAAYD,cAErCviD,KAAKkT,SAASiO,aAAazZ,OAAQ6tC,SAAUD,WAOjD4M,eAAeniD,UAAUqhB,YAKzB,SAAU1Z,OAAQ+6C,UACd,GAAqBH,SAAUpqC,aAAaxQ,QACvB66C,aAAerqC,aAAauqC,SAC7CH,UAAWC,cAAgBD,kBAAmBvqC,eAC9CuqC,QAAQlhC,YAAYmhC,cAExBviD,KAAKkT,SAASkO,YAAY1Z,OAAQ+6C,WAMtCP,eAAeniD,UAAUwlB,kBAIzB,SAAUH,gBACN,GAAqB5O,IAAKxW,KAAKkT,SAASqS,kBAAkBH,gBACrCi9B,SAAW9lB,wBAIhC,OAHI8lB,WACAhqC,eAAe,GAAIN,cAAavB,GAAI,KAAM6rC,WAEvC7rC,IASX0rC,eAAeniD,UAAU0lB,aAOzB,SAAUjP,GAAI1V,KAAMe,MAAOugD,WACvB,GAAqBE,SAAUpqC,aAAa1B,GAC5C,IAAI8rC,SAAWA,kBAAmBvqC,cAAc,CAC5C,GAAqB2qC,UAAWN,UAAYA,UAAY,IAAMthD,KAAOA,IACrEwhD,SAAQvN,WAAW2N,UAAY7gD,MAEnC7B,KAAKkT,SAASuS,aAAajP,GAAI1V,KAAMe,MAAOugD,YAQhDF,eAAeniD,UAAU6nB,gBAMzB,SAAUpR,GAAI1V,KAAMshD,WAChB,GAAqBE,SAAUpqC,aAAa1B,GAC5C,IAAI8rC,SAAWA,kBAAmBvqC,cAAc,CAC5C,GAAqB2qC,UAAWN,UAAYA,UAAY,IAAMthD,KAAOA,IACrEwhD,SAAQvN,WAAW2N,UAAY,KAEnC1iD,KAAKkT,SAAS0U,gBAAgBpR,GAAI1V,KAAMshD,YAO5CF,eAAeniD,UAAU8nB,SAKzB,SAAUrR,GAAI1V,MACV,GAAqBwhD,SAAUpqC,aAAa1B,GACxC8rC,UAAWA,kBAAmBvqC,gBAC9BuqC,QAAQtN,QAAQl0C,OAAQ,GAE5Bd,KAAKkT,SAAS2U,SAASrR,GAAI1V,OAO/BohD,eAAeniD,UAAU+nB,YAKzB,SAAUtR,GAAI1V,MACV,GAAqBwhD,SAAUpqC,aAAa1B,GACxC8rC,UAAWA,kBAAmBvqC,gBAC9BuqC,QAAQtN,QAAQl0C,OAAQ,GAE5Bd,KAAKkT,SAAS4U,YAAYtR,GAAI1V,OASlCohD,eAAeniD,UAAUmoB,SAOzB,SAAU1R,GAAImsC,MAAO9gD,MAAOuP,OACxB,GAAqBkxC,SAAUpqC,aAAa1B,GACxC8rC,UAAWA,kBAAmBvqC,gBAC9BuqC,QAAQjmC,OAAOsmC,OAAS9gD,OAE5B7B,KAAKkT,SAASgV,SAAS1R,GAAImsC,MAAO9gD,MAAOuP,QAQ7C8wC,eAAeniD,UAAUooB,YAMzB,SAAU3R,GAAImsC,MAAOvxC,OACjB,GAAqBkxC,SAAUpqC,aAAa1B,GACxC8rC,UAAWA,kBAAmBvqC,gBAC9BuqC,QAAQjmC,OAAOsmC,OAAS,MAE5B3iD,KAAKkT,SAASiV,YAAY3R,GAAImsC,MAAOvxC,QAQzC8wC,eAAeniD,UAAUqoB,YAMzB,SAAU5R,GAAI1V,KAAMe,OAChB,GAAqBygD,SAAUpqC,aAAa1B,GACxC8rC,UAAWA,kBAAmBvqC,gBAC9BuqC,QAAQvvC,WAAWjS,MAAQe,OAE/B7B,KAAKkT,SAASkV,YAAY5R,GAAI1V,KAAMe,QAQxCqgD,eAAeniD,UAAUkmB,OAMzB,SAAU1iB,OAAQoa,UAAWjK,UACzB,GAAsB,gBAAXnQ,QAAqB,CAC5B,GAAqB++C,SAAUpqC,aAAa3U,OACxC++C,UACAA,QAAQtQ,UAAUlwC,KAAK,GAAI4yC,eAAc/2B,UAAWjK,WAG5D,MAAO1T,MAAKkT,SAAS+S,OAAO1iB,OAAQoa,UAAWjK,WAMnDwuC,eAAeniD,UAAUkY,WAIzB,SAAUH,MAAQ,MAAO9X,MAAKkT,SAAS+E,WAAWH,OAKlDoqC,eAAeniD,UAAUggB,YAIzB,SAAUjI,MAAQ,MAAO9X,MAAKkT,SAAS6M,YAAYjI,OAMnDoqC,eAAeniD,UAAUgzB,SAKzB,SAAUjb,KAAMjW,OAAS,MAAO7B,MAAKkT,SAAS6f,SAASjb,KAAMjW,QACtDqgD,kBAsCPvlB,iBAAoB,SAAU4N,QAE9B,QAAS5N,kBAAiB/lB,WAAYi5B,qBAAsB+S,qBACxD,GAAI7b,OAGJwD,OAAOlpC,KAAKrB,OAASA,IAIrB,OAHA+mC,OAAMnwB,WAAaA,WACnBmwB,MAAM8I,qBAAuBA,qBAC7B9I,MAAM6b,oBAAsBA,oBACrB7b,MAeX,MAxBA1mC,WAAUs8B,iBAAkB4N,QAe5B5N,iBAAiB58B,UAAUa,OAI3B,SAAU+4B,gBACNnC,sBACA,IAAqBxb,KAAMyD,kBAAkBzf,KAAK4iD,oBAClD,OAAO1lC,UAAS4P,kBAAkB9sB,KAAK4W,WAAY+iB,gBAAkBlxB,SAASq5B,KAAM9hC,KAAK6vC,qBAAsB7zB,MAE5G2gB,kBACT8N,iBAkkCEoY,WAAa,GAmHjBvjD,SAAQyV,eAAiBA,eACzBzV,QAAQuW,eAAiBA,eACzBvW,QAAQyW,gBAAkBA,gBAC1BzW,QAAQsW,YAAcA,YACtBtW,QAAQ6V,YAAcA,YACtB7V,QAAQswC,eAAiBA,eACzBtwC,QAAQqV,eAAiBA,eACzBrV,QAAQwV,UAAYA,UACpBxV,QAAQiW,sBAAwBA,sBAChCjW,QAAQ8uC,aAAeA,aACvB9uC,QAAQkpC,OAASA,OACjBlpC,QAAQspC,iBAAmBA,iBAC3BtpC,QAAQ+V,qBAAuBA,qBAC/B/V,QAAQopC,YAAcA,YACtBppC,QAAQqpC,uBAAyBA,uBACjCrpC,QAAQqoC,gBAAkBA,gBAC1BroC,QAAQsoC,sBAAwBA,sBAChCtoC,QAAQyY,aAAeA,aACvBzY,QAAQq1C,UAAYA,UACpBr1C,QAAQgY,iBAAmBA,iBAC3BhY,QAAQ4Y,aAAeA,aACvB5Y,QAAQgtC,YAAcA,YACtBhtC,QAAQ+tC,oBAAsBA,oBAC9B/tC,QAAQkV,qBAAuBA,qBAC/BlV,QAAQ+9C,aAAeA,aACvB/9C,QAAQg+C,oBAAsBA,oBAC9Bh+C,QAAQ89C,UAAYA,UACpB99C,QAAQi+C,2BAA6BA,2BACrCj+C,QAAQo+C,kBAAoBA,kBAC5Bp+C,QAAQqrC,eAAiBA,eACzBrrC,QAAQsrC,SAAWA,SACnBtrC,QAAQwrC,kBAAoBA,kBAC5BxrC,QAAQyrC,gBAAkBA,gBAC1BzrC,QAAQyP,KAAOA,KACfzP,QAAQ0rC,aAAeA,aACvB1rC,QAAQm6B,aAAeA,aACvBn6B,QAAQk6B,UAAYA,UACpBl6B,QAAQyoB,gBAAkBA,gBAC1BzoB,QAAQu/B,6BAA+BA,6BACvCv/B,QAAQw/B,UAAYA,UACpBx/B,QAAQ8/B,aAAeA,aACvB9/B,QAAQ2/B,gBAAkBA,gBAC1B3/B,QAAQ0/B,MAAQA,MAChB1/B,QAAQggC,UAAYA,UACpBhgC,QAAQ+/B,aAAeA,aACvB//B,QAAQ2gC,UAAYA,UACpB3gC,QAAQygC,UAAYA,UACpBzgC,QAAQmhC,YAAcA,YACtBnhC,QAAQqhC,aAAeA,aACvBrhC,QAAQghC,MAAQA,MAChBhhC,QAAQkhC,OAASA,OACjBlhC,QAAQ8gC,KAAOA,KACf9gC,QAAQshC,uBAAyBA,uBACjCthC,QAAQuhC,iBAAmBA,iBAC3BvhC,QAAQwhC,SAAWA,SACnBxhC,QAAQod,kBAAoBA,kBAC5Bpd,QAAQ0hC,QAAUA,QAClB1hC,QAAQ6hC,QAAUA,QAClB7hC,QAAQqG,WAAaA,WACrBrG,QAAQwG,kBAAoBA,kBAC5BxG,QAAQmJ,SAAWA,SACnBnJ,QAAQqmC,mBAAqBA,mBAC7BrmC,QAAQyO,0BAA4BA,0BACpCzO,QAAQsO,cAAgBA,cACxBtO,QAAQsQ,eAAiBA,eACzBtQ,QAAQ0J,OAASA,OACjB1J,QAAQuJ,SAAWA,SACnBvJ,QAAQ8hC,WAAaA,WACrB9hC,QAAQyJ,KAAOA,KACfzJ,QAAQwJ,SAAWA,SACnBxJ,QAAQ+hC,KAAOA,KACf/hC,QAAQmsC,OAASA,OACjBnsC,QAAQ4yC,oBAAsBA,oBAC9B5yC,QAAQizC,SAAWA,SACnBjzC,QAAQszC,UAAYA,UACpBtzC,QAAQ25B,iBAAmBA,iBAC3B35B,QAAQmzC,oBAAsBA,oBAC9BnzC,QAAQkzC,aAAeA,aACvBlzC,QAAQqqC,iBAAmBA,iBAC3BrqC,QAAQ6pC,SAAWA,SACnB7pC,QAAQsqC,gBAAkBA,gBAC1BtqC,QAAQ0pC,6BAA+BA,6BACvC1pC,QAAQwqC,iBAAmBA,iBAC3BxqC,QAAQuqC,aAAeA,aACvBvqC,QAAQ2qC,yBAA2BA,yBACnC3qC,QAAQwvB,WAAaA,WACrBxvB,QAAQmrC,gBAAkBA,gBAC1BnrC,QAAQkrC,YAAcA,YACtBlrC,QAAQuzC,sBAAwBA,sBAChCvzC,QAAQuX,iBAAmBA,iBAC3BvX,QAAQ+wB,UAAYA,UACpB/wB,QAAQo0C,uBAAyBA,uBACjCp0C,QAAQg0C,6BAA+BA,6BACvCh0C,QAAQ+0C,YAAcA,YACtB/0C,QAAQg1C,iBAAmBA,iBAC3Bh1C,QAAQm1C,gBAAkBA,gBAC1Bn1C,QAAQk1C,QAAUA,QAClBl1C,QAAQuE,wBAA0BA,wBAClCvE,QAAQi1C,kBAAoBA,kBAC5Bj1C,QAAQm3C,sBAAwBA,sBAChCn3C,QAAQo9C,gBAAkBA,gBAC1Bp9C,QAAQw9C,gBAAkBA,gBAC1Bx9C,QAAQiwB,aAAeA,aACvBjwB,QAAQuc,aAAeA,aACvBvc,QAAQ69C,aAAeA,aACvB79C,QAAQwjD,0BAA4B5tC,yBACpC5V,QAAQyjD,wBAA0Bta,uBAClCnpC,QAAQ0jD,gBAAkBjN,eAC1Bz2C,QAAQ2jD,cAAgBzqC,aACxBlZ,QAAQ4jD,oBAAsBxqC,mBAC9BpZ,QAAQ6jD,sBAAwB3jB,qBAChClgC,QAAQ8jD,kCAAoCz/C,iCAC5CrE,QAAQ+jD,SAAWxa,QACnBvpC,QAAQgkD,kBAAoBxZ,iBAC5BxqC,QAAQikD,iCAAmCrZ,gCAC3C5qC,QAAQkkD,wBAA0B3gB,uBAClCvjC,QAAQmkD,iBAAmBnR,gBAC3BhzC,QAAQokD,QAAUx/C,QAClB5E,QAAQqkD,gBAAkB9+C,eAC1BvF,QAAQskD,WAAa5+C,UACrB1F,QAAQukD,eAAiBhjD,cACzBvB,QAAQwkD,cAAgB5zC,aACxB5Q,QAAQykD,WAAa/zC,UACrB1Q,QAAQ0kD,wBAA0BlsB,uBAClCx4B,QAAQ2kD,kBAAoBpsB,iBAC5Bv4B,QAAQ4kD,uCAAyC70B,sCACjD/vB,QAAQ6kD,uBAAyBztC,sBACjCpX,QAAQ8kD,aAAelG,YACvB5+C,QAAQ+kD,WAAalG,UACrB7+C,QAAQglD,KAAOphC,UACf5jB,QAAQilD,KAAO74B,uBACfpsB,QAAQklD,KAAOhoB,sBACfl9B,QAAQmlD,KAAOtoC,oBACf7c,QAAQolD,KAAOz3B,aACf3tB,QAAQqlD,KAAO1gC,WACf3kB,QAAQslD,sBAAwBpmC,qBAChClf,QAAQulD,mCAAqC54B,kCAC7C3sB,QAAQwlD,mBAAqBhjC,kBAC7BxiB,QAAQylD,aAAerjC,YACvBpiB,QAAQ0lD,KAAOz8B,UACfjpB,QAAQ2lD,KAAO58B,iBACf/oB,QAAQ4lD,KAAOxzB,aACfpyB,QAAQ6lD,KAAOx4B,UACfrtB,QAAQ8lD,KAAOj4B,QACf7tB,QAAQ+lD,KAAOj8B,YACf9pB,QAAQgmD,KAAOvzB,aACfzyB,QAAQimD,KAAOvzB,cACf1yB,QAAQkmD,KAAO5zB,YACftyB,QAAQmmD,KAAOx1B,SACf3wB,QAAQomD,KAAOjzB,QACfnzB,QAAQqmD,KAAOjqC,YACfpc,QAAQsmD,KAAO/6B,QACfvrB,QAAQujD,WAAaA,WACrBvjD,QAAQumD,QAAUjoB,WAClBt+B,QAAQkiD,QAAU3jB,WAClBv+B,QAAQwmD,MAAQhoB,SAChBx+B,QAAQymD,SAAWhoB,YACnBz+B,QAAQqjD,MAAQ3kB,SAChB1+B,QAAQyd,MAAQkhB,SAChB3+B,QAAQ0mD,UAAY9nB,aACpB5+B,QAAQ2mD,WAAa9nB,cACrB7+B,QAAQ4mD,GAAKppB,UACbx9B,QAAQ6mD,IAAMnpB,QACd19B,QAAQ8mD,IAAM7oB,YACdj+B,QAAQ+mD,IAAMnpB,WACd59B,QAAQgnD,IAAMhpB,QACdh+B,QAAQinD,IAAMppB,QACd79B,QAAQknD,IAAMhpB,aACdl+B,QAAQmnD,GAAK7pB,UACbt9B,QAAQonD,GAAK3sC,wBACbza,QAAQqnD,GAAK1sC,wBACb3a,QAAQsnD,GAAKzsC,eACb7a,QAAQunD,GAAK5W,gBACb3wC,QAAQwnD,GAAKzY,aACb/uC,QAAQynD,GAAK32C,4BACb9Q,QAAQ0nD,GAAKhtC,uBACb1a,QAAQ2nD,GAAK/sC,uBACb5a,QAAQ4nD,GAAK5Q,6BACbh3C,QAAQ6nD,GAAK5L,6BACbj8C,QAAQ8nD,GAAKvlB,eACbviC,QAAQ+nD,GAAKrhB,oBACb1mC,QAAQgoD,GAAK55C,qBACbpO,QAAQioD,GAAKr5C,2BACb5O,QAAQkoD,GAAK9c,WACbprC,QAAQmoD,GAAKt2C,YACb7R,QAAQooD,GAAK32C,UACbzR,QAAQqoD,GAAK91C,aACbvS,QAAQsoD,GAAKv2C,MACb/R,QAAQuoD,GAAKp2C,eACbnS,QAAQwoD,GAAKrlD,mBACbnD,QAAQyoD,GAAKr/B,KACbppB,QAAQ0oD,GAAKhK,aAEbr9C,OAAOiB,eAAetC,QAAS,cAAgBuC,OAAO","file":"/Users/matsko/code/angular/dist/packages-dist/core/bundles/core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    Object.defineProperty(InjectionToken.prototype, \"ngMetadataName\", {\n        /** @internal */\n        get: /**\n         * \\@internal\n         * @return {?}\n         */\n        function () { return 'InjectionToken'; },\n        enumerable: true,\n        configurable: true\n    });\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n    }\n    Object.defineProperty(Version.prototype, \"major\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.full.split('.')[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"minor\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.full.split('.')[1]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"patch\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.full.split('.').slice(2).join('.'); },\n        enumerable: true,\n        configurable: true\n    });\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-beta.7');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n    }\n    Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n        /**\n         * Returns a stringified token.\n         */\n        get: /**\n         * Returns a stringified token.\n         * @return {?}\n         */\n        function () { return stringify(this.token); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this._parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        inj._parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this._parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_._parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this._done = false;\n        this._donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            _this._done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._done; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._donePromise; },\n        enumerable: true,\n        configurable: true\n    });\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     */\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    Compiler.prototype.getNgContentSelectors = /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) { throw _throwError(); };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueue in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\n\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n * @abstract\n */\nvar PlatformRef = (function () {\n    function PlatformRef() {\n    }\n    return PlatformRef;\n}());\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar PlatformRef_ = (function (_super) {\n    __extends(PlatformRef_, _super);\n    function PlatformRef_(_injector) {\n        var _this = _super.call(this) || this;\n        _this._injector = _injector;\n        _this._modules = [];\n        _this._destroyListeners = [];\n        _this._destroyed = false;\n        return _this;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PlatformRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModuleFactory = /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    function (moduleFactory) {\n        return this._bootstrapModuleFactoryWithZone(moduleFactory);\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleFactoryWithZone = /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    function (moduleFactory, ngZone) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        if (!ngZone)\n            ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModule = /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleWithZone = /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    function (moduleType, compilerOptions, ngZone) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef_.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    PlatformRef_.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef_.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef_;\n}(PlatformRef));\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n * @abstract\n */\nvar ApplicationRef = (function () {\n    function ApplicationRef() {\n    }\n    return ApplicationRef;\n}());\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar ApplicationRef_ = (function (_super) {\n    __extends(ApplicationRef_, _super);\n    function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = _super.call(this) || this;\n        _this._zone = _zone;\n        _this._console = _console;\n        _this._injector = _injector;\n        _this._exceptionHandler = _exceptionHandler;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._initStatus = _initStatus;\n        _this._bootstrapListeners = [];\n        _this._rootComponents = [];\n        _this._rootComponentTypes = [];\n        _this._views = [];\n        _this._runningTick = false;\n        _this._enforceNoNewChanges = false;\n        _this._stable = true;\n        _this._enforceNoNewChanges = isDevMode();\n        _this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        _this._isStable = rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n        return _this;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.attachView = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.detachView = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef_.prototype.bootstrap = /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this._rootComponentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this._rootComponents.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this._rootComponents, componentRef);\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.tick = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef_._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._rootComponentTypes; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._rootComponents; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"isStable\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._isStable; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef_.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef_.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef_;\n}(ApplicationRef));\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this._dirty = true;\n        this._results = [];\n        this._emitter = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"changes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._emitter; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        this._dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { this._emitter.emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { this._dirty = true; };\n    Object.defineProperty(QueryList.prototype, \"dirty\", {\n        /** internal */\n        get: /**\n         * internal\n         * @return {?}\n         */\n        function () { return this._dirty; },\n        enumerable: true,\n        configurable: true\n    });\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        this._emitter.complete();\n        this._emitter.unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    \n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this._length = 0;\n        this._collection = null;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._collection; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            this._length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this._length = index;\n        }\n        this._truncate(record);\n        this._collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n           * which will only be applied to the injector for this component and its children.\n           * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef_, deps: [Injector] },\n    { provide: PlatformRef, useExisting: PlatformRef_ },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef_,\n                        { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.index), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).index);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.index).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.index).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).index).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).index + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).index + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.index, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.index);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOT_CREATED$1 = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        providers[i] = provDef.flags & 4096 /* LazyProvider */ ? NOT_CREATED$1 :\n            _createProviderInstance$1(data, provDef);\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === NOT_CREATED$1) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== NOT_CREATED$1) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).index;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._component; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.index);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.index).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.index).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & 4096 /* LazyProvider */ ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).index, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    var /** @type {?} */ injectable;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = /** @type {?} */ ((providerDef)).value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.index).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.index).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.index).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.index);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.index).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).index).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.index + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.index + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.index) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).index).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        var /** @type {?} */ value = void 0;\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                value = asElementData(view, nodeDef.index).renderElement;\n                break;\n            case 0 /* ElementRef */:\n                value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n                break;\n            case 2 /* TemplateRef */:\n                value = asElementData(view, nodeDef.index).template;\n                break;\n            case 3 /* ViewContainerRef */:\n                value = asElementData(view, nodeDef.index).viewContainer;\n                break;\n            case 4 /* Provider */:\n                value = asProviderData(view, nodeDef.index).instance;\n                break;\n        }\n        return value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nfunction textDef(ngContentIndex, constants) {\n    var /** @type {?} */ bindings = new Array(constants.length - 1);\n    for (var /** @type {?} */ i = 1; i < constants.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: constants[i]\n        };\n    }\n    var /** @type {?} */ flags = 2;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: constants[0] },\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        while (currentParent && i > currentParent.index + currentParent.childCount) {\n            var /** @type {?} */ newParent = currentParent.parent;\n            if (newParent) {\n                newParent.childFlags |= /** @type {?} */ ((currentParent.childFlags));\n                newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n            }\n            currentParent = newParent;\n        }\n        var /** @type {?} */ node = nodes[i];\n        node.index = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        // renderParent needs to account for ng-container!\n        var /** @type {?} */ currentRenderParent = void 0;\n        if (currentParent && currentParent.flags & 1 /* TypeElement */ &&\n            !/** @type {?} */ ((currentParent.element)).name) {\n            currentRenderParent = currentParent.renderParent;\n        }\n        else {\n            currentRenderParent = currentParent;\n        }\n        node.renderParent = currentRenderParent;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element && node.element.template) {\n            viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (node.childCount) {\n            currentParent = node;\n        }\n    }\n    while (currentParent) {\n        var /** @type {?} */ newParent = currentParent.parent;\n        if (newParent) {\n            newParent.childFlags |= currentParent.childFlags;\n            newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return /** @type {?} */ ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP,\n        handleEvent: handleEvent || NOOP,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.index + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n        if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.index + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).index).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).index).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 16384 /* TypeDirective */:\n            changed =\n                checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed =\n                checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n            break;\n        case 16384 /* TypeDirective */:\n            changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            break;\n    }\n    if (changed) {\n        // Update oldValues after all bindings have been updated,\n        // as a setter for a property might update other properties.\n        var /** @type {?} */ bindLen = nodeDef.bindings.length;\n        var /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n        var /** @type {?} */ oldValues = view.oldValues;\n        for (var /** @type {?} */ i = 0; i < bindLen; i++) {\n            oldValues[bindingStart + i] = values[i];\n        }\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.index), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.index);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).index);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= 4096 /* LazyProvider */;\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & 3840 /* CatProviderNoDirective */) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= 4096 /* LazyProvider */;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.index).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.index;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.index;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).index);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Injectable = Injectable;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearProviderOverrides = clearProviderOverrides;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵz = animate$1;\nexports.ɵba = group$1;\nexports.ɵbe = keyframes$1;\nexports.ɵbb = sequence$1;\nexports.ɵbd = state$1;\nexports.ɵbc = style$1;\nexports.ɵbf = transition$1;\nexports.ɵy = trigger$1;\nexports.ɵm = _iterableDiffersFactory;\nexports.ɵn = _keyValueDiffersFactory;\nexports.ɵo = _localeFactory;\nexports.ɵg = ApplicationRef_;\nexports.ɵf = PlatformRef_;\nexports.ɵh = _appIdRandomProviderFactory;\nexports.ɵi = defaultIterableDiffers;\nexports.ɵj = defaultKeyValueDiffers;\nexports.ɵk = DefaultIterableDifferFactory;\nexports.ɵl = DefaultKeyValueDifferFactory;\nexports.ɵb = StaticInjector;\nexports.ɵc = ReflectiveInjector_;\nexports.ɵd = ReflectiveDependency;\nexports.ɵe = resolveReflectiveProviders;\nexports.ɵp = wtfEnabled;\nexports.ɵr = createScope;\nexports.ɵq = detectWTF;\nexports.ɵu = endTimeRange;\nexports.ɵs = leave;\nexports.ɵt = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵv = _def;\nexports.ɵw = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}